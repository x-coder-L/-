2021-01-08 20:20:37.716 INFO  22832 [           main] [com.jeesite.modules.Application        ] - Starting Application on DESKTOP-0IUV8EB with PID 22832 (C:\Users\Lx\work2\web\src\main\webapp\WEB-INF\classes started by Lx in C:\Users\Lx\work2\web)
2021-01-08 20:20:37.741 DEBUG 22832 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2021-01-08 20:20:37.742 INFO  22832 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2021-01-08 20:20:41.821 INFO  22832 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2021-01-08 20:20:41.823 INFO  22832 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2021-01-08 20:20:44.176 INFO  22832 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/Lx
2021-01-08 20:20:44.176 INFO  22832 [           main] [com.jeesite.common.config.Global       ] - user.dir: C:/Users/Lx/work2/web
2021-01-08 20:20:44.176 INFO  22832 [           main] [com.jeesite.common.config.Global       ] - logPath: C:/Users/Lx/work2/web/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.2 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：adfb80499b32e1492729a84d62f8cd98
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2021-01-08 20:20:44.202 WARN  22832 [           main] [com.jeesite.common.config.Global       ] - 

===================================================================

    类型: mysql
    驱动: com.mysql.cj.jdbc.Driver
    地址: jdbc:mysql://127.0.0.1:3306/jeesite?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    用户: root

===================================================================

注意：以上信息是初始化数据库的连接信息，请认真对照。

本操作主要用于首次安装 JeeSite 或后安装 Module 的数据表初始化，若模块已安装会自动忽略。
在 v4.2 版本以后，官方初始化数据库是比较安全的，官方代码中不会包含任何删除数据表及数据的脚本。

如果你是升级到 v4.2 的版本，无法排除你是否升级完整，为安全期间，还是建议先备份数据库后再操作。

系统为您提供 20 秒的考虑时间，若不初始化数据库，请停止服务启动......

2021-01-08 20:21:05.719 DEBUG 22832 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2021-01-08 20:21:07.013 INFO  22832 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2021-01-08 20:21:09.746 INFO  22832 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2021-01-08 20:21:15.611 INFO  22832 [           main] [com.jeesite.modules.sys.db.InitCoreData] - ===== InitData Started ============
2021-01-08 20:21:15.728 DEBUG 22832 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@52f71d2] will not be managed by Spring
2021-01-08 20:21:16.498 DEBUG 22832 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 20:21:16.528 DEBUG 22832 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 20:21:16.567 DEBUG 22832 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 20:21:16.571 INFO  22832 [           main] [com.jeesite.modules.sys.db.InitCoreData] - ===== InitData Completed ========== 耗时：959毫秒
2021-01-08 20:21:16.571 INFO  22832 [           main] [c.jeesite.modules.test.db.InitTestData ] - ===== InitData Started ============
2021-01-08 20:21:16.572 INFO  22832 [           main] [c.jeesite.modules.test.db.InitTestData ] - ===== InitData Completed ========== 耗时：1毫秒
2021-01-08 20:21:16.614 DEBUG 22832 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2021-01-08 20:21:16.617 DEBUG 22832 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@52f71d2] will be managed by Spring
2021-01-08 20:21:16.618 DEBUG 22832 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2021-01-08 20:21:16.620 DEBUG 22832 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2021-01-08 20:21:16.632 DEBUG 22832 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2021-01-08 20:21:16.717 INFO  22832 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2021-01-08 20:21:18.743 INFO  22832 [           main] [com.jeesite.modules.Application        ] - Started Application in 42.613 seconds (JVM running for 44.021)
2021-01-08 20:22:59.652 DEBUG 22832 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = #{userCode}
2021-01-08 20:22:59.674 DEBUG 22832 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@52f71d2] will be managed by Spring
2021-01-08 20:22:59.681 DEBUG 22832 [nio-8980-exec-6] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = ?
2021-01-08 20:22:59.683 DEBUG 22832 [nio-8980-exec-6] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2021-01-08 20:22:59.718 DEBUG 22832 [nio-8980-exec-6] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2021-01-08 20:22:59.998 DEBUG 22832 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2021-01-08 20:22:59.999 DEBUG 22832 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@52f71d2] will be managed by Spring
2021-01-08 20:23:00.004 DEBUG 22832 [nio-8980-exec-6] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2021-01-08 20:23:00.005 DEBUG 22832 [nio-8980-exec-6] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2021-01-08 20:23:00.018 DEBUG 22832 [nio-8980-exec-6] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2021-01-08 20:23:00.054 DEBUG 22832 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:23:00.058 DEBUG 22832 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@52f71d2] will be managed by Spring
2021-01-08 20:23:00.067 DEBUG 22832 [nio-8980-exec-6] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:23:00.070 DEBUG 22832 [nio-8980-exec-6] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2021-01-08 20:23:00.189 DEBUG 22832 [nio-8980-exec-6] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 73
2021-01-08 20:23:01.389 DEBUG 22832 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:23:01.392 DEBUG 22832 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@52f71d2] will be managed by Spring
2021-01-08 20:23:01.398 DEBUG 22832 [nio-8980-exec-6] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:23:01.401 DEBUG 22832 [nio-8980-exec-6] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_sys_code(String), 1(String), 0(String)
2021-01-08 20:23:01.414 DEBUG 22832 [nio-8980-exec-6] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2021-01-08 20:23:19.550 DEBUG 22832 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:23:19.548  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2021-01-08 20:23:19.622 INFO  22832 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2021-01-08 20:23:19.932 DEBUG 22832 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:23:19.816  用时: 268毫秒  URI: /js/a/gen/genTable/list  总内存: 545MB  已用内存: 291.692MB
2021-01-08 20:23:19.958 DEBUG 22832 [  log-save-10-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 6毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:23:19.958 DEBUG 22832 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@52f71d2] will be managed by Spring
2021-01-08 20:23:19.959 DEBUG 22832 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:23:19.961 DEBUG 22832 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 20:23:20.012 DEBUG 22832 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 73
2021-01-08 20:23:20.066 DEBUG 22832 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:23:20.068 DEBUG 22832 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@52f71d2] will be managed by Spring
2021-01-08 20:23:20.069 DEBUG 22832 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:23:20.077 DEBUG 22832 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347519251560505344(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:23:19.926(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 268(Long)
2021-01-08 20:23:20.080 DEBUG 22832 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:23:20.186 DEBUG 22832 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:23:20.185  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 20:23:20.334 DEBUG 22832 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 20:23:20.335 DEBUG 22832 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@52f71d2] will be managed by Spring
2021-01-08 20:23:20.469 DEBUG 22832 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 20:23:20.469 DEBUG 22832 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:23:20.472 DEBUG 22832 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 20:23:20.473 DEBUG 22832 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:23:20.479 DEBUG 22832 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 2
2021-01-08 20:23:20.565 DEBUG 22832 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:23:20.563  用时: 378毫秒  URI: /js/a/gen/genTable/listData  总内存: 545MB  已用内存: 329.723MB
2021-01-08 20:23:20.580 DEBUG 22832 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:23:20.580 DEBUG 22832 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@52f71d2] will be managed by Spring
2021-01-08 20:23:20.582 DEBUG 22832 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:23:20.586 DEBUG 22832 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347519254240665600(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:23:20.565(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 378(Long)
2021-01-08 20:23:20.589 DEBUG 22832 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:23:35.229 DEBUG 22832 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:23:35.229  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 20:23:35.404 DEBUG 22832 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:23:35.411 DEBUG 22832 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@52f71d2] will not be managed by Spring
2021-01-08 20:23:35.415 DEBUG 22832 [nio-8980-exec-5] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:23:35.416 DEBUG 22832 [nio-8980-exec-5] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 20:23:35.437 DEBUG 22832 [nio-8980-exec-5] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 20:23:35.447 DEBUG 22832 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@52f71d2] will be managed by Spring
2021-01-08 20:23:35.454 DEBUG 22832 [nio-8980-exec-5] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 20:23:35.456 DEBUG 22832 [nio-8980-exec-5] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 20:23:35.470 DEBUG 22832 [nio-8980-exec-5] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 20:23:35.478 INFO  22832 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableFormSelect <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 20:23:35.699 DEBUG 22832 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:23:35.684  用时: 455毫秒  URI: /js/a/gen/genTable/form  总内存: 545MB  已用内存: 369.717MB
2021-01-08 20:23:35.726 DEBUG 22832 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:23:35.728 DEBUG 22832 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@52f71d2] will be managed by Spring
2021-01-08 20:23:35.731 DEBUG 22832 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:23:35.738 DEBUG 22832 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347519317713068032(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:23:35.699(Timestamp), /js/a/gen/genTable/form(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 455(Long)
2021-01-08 20:23:35.750 DEBUG 22832 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:23:45.158 DEBUG 22832 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:23:45.158  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 20:23:45.161 DEBUG 22832 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:23:45.162 DEBUG 22832 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@52f71d2] will be managed by Spring
2021-01-08 20:23:45.166 DEBUG 22832 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:23:45.167 DEBUG 22832 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:23:45.168 DEBUG 22832 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2021-01-08 20:23:45.173 DEBUG 22832 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:23:45.173 DEBUG 22832 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@52f71d2] will be managed by Spring
2021-01-08 20:23:45.177 DEBUG 22832 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:23:45.178 DEBUG 22832 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:23:45.179 DEBUG 22832 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2021-01-08 20:23:45.182 DEBUG 22832 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@52f71d2] will be managed by Spring
2021-01-08 20:23:45.187 DEBUG 22832 [io-8980-exec-10] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 20:23:45.188 DEBUG 22832 [io-8980-exec-10] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_admin(String), t_admin(String)
2021-01-08 20:23:45.192 DEBUG 22832 [io-8980-exec-10] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 20:23:45.199 DEBUG 22832 [io-8980-exec-10] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 20:23:45.199 DEBUG 22832 [io-8980-exec-10] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_admin(String)
2021-01-08 20:23:45.206 DEBUG 22832 [io-8980-exec-10] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 3
2021-01-08 20:23:45.212 DEBUG 22832 [io-8980-exec-10] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 20:23:45.213 DEBUG 22832 [io-8980-exec-10] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_admin(String)
2021-01-08 20:23:45.221 DEBUG 22832 [io-8980-exec-10] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 1
2021-01-08 20:23:45.230 DEBUG 22832 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:23:45.230 DEBUG 22832 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@52f71d2] will not be managed by Spring
2021-01-08 20:23:45.234 DEBUG 22832 [io-8980-exec-10] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:23:45.235 DEBUG 22832 [io-8980-exec-10] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 20:23:45.238 DEBUG 22832 [io-8980-exec-10] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 20:23:45.240 DEBUG 22832 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 20:23:45.240 DEBUG 22832 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@52f71d2] will not be managed by Spring
2021-01-08 20:23:45.243 DEBUG 22832 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 20:23:45.243 DEBUG 22832 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 20:23:45.244 DEBUG 22832 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 20:23:45.246 DEBUG 22832 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@52f71d2] will be managed by Spring
2021-01-08 20:23:45.250 DEBUG 22832 [io-8980-exec-10] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 20:23:45.250 DEBUG 22832 [io-8980-exec-10] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 20:23:45.252 DEBUG 22832 [io-8980-exec-10] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 1
2021-01-08 20:23:45.257 INFO  22832 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 20:23:45.317 DEBUG 22832 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:23:45.317 DEBUG 22832 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@52f71d2] will be managed by Spring
2021-01-08 20:23:45.323 DEBUG 22832 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:23:45.324 DEBUG 22832 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_yes_no(String), 1(String), 0(String)
2021-01-08 20:23:45.328 DEBUG 22832 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 20:23:45.477 DEBUG 22832 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:23:45.475  用时: 317毫秒  URI: /js/a/gen/genTable/form  总内存: 545MB  已用内存: 398.484MB
2021-01-08 20:23:45.487 DEBUG 22832 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:23:45.488 DEBUG 22832 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@52f71d2] will be managed by Spring
2021-01-08 20:23:45.489 DEBUG 22832 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:23:45.490 DEBUG 22832 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347519358729166848(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:23:45.477(Timestamp), /js/a/gen/genTable/form(String), POST(String), isNewRecord=true&tableName=t_admin(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 317(Long)
2021-01-08 20:23:45.491 DEBUG 22832 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:24:34.046 DEBUG 22832 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:24:34.046  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 20:24:34.048 DEBUG 22832 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:24:34.049 DEBUG 22832 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@52f71d2] will be managed by Spring
2021-01-08 20:24:34.053 DEBUG 22832 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:24:34.054 DEBUG 22832 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:24:34.056 DEBUG 22832 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2021-01-08 20:24:34.364 DEBUG 22832 [nio-8980-exec-6] [c.j.c.m.m.provider.InsertSqlProvider   ] - 3毫秒: INSERT INTO `js_gen_table` (`table_name`, `class_name`, `comments`, `parent_table_name`, `parent_table_fk_name`, `data_source_name`, `tpl_category`, `package_name`, `module_name`, `sub_module_name`, `function_name`, `function_name_simple`, `function_author`, `gen_base_dir`, `options`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`) VALUES (#{tableName}, #{className}, #{comments}, #{parentTableName}, #{parentTableFkName}, #{dataSourceName}, #{tplCategory}, #{packageName}, #{moduleName}, #{subModuleName}, #{functionName}, #{functionNameSimple}, #{functionAuthor}, #{genBaseDir}, #{options}, #{createBy}, #{createDate}, #{updateBy}, #{updateDate}, #{remarks})
2021-01-08 20:24:34.366 DEBUG 22832 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@52f71d2] will be managed by Spring
2021-01-08 20:24:34.366 DEBUG 22832 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table` (`table_name`, `class_name`, `comments`, `parent_table_name`, `parent_table_fk_name`, `data_source_name`, `tpl_category`, `package_name`, `module_name`, `sub_module_name`, `function_name`, `function_name_simple`, `function_author`, `gen_base_dir`, `options`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:24:34.368 DEBUG 22832 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.insert ] - ==> Parameters: t_admin(String), Tadmin(String), t_admin(String), (String), userid(String), (String), (String), com.jeesite.modules(String), t(String), (String), t_admin(String), t_admin(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 20:24:34.362(Timestamp), system(String), 2021-01-08 20:24:34.362(Timestamp), (String)
2021-01-08 20:24:34.374 DEBUG 22832 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.insert ] - <==    Updates: 1
2021-01-08 20:24:34.376 DEBUG 22832 [nio-8980-exec-6] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 20:24:34.378 DEBUG 22832 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:24:34.379 DEBUG 22832 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347519563822243840(String), t_admin(String), userid(String), 10(Integer), int(String), userid(String), userid(String), userid(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"1","fieldValid":"abc","dictName":"","gridRowCol":"12/2/5","dictType":""}(String)
2021-01-08 20:24:34.381 DEBUG 22832 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 20:24:34.383 DEBUG 22832 [nio-8980-exec-6] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 20:24:34.384 DEBUG 22832 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:24:34.387 DEBUG 22832 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347519563851603968(String), t_admin(String), username(String), 20(Integer), varchar(55)(String), username(String), username(String), username(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String)
2021-01-08 20:24:34.412 DEBUG 22832 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 20:24:34.416 DEBUG 22832 [nio-8980-exec-6] [c.j.c.m.m.provider.InsertSqlProvider   ] - 4毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 20:24:34.418 DEBUG 22832 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:24:34.419 DEBUG 22832 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347519563977433088(String), t_admin(String), userpw(String), 30(Integer), varchar(50)(String), userpw(String), userpw(String), userpw(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String)
2021-01-08 20:24:34.431 DEBUG 22832 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 20:24:34.444 DEBUG 22832 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:24:34.437  用时: 391毫秒  URI: /js/a/gen/genTable/save  总内存: 545MB  已用内存: 428.039MB
2021-01-08 20:24:34.534 DEBUG 22832 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 4毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:24:34.535 DEBUG 22832 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@52f71d2] will be managed by Spring
2021-01-08 20:24:34.536 DEBUG 22832 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:24:34.538 DEBUG 22832 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347519564107456512(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:24:34.443(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=true&tableName=t_admin&comments=t_admin&className=Tadmin&functionAuthor=LX&parentTableName=&parentTableFkName=userid&remarks=&columnList[0].id=&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=userid&columnList[0].comments=userid&columnList[0].columnType=int&columnList[0].attrType=Long&columnList[0].fullAttrName=userid&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=12/2/5&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['isNewLine']=1&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=username&columnList[1].comments=username&columnList[1].columnType=varchar(55)&columnList[1].attrType=String&columnList[1].fullAttrName=username&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=12/2/5&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['isNewLine']=1&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[2].id=&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=userpw&columnList[2].comments=userpw&columnList[2].columnType=varchar(50)&columnList[2].attrType=String&columnList[2].fullAttrName=userpw&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&columnList[2].isUpdate=1&!columnList[2].isList=&columnList[2].isList=1&!columnList[2].isQuery=&columnList[2].isQuery=1&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=12/2/5&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['isNewLine']=1&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&tplCategory=&packageName=com.jeesite.modules&moduleName=t&subModuleName=&functionName=t_admin&functionNameSimple=t_admin&genBaseDir=C:\Users\Lx\work2\web&!optionMap['isHaveDisableEnable']=&optionMap['isHaveDisableEnable']=0&!optionMap['isHaveDelete']=&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&!optionMap['isImageUpload']=&optionMap['isImageUpload']=0&!optionMap['isFileUpload']=&optionMap['isFileUpload']=0&!optionMap['isBpmForm']=&optionMap['isBpmForm']=0&optionMap['bpmFormKey']=&genFlag=0&!replaceFile=0(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 391(Long)
2021-01-08 20:24:34.552 DEBUG 22832 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:24:34.551  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 20:24:34.624 DEBUG 22832 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:24:34.634 DEBUG 22832 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:24:34.635 DEBUG 22832 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@43a10913] will be managed by Spring
2021-01-08 20:24:34.640 DEBUG 22832 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:24:34.641 DEBUG 22832 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:24:34.644 DEBUG 22832 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:24:34.646 DEBUG 22832 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:24:34.651 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:24:34.652 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:24:34.654 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:24:34.670 DEBUG 22832 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@43a10913] will be managed by Spring
2021-01-08 20:24:34.675 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 20:24:34.676 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_admin(String), t_admin(String)
2021-01-08 20:24:34.683 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 20:24:34.689 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 20:24:34.690 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_admin(String)
2021-01-08 20:24:34.696 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 3
2021-01-08 20:24:34.702 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 20:24:34.703 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_admin(String)
2021-01-08 20:24:34.707 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 1
2021-01-08 20:24:34.718 DEBUG 22832 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:24:34.719 DEBUG 22832 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@43a10913] will not be managed by Spring
2021-01-08 20:24:34.723 DEBUG 22832 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:24:34.724 DEBUG 22832 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 20:24:34.727 DEBUG 22832 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 20:24:34.728 DEBUG 22832 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 20:24:34.729 DEBUG 22832 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@43a10913] will not be managed by Spring
2021-01-08 20:24:34.734 DEBUG 22832 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 20:24:34.735 DEBUG 22832 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 20:24:34.739 DEBUG 22832 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 4
2021-01-08 20:24:34.741 DEBUG 22832 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@43a10913] will be managed by Spring
2021-01-08 20:24:34.748 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 20:24:34.749 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 20:24:34.752 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 20:24:34.754 INFO  22832 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 20:24:34.773 DEBUG 22832 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:24:34.771  用时: 220毫秒  URI: /js/a/gen/genTable/form  总内存: 545MB  已用内存: 434.619MB
2021-01-08 20:24:34.779 DEBUG 22832 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:24:34.782 DEBUG 22832 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@43a10913] will be managed by Spring
2021-01-08 20:24:34.783 DEBUG 22832 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:24:34.795 DEBUG 22832 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347519565491576832(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:24:34.773(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=t_admin&op=step3(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 220(Long)
2021-01-08 20:24:34.798 DEBUG 22832 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:24:39.008 DEBUG 22832 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:24:39.010 DEBUG 22832 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@43a10913] will be managed by Spring
2021-01-08 20:24:39.020 DEBUG 22832 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:24:39.025 DEBUG 22832 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), msg_inner_content_level(String), 1(String), 0(String)
2021-01-08 20:24:39.032 DEBUG 22832 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 3
2021-01-08 20:24:39.039 DEBUG 22832 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:24:39.039 DEBUG 22832 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@43a10913] will be managed by Spring
2021-01-08 20:24:39.044 DEBUG 22832 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:24:39.045 DEBUG 22832 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), msg_inner_content_type(String), 1(String), 0(String)
2021-01-08 20:24:39.050 DEBUG 22832 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 4
2021-01-08 20:24:39.057 DEBUG 22832 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:24:39.058 DEBUG 22832 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@43a10913] will be managed by Spring
2021-01-08 20:24:39.066 DEBUG 22832 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:24:39.068 DEBUG 22832 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), msg_inner_msg_status(String), 1(String), 0(String)
2021-01-08 20:24:39.072 DEBUG 22832 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 5
2021-01-08 20:24:39.312 DEBUG 22832 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@43a10913] will be managed by Spring
2021-01-08 20:24:39.347 DEBUG 22832 [nio-8980-exec-2] [c.j.m.msg.dao.MsgInnerDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_sys_msg_inner` a LEFT JOIN js_sys_msg_inner_record r ON r.msg_inner_id = a.id AND r.receive_user_code = ? WHERE a.`status` != ? AND ((a.status = ? AND r.receive_user_code = ?) OR a.create_by = ?)
2021-01-08 20:24:39.350 DEBUG 22832 [nio-8980-exec-2] [c.j.m.msg.dao.MsgInnerDao.findList     ] - ==> Parameters: system(String), 1(String), 0(String), system(String), system(String)
2021-01-08 20:24:39.356 DEBUG 22832 [nio-8980-exec-2] [c.j.m.msg.dao.MsgInnerDao.findList     ] - ==>  Preparing: SELECT a.`id` AS "id", a.`msg_title` AS "msgTitle", a.`content_level` AS "contentLevel", a.`content_type` AS "contentType", a.`msg_content` AS "msgContent", a.`receive_type` AS "receiveType", a.`receive_codes` AS "receiveCodes", a.`receive_names` AS "receiveNames", a.`send_user_code` AS "sendUserCode", a.`send_user_name` AS "sendUserName", a.`send_date` AS "sendDate", a.`is_attac` AS "isAttac", a.`notify_types` AS "notifyTypes", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" , r.read_status AS "record.readStatus", r.read_date AS "record.readDate", r.is_star AS "record.isStar" FROM `js_sys_msg_inner` a LEFT JOIN js_sys_msg_inner_record r ON r.msg_inner_id = a.id AND r.receive_user_code = ? WHERE a.`status` != ? AND ((a.status = ? AND r.receive_user_code = ?) OR a.create_by = ?) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 20:24:39.357 DEBUG 22832 [nio-8980-exec-2] [c.j.m.msg.dao.MsgInnerDao.findList     ] - ==> Parameters: system(String), 1(String), 0(String), system(String), system(String)
2021-01-08 20:24:39.358 DEBUG 22832 [nio-8980-exec-2] [c.j.m.msg.dao.MsgInnerDao.findList     ] - <==      Total: 0
2021-01-08 20:25:17.537 DEBUG 22832 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:25:17.537  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 20:25:17.543 DEBUG 22832 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:25:17.544 DEBUG 22832 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@43a10913] will be managed by Spring
2021-01-08 20:25:17.552 DEBUG 22832 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:25:17.554 DEBUG 22832 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:25:17.555 DEBUG 22832 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:25:17.556 DEBUG 22832 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:25:17.561 DEBUG 22832 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:25:17.562 DEBUG 22832 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:25:17.564 DEBUG 22832 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:25:17.586 DEBUG 22832 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE `js_gen_table` SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2021-01-08 20:25:17.587 DEBUG 22832 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@43a10913] will be managed by Spring
2021-01-08 20:25:17.588 DEBUG 22832 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE `js_gen_table` SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ?
2021-01-08 20:25:17.589 DEBUG 22832 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: Tadmin(String), t_admin(String), (String), userid(String), (String), crud(String), com.jeesite.modules(String), t(String), (String), t_admin(String), t_admin(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 20:25:17.585(Timestamp), (String), t_admin(String)
2021-01-08 20:25:17.590 DEBUG 22832 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2021-01-08 20:25:17.592 DEBUG 22832 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:25:17.594 DEBUG 22832 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:25:17.597 DEBUG 22832 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), userid(String), 10(Integer), int(String), userid(String), userid(String), userid(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"1","fieldValid":"abc","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563822243840(String)
2021-01-08 20:25:17.598 DEBUG 22832 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:25:17.600 DEBUG 22832 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:25:17.601 DEBUG 22832 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:25:17.602 DEBUG 22832 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), username(String), 20(Integer), varchar(55)(String), username(String), username(String), username(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563851603968(String)
2021-01-08 20:25:17.603 DEBUG 22832 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:25:17.604 DEBUG 22832 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:25:17.605 DEBUG 22832 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:25:17.607 DEBUG 22832 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), userpw(String), 30(Integer), varchar(50)(String), userpw(String), userpw(String), userpw(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563977433088(String)
2021-01-08 20:25:17.608 DEBUG 22832 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:25:17.635 DEBUG 22832 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2021-01-08 20:25:17.636 DEBUG 22832 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@43a10913] will be managed by Spring
2021-01-08 20:25:17.640 DEBUG 22832 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC
2021-01-08 20:25:17.641 DEBUG 22832 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_admin(String)
2021-01-08 20:25:17.643 DEBUG 22832 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 0
2021-01-08 20:25:17.653 DEBUG 22832 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\t\TadminDao.xml
2021-01-08 20:25:17.655 DEBUG 22832 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.t.dao.TadminDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tadmin">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 20:25:17.657 DEBUG 22832 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\mappings\modules\t\TadminDao.xml
2021-01-08 20:25:17.658 DEBUG 22832 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\entity\Tadmin.java
2021-01-08 20:25:17.784 DEBUG 22832 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.t.entity;

import org.hibernate.validator.constraints.Length;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * t_adminEntity
 * @author LX
 * @version 2021-01-08
 */
@Table(name="t_admin", alias="a", columns={
		@Column(name="userid", attrName="userid", label="userid", isPK=true),
		@Column(name="username", attrName="username", label="username"),
		@Column(name="userpw", attrName="userpw", label="userpw"),
	}, orderBy="a.userid DESC"
)
public class Tadmin extends DataEntity<Tadmin> {
	
	private static final long serialVersionUID = 1L;
	private Long userid;		// userid
	private String username;		// username
	private String userpw;		// userpw
	
	public Tadmin() {
		this(null);
	}

	public Tadmin(String id){
		super(id);
	}
	
	public Long getUserid() {
		return userid;
	}

	public void setUserid(Long userid) {
		this.userid = userid;
	}
	
	@Length(min=0, max=55, message="username长度不能超过 55 个字符")
	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}
	
	@Length(min=0, max=50, message="userpw长度不能超过 50 个字符")
	public String getUserpw() {
		return userpw;
	}

	public void setUserpw(String userpw) {
		this.userpw = userpw;
	}
	
}
2021-01-08 20:25:17.797 DEBUG 22832 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\entity\Tadmin.java
2021-01-08 20:25:17.799 DEBUG 22832 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\dao\TadminDao.java
2021-01-08 20:25:17.802 DEBUG 22832 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.t.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.t.entity.Tadmin;

/**
 * t_adminDAO接口
 * @author LX
 * @version 2021-01-08
 */
@MyBatisDao
public interface TadminDao extends CrudDao<Tadmin> {
	
}
2021-01-08 20:25:17.803 DEBUG 22832 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\dao\TadminDao.java
2021-01-08 20:25:17.804 DEBUG 22832 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\service\TadminService.java
2021-01-08 20:25:17.822 DEBUG 22832 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.t.service;

import java.util.List;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.jeesite.common.entity.Page;
import com.jeesite.common.service.CrudService;
import com.jeesite.modules.t.entity.Tadmin;
import com.jeesite.modules.t.dao.TadminDao;

/**
 * t_adminService
 * @author LX
 * @version 2021-01-08
 */
@Service
@Transactional(readOnly=true)
public class TadminService extends CrudService<TadminDao, Tadmin> {
	
	/**
	 * 获取单条数据
	 * @param tadmin
	 * @return
	 */
	@Override
	public Tadmin get(Tadmin tadmin) {
		return super.get(tadmin);
	}
	
	/**
	 * 查询分页数据
	 * @param tadmin 查询条件
	 * @param tadmin.page 分页对象
	 * @return
	 */
	@Override
	public Page<Tadmin> findPage(Tadmin tadmin) {
		return super.findPage(tadmin);
	}
	
	/**
	 * 保存数据（插入或更新）
	 * @param tadmin
	 */
	@Override
	@Transactional(readOnly=false)
	public void save(Tadmin tadmin) {
		super.save(tadmin);
	}
	
	/**
	 * 更新状态
	 * @param tadmin
	 */
	@Override
	@Transactional(readOnly=false)
	public void updateStatus(Tadmin tadmin) {
		super.updateStatus(tadmin);
	}
	
	/**
	 * 删除数据
	 * @param tadmin
	 */
	@Override
	@Transactional(readOnly=false)
	public void delete(Tadmin tadmin) {
		super.delete(tadmin);
	}
	
}
2021-01-08 20:25:17.823 DEBUG 22832 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\service\TadminService.java
2021-01-08 20:25:17.824 DEBUG 22832 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\web\TadminController.java
2021-01-08 20:25:17.838 DEBUG 22832 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.t.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.jeesite.common.config.Global;
import com.jeesite.common.entity.Page;
import com.jeesite.common.web.BaseController;
import com.jeesite.modules.t.entity.Tadmin;
import com.jeesite.modules.t.service.TadminService;

/**
 * t_adminController
 * @author LX
 * @version 2021-01-08
 */
@Controller
@RequestMapping(value = "${adminPath}/t/tadmin")
public class TadminController extends BaseController {

	@Autowired
	private TadminService tadminService;
	
	/**
	 * 获取数据
	 */
	@ModelAttribute
	public Tadmin get(Long userid, boolean isNewRecord) {
		return tadminService.get(userid, isNewRecord);
	}
	
	/**
	 * 查询列表
	 */
	@RequiresPermissions("t:tadmin:view")
	@RequestMapping(value = {"list", ""})
	public String list(Tadmin tadmin, Model model) {
		model.addAttribute("tadmin", tadmin);
		return "modules/t/tadminList";
	}
	
	/**
	 * 查询列表数据
	 */
	@RequiresPermissions("t:tadmin:view")
	@RequestMapping(value = "listData")
	@ResponseBody
	public Page<Tadmin> listData(Tadmin tadmin, HttpServletRequest request, HttpServletResponse response) {
		tadmin.setPage(new Page<>(request, response));
		Page<Tadmin> page = tadminService.findPage(tadmin);
		return page;
	}

	/**
	 * 查看编辑表单
	 */
	@RequiresPermissions("t:tadmin:view")
	@RequestMapping(value = "form")
	public String form(Tadmin tadmin, Model model) {
		model.addAttribute("tadmin", tadmin);
		return "modules/t/tadminForm";
	}

	/**
	 * 保存数据
	 */
	@RequiresPermissions("t:tadmin:edit")
	@PostMapping(value = "save")
	@ResponseBody
	public String save(@Validated Tadmin tadmin) {
		tadminService.save(tadmin);
		return renderResult(Global.TRUE, text("保存t_admin成功！"));
	}
	
	/**
	 * 删除数据
	 */
	@RequiresPermissions("t:tadmin:edit")
	@RequestMapping(value = "delete")
	@ResponseBody
	public String delete(Tadmin tadmin) {
		tadminService.delete(tadmin);
		return renderResult(Global.TRUE, text("删除t_admin成功！"));
	}
	
}
2021-01-08 20:25:17.839 DEBUG 22832 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\web\TadminController.java
2021-01-08 20:25:17.847 DEBUG 22832 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\views\modules\t\tadminList.html
2021-01-08 20:25:17.871 DEBUG 22832 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: 't_admin管理', libs: ['dataGrid']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header">
			<div class="box-title">
				<i class="fa icon-notebook"></i> ${text('t_admin管理')}
			</div>
			<div class="box-tools pull-right">
				<a href="#" class="btn btn-default" id="btnSearch" title="${text('查询')}"><i class="fa fa-filter"></i> ${text('查询')}</a>
				<% if(hasPermi('t:tadmin:edit')){ %>
					<a href="${ctx}/t/tadmin/form" class="btn btn-default btnTool" title="${text('新增t_admin')}"><i class="fa fa-plus"></i> ${text('新增')}</a>
				<% } %>
				<a href="#" class="btn btn-default" id="btnSetting" title="${text('设置')}"><i class="fa fa-navicon"></i></a>
			</div>
		</div>
		<div class="box-body">
			<#form:form id="searchForm" model="${tadmin}" action="${ctx}/t/tadmin/listData" method="post" class="form-inline hide"
					data-page-no="${parameter.pageNo}" data-page-size="${parameter.pageSize}" data-order-by="${parameter.orderBy}">
				<div class="form-group">
					<label class="control-label">${text('username')}：</label>
					<div class="control-inline">
						<#form:input path="username" maxlength="55" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('userpw')}：</label>
					<div class="control-inline">
						<#form:input path="userpw" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<button type="submit" class="btn btn-primary btn-sm">${text('查询')}</button>
					<button type="reset" class="btn btn-default btn-sm">${text('重置')}</button>
				</div>
			</#form:form>
			<table id="dataGrid"></table>
			<div id="dataGridPage"></div>
		</div>
	</div>
</div>
<% } %>
<script>
// 初始化DataGrid对象
$('#dataGrid').dataGrid({
	searchForm: $("#searchForm"),
	columnModel: [
		{header:'${text("username")}', name:'username', index:'a.username', width:150, align:"left", frozen:true, formatter: function(val, obj, row, act){
			return '<a href="${ctx}/t/tadmin/form?userid='+row.userid+'" class="btnList" data-title="${text("编辑t_admin")}">'+(val||row.id)+'</a>';
		}},
		{header:'${text("userpw")}', name:'userpw', index:'a.userpw', width:150, align:"left"},
		{header:'${text("操作")}', name:'actions', width:120, sortable:false, title:false, formatter: function(val, obj, row, act){
			var actions = [];
			<% if(hasPermi('t:tadmin:edit')){ %>
				actions.push('<a href="${ctx}/t/tadmin/form?userid='+row.userid+'" class="btnList" title="${text("编辑t_admin")}"><i class="fa fa-pencil"></i></a>&nbsp;');
				actions.push('<a href="${ctx}/t/tadmin/delete?userid='+row.userid+'" class="btnList" title="${text("删除t_admin")}" data-confirm="${text("确认要删除该t_admin吗？")}"><i class="fa fa-trash-o"></i></a>&nbsp;');
			<% } %>
			return actions.join('');
		}}
	],
	// 加载成功后执行事件
	ajaxSuccess: function(data){
		
	}
});
</script>
2021-01-08 20:25:17.873 DEBUG 22832 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\views\modules\t\tadminList.html
2021-01-08 20:25:17.873 DEBUG 22832 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\views\modules\t\tadminForm.html
2021-01-08 20:25:17.896 DEBUG 22832 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: 't_admin管理', libs: ['validate']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header with-border">
			<div class="box-title">
				<i class="fa icon-note"></i> ${text(tadmin.isNewRecord ? '新增t_admin' : '编辑t_admin')}
			</div>
			<div class="box-tools pull-right">
				<button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
			</div>
		</div>
		<#form:form id="inputForm" model="${tadmin}" action="${ctx}/t/tadmin/save" method="post" class="form-horizontal">
			<div class="box-body">
				<div class="form-unit">${text('基本信息')}</div>
				<#form:hidden path="userid"/>
				<div class="row">
				<div class="row">
					<div class="col-xs-12">
						<div class="form-group">
							<label class="control-label col-sm-2" title="">
								<span class="required hide">*</span> ${text('username')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-5">
								<#form:input path="username" maxlength="55" class="form-control"/>
							</div>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col-xs-12">
						<div class="form-group">
							<label class="control-label col-sm-2" title="">
								<span class="required hide">*</span> ${text('userpw')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-5">
								<#form:input path="userpw" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="box-footer">
				<div class="row">
					<div class="col-sm-offset-2 col-sm-10">
						<% if (hasPermi('t:tadmin:edit')){ %>
							<button type="submit" class="btn btn-sm btn-primary" id="btnSubmit"><i class="fa fa-check"></i> ${text('保 存')}</button>&nbsp;
						<% } %>
						<button type="button" class="btn btn-sm btn-default" id="btnCancel" onclick="js.closeCurrentTabPage()"><i class="fa fa-reply-all"></i> ${text('关 闭')}</button>
					</div>
				</div>
			</div>
		</#form:form>
	</div>
</div>
<% } %>
<script>
$("#inputForm").validate({
	submitHandler: function(form){
		js.ajaxSubmitForm($(form), function(data){
			js.showMessage(data.message);
			if(data.result == Global.TRUE){
				js.closeCurrentTabPage(function(contentWindow){
					contentWindow.page();
				});
			}
		}, "json");
    }
});
</script>
2021-01-08 20:25:17.898 DEBUG 22832 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\views\modules\t\tadminForm.html
2021-01-08 20:25:17.902 DEBUG 22832 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:25:17.900  用时: 363毫秒  URI: /js/a/gen/genTable/save  总内存: 627MB  已用内存: 95.916MB
2021-01-08 20:25:17.908 DEBUG 22832 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:25:17.909 DEBUG 22832 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@43a10913] will be managed by Spring
2021-01-08 20:25:17.909 DEBUG 22832 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:25:17.910 DEBUG 22832 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347519746387714048(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:25:17.902(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=t_admin&comments=t_admin&className=Tadmin&functionAuthor=LX&parentTableName=&parentTableFkName=userid&remarks=&columnList[0].id=1347519563822243840&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=userid&columnList[0].comments=userid&columnList[0].columnType=int&columnList[0].attrType=Long&columnList[0].fullAttrName=userid&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=12/2/5&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['isNewLine']=1&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1347519563851603968&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=username&columnList[1].comments=username&columnList[1].columnType=varchar(55)&columnList[1].attrType=String&columnList[1].fullAttrName=username&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=12/2/5&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['isNewLine']=1&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[2].id=1347519563977433088&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=userpw&columnList[2].comments=userpw&columnList[2].columnType=varchar(50)&columnList[2].attrType=String&columnList[2].fullAttrName=userpw&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&columnList[2].isUpdate=1&!columnList[2].isList=&columnList[2].isList=1&!columnList[2].isQuery=&columnList[2].isQuery=1&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=12/2/5&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['isNewLine']=1&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&tplCategory=crud&packageName=com.jeesite.modules&moduleName=t&subModuleName=&functionName=t_admin&functionNameSimple=t_admin&genBaseDir=C:\Users\Lx\work2\web&!optionMap['isHaveDisableEnable']=&optionMap['isHaveDisableEnable']=0&!optionMap['isHaveDelete']=&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&!optionMap['isImageUpload']=&optionMap['isImageUpload']=0&!optionMap['isFileUpload']=&optionMap['isFileUpload']=0&!optionMap['isBpmForm']=&optionMap['isBpmForm']=0&optionMap['bpmFormKey']=&genFlag=2&!replaceFile=0(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 363(Long)
2021-01-08 20:25:17.920 DEBUG 22832 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:25:17.928 DEBUG 22832 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:25:17.928  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 20:25:17.934 DEBUG 22832 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 20:25:17.935 DEBUG 22832 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@43a10913] will be managed by Spring
2021-01-08 20:25:17.947 DEBUG 22832 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 20:25:17.948 DEBUG 22832 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:25:17.950 DEBUG 22832 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 20:25:17.951 DEBUG 22832 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:25:17.954 DEBUG 22832 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 20:25:17.967 DEBUG 22832 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:25:17.965  用时: 37毫秒  URI: /js/a/gen/genTable/listData  总内存: 627MB  已用内存: 99.824MB
2021-01-08 20:25:17.972 DEBUG 22832 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:25:17.973 DEBUG 22832 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@43a10913] will be managed by Spring
2021-01-08 20:25:17.974 DEBUG 22832 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:25:17.981 DEBUG 22832 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347519746660343808(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:25:17.967(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 37(Long)
2021-01-08 20:25:17.982 DEBUG 22832 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:25:26.155 DEBUG 22832 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:25:26.155  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 20:25:26.159 DEBUG 22832 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:25:26.160 DEBUG 22832 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@43a10913] will be managed by Spring
2021-01-08 20:25:26.165 DEBUG 22832 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:25:26.165 DEBUG 22832 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:25:26.168 DEBUG 22832 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:25:26.171 DEBUG 22832 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:25:26.179 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:25:26.179 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:25:26.181 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:25:26.185 DEBUG 22832 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@43a10913] will be managed by Spring
2021-01-08 20:25:26.188 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 20:25:26.189 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_admin(String), t_admin(String)
2021-01-08 20:25:26.193 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 20:25:26.198 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 20:25:26.198 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_admin(String)
2021-01-08 20:25:26.201 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 3
2021-01-08 20:25:26.204 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 20:25:26.204 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_admin(String)
2021-01-08 20:25:26.206 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 1
2021-01-08 20:25:26.212 DEBUG 22832 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:25:26.212 DEBUG 22832 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@43a10913] will not be managed by Spring
2021-01-08 20:25:26.215 DEBUG 22832 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:25:26.215 DEBUG 22832 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 20:25:26.217 DEBUG 22832 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 20:25:26.218 DEBUG 22832 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 20:25:26.219 DEBUG 22832 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@43a10913] will not be managed by Spring
2021-01-08 20:25:26.222 DEBUG 22832 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 20:25:26.223 DEBUG 22832 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 20:25:26.229 DEBUG 22832 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 4
2021-01-08 20:25:26.231 DEBUG 22832 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@43a10913] will be managed by Spring
2021-01-08 20:25:26.236 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 20:25:26.236 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 20:25:26.237 DEBUG 22832 [nio-8980-exec-7] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 20:25:26.238 INFO  22832 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 20:25:26.270 DEBUG 22832 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:25:26.267  用时: 112毫秒  URI: /js/a/gen/genTable/form  总内存: 627MB  已用内存: 109.770MB
2021-01-08 20:25:26.275 DEBUG 22832 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:25:26.275 DEBUG 22832 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@43a10913] will be managed by Spring
2021-01-08 20:25:26.276 DEBUG 22832 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:25:26.277 DEBUG 22832 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347519781485649920(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:25:26.27(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=t_admin(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 112(Long)
2021-01-08 20:25:26.278 DEBUG 22832 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:27:06.563 INFO  14096 [           main] [com.jeesite.modules.Application        ] - Starting Application on DESKTOP-0IUV8EB with PID 14096 (C:\Users\Lx\work2\web\src\main\webapp\WEB-INF\classes started by Lx in C:\Users\Lx\work2\web)
2021-01-08 20:27:06.571 DEBUG 14096 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2021-01-08 20:27:06.571 INFO  14096 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2021-01-08 20:27:11.111 INFO  14096 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2021-01-08 20:27:11.114 INFO  14096 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2021-01-08 20:27:14.365 INFO  14096 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/Lx
2021-01-08 20:27:14.366 INFO  14096 [           main] [com.jeesite.common.config.Global       ] - user.dir: C:/Users/Lx/work2/web
2021-01-08 20:27:14.366 INFO  14096 [           main] [com.jeesite.common.config.Global       ] - logPath: C:/Users/Lx/work2/web/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.2 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：adfb80499b32e1492729a84d62f8cd98
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2021-01-08 20:27:14.371 WARN  14096 [           main] [com.jeesite.common.config.Global       ] - 

===================================================================

    类型: mysql
    驱动: com.mysql.cj.jdbc.Driver
    地址: jdbc:mysql://127.0.0.1:3306/jeesite?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    用户: root

===================================================================

注意：以上信息是初始化数据库的连接信息，请认真对照。

本操作主要用于首次安装 JeeSite 或后安装 Module 的数据表初始化，若模块已安装会自动忽略。
在 v4.2 版本以后，官方初始化数据库是比较安全的，官方代码中不会包含任何删除数据表及数据的脚本。

如果你是升级到 v4.2 的版本，无法排除你是否升级完整，为安全期间，还是建议先备份数据库后再操作。

系统为您提供 20 秒的考虑时间，若不初始化数据库，请停止服务启动......

2021-01-08 20:27:35.669 DEBUG 14096 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2021-01-08 20:27:37.054 INFO  14096 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2021-01-08 20:27:39.829 INFO  14096 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2021-01-08 20:27:47.833 INFO  14096 [           main] [com.jeesite.modules.sys.db.InitCoreData] - ===== InitData Started ============
2021-01-08 20:27:47.930 DEBUG 14096 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@599fab92] will not be managed by Spring
2021-01-08 20:27:48.650 DEBUG 14096 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 20:27:48.711 DEBUG 14096 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 20:27:48.749 DEBUG 14096 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 20:27:48.753 INFO  14096 [           main] [com.jeesite.modules.sys.db.InitCoreData] - ===== InitData Completed ========== 耗时：919毫秒
2021-01-08 20:27:48.753 INFO  14096 [           main] [c.jeesite.modules.test.db.InitTestData ] - ===== InitData Started ============
2021-01-08 20:27:48.753 INFO  14096 [           main] [c.jeesite.modules.test.db.InitTestData ] - ===== InitData Completed ========== 耗时：0毫秒
2021-01-08 20:27:48.817 DEBUG 14096 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2021-01-08 20:27:48.821 DEBUG 14096 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@599fab92] will be managed by Spring
2021-01-08 20:27:48.824 DEBUG 14096 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2021-01-08 20:27:48.827 DEBUG 14096 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2021-01-08 20:27:48.836 DEBUG 14096 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2021-01-08 20:27:48.895 INFO  14096 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2021-01-08 20:27:50.949 INFO  14096 [           main] [com.jeesite.modules.Application        ] - Started Application in 46.147 seconds (JVM running for 47.498)
2021-01-08 20:27:51.515 DEBUG 14096 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 27毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = #{userCode}
2021-01-08 20:27:51.529 DEBUG 14096 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@599fab92] will be managed by Spring
2021-01-08 20:27:51.539 DEBUG 14096 [nio-8980-exec-4] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = ?
2021-01-08 20:27:51.543 DEBUG 14096 [nio-8980-exec-4] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2021-01-08 20:27:51.553 DEBUG 14096 [nio-8980-exec-4] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2021-01-08 20:27:52.003 DEBUG 14096 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2021-01-08 20:27:52.004 DEBUG 14096 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@599fab92] will be managed by Spring
2021-01-08 20:27:52.010 DEBUG 14096 [nio-8980-exec-4] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2021-01-08 20:27:52.012 DEBUG 14096 [nio-8980-exec-4] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2021-01-08 20:27:52.494 DEBUG 14096 [nio-8980-exec-4] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2021-01-08 20:27:52.679 DEBUG 14096 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 49毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:27:52.711 DEBUG 14096 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@599fab92] will be managed by Spring
2021-01-08 20:27:52.734 DEBUG 14096 [nio-8980-exec-4] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:27:52.739 DEBUG 14096 [nio-8980-exec-4] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2021-01-08 20:27:52.885 DEBUG 14096 [nio-8980-exec-4] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 73
2021-01-08 20:27:55.018 DEBUG 14096 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:27:55.025 DEBUG 14096 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@599fab92] will be managed by Spring
2021-01-08 20:27:55.035 DEBUG 14096 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:27:55.037 DEBUG 14096 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_sys_code(String), 1(String), 0(String)
2021-01-08 20:27:55.045 DEBUG 14096 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2021-01-08 20:30:13.296 DEBUG 14096 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:30:13.297 DEBUG 14096 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@599fab92] will be managed by Spring
2021-01-08 20:30:13.302 DEBUG 14096 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:30:13.303 DEBUG 14096 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), msg_inner_content_level(String), 1(String), 0(String)
2021-01-08 20:30:13.315 DEBUG 14096 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 3
2021-01-08 20:30:13.347 DEBUG 14096 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:30:13.347 DEBUG 14096 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@599fab92] will be managed by Spring
2021-01-08 20:30:13.357 DEBUG 14096 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:30:13.360 DEBUG 14096 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), msg_inner_content_type(String), 1(String), 0(String)
2021-01-08 20:30:13.365 DEBUG 14096 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 4
2021-01-08 20:30:13.378 DEBUG 14096 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:30:13.379 DEBUG 14096 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@599fab92] will be managed by Spring
2021-01-08 20:30:13.384 DEBUG 14096 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:30:13.386 DEBUG 14096 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), msg_inner_msg_status(String), 1(String), 0(String)
2021-01-08 20:30:13.396 DEBUG 14096 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 5
2021-01-08 20:30:14.014 DEBUG 14096 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@599fab92] will be managed by Spring
2021-01-08 20:30:14.263 DEBUG 14096 [io-8980-exec-10] [c.j.m.msg.dao.MsgInnerDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_sys_msg_inner` a LEFT JOIN js_sys_msg_inner_record r ON r.msg_inner_id = a.id AND r.receive_user_code = ? WHERE a.`status` != ? AND ((a.status = ? AND r.receive_user_code = ?) OR a.create_by = ?)
2021-01-08 20:30:14.264 DEBUG 14096 [io-8980-exec-10] [c.j.m.msg.dao.MsgInnerDao.findList     ] - ==> Parameters: system(String), 1(String), 0(String), system(String), system(String)
2021-01-08 20:30:14.268 DEBUG 14096 [io-8980-exec-10] [c.j.m.msg.dao.MsgInnerDao.findList     ] - ==>  Preparing: SELECT a.`id` AS "id", a.`msg_title` AS "msgTitle", a.`content_level` AS "contentLevel", a.`content_type` AS "contentType", a.`msg_content` AS "msgContent", a.`receive_type` AS "receiveType", a.`receive_codes` AS "receiveCodes", a.`receive_names` AS "receiveNames", a.`send_user_code` AS "sendUserCode", a.`send_user_name` AS "sendUserName", a.`send_date` AS "sendDate", a.`is_attac` AS "isAttac", a.`notify_types` AS "notifyTypes", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" , r.read_status AS "record.readStatus", r.read_date AS "record.readDate", r.is_star AS "record.isStar" FROM `js_sys_msg_inner` a LEFT JOIN js_sys_msg_inner_record r ON r.msg_inner_id = a.id AND r.receive_user_code = ? WHERE a.`status` != ? AND ((a.status = ? AND r.receive_user_code = ?) OR a.create_by = ?) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 20:30:14.269 DEBUG 14096 [io-8980-exec-10] [c.j.m.msg.dao.MsgInnerDao.findList     ] - ==> Parameters: system(String), 1(String), 0(String), system(String), system(String)
2021-01-08 20:30:14.270 DEBUG 14096 [io-8980-exec-10] [c.j.m.msg.dao.MsgInnerDao.findList     ] - <==      Total: 0
2021-01-08 20:30:17.166 DEBUG 14096 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:30:17.164  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2021-01-08 20:30:17.228 INFO  14096 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2021-01-08 20:30:17.340 DEBUG 14096 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:30:17.261  用时: 97毫秒  URI: /js/a/gen/genTable/list  总内存: 630MB  已用内存: 235.111MB
2021-01-08 20:30:17.371 DEBUG 14096 [  log-save-10-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 7毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:30:17.372 DEBUG 14096 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@599fab92] will be managed by Spring
2021-01-08 20:30:17.373 DEBUG 14096 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:30:17.375 DEBUG 14096 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 20:30:17.419 DEBUG 14096 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 73
2021-01-08 20:30:17.461 DEBUG 14096 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:30:17.464 DEBUG 14096 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@599fab92] will be managed by Spring
2021-01-08 20:30:17.464 DEBUG 14096 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:30:17.473 DEBUG 14096 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347521002280751104(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:30:17.33(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 97(Long)
2021-01-08 20:30:17.476 DEBUG 14096 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:30:17.528 DEBUG 14096 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:30:17.528  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 20:30:17.663 DEBUG 14096 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 20:30:17.664 DEBUG 14096 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@599fab92] will be managed by Spring
2021-01-08 20:30:17.729 DEBUG 14096 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 20:30:17.730 DEBUG 14096 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:30:17.744 DEBUG 14096 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 20:30:17.746 DEBUG 14096 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:30:17.751 DEBUG 14096 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 20:30:17.808 DEBUG 14096 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:30:17.799  用时: 271毫秒  URI: /js/a/gen/genTable/listData  总内存: 630MB  已用内存: 253.248MB
2021-01-08 20:30:17.834 DEBUG 14096 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 3毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:30:17.835 DEBUG 14096 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@599fab92] will be managed by Spring
2021-01-08 20:30:17.842 DEBUG 14096 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:30:17.882 DEBUG 14096 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347521004256268288(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:30:17.801(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 271(Long)
2021-01-08 20:30:17.884 DEBUG 14096 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:31:15.905 DEBUG 14096 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:31:15.904  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 20:31:15.907 DEBUG 14096 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:31:15.908 DEBUG 14096 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@599fab92] will be managed by Spring
2021-01-08 20:31:15.915 DEBUG 14096 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:31:15.917 DEBUG 14096 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:31:15.937 DEBUG 14096 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:31:15.939 DEBUG 14096 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:31:15.943 DEBUG 14096 [nio-8980-exec-7] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:31:15.944 DEBUG 14096 [nio-8980-exec-7] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:31:15.949 DEBUG 14096 [nio-8980-exec-7] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:31:16.001 DEBUG 14096 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@599fab92] will be managed by Spring
2021-01-08 20:31:16.011 DEBUG 14096 [nio-8980-exec-7] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 20:31:16.012 DEBUG 14096 [nio-8980-exec-7] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_admin(String), t_admin(String)
2021-01-08 20:31:16.017 DEBUG 14096 [nio-8980-exec-7] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 20:31:16.025 DEBUG 14096 [nio-8980-exec-7] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 20:31:16.026 DEBUG 14096 [nio-8980-exec-7] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_admin(String)
2021-01-08 20:31:16.028 DEBUG 14096 [nio-8980-exec-7] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 3
2021-01-08 20:31:16.034 DEBUG 14096 [nio-8980-exec-7] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 20:31:16.034 DEBUG 14096 [nio-8980-exec-7] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_admin(String)
2021-01-08 20:31:16.036 DEBUG 14096 [nio-8980-exec-7] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 1
2021-01-08 20:31:16.158 DEBUG 14096 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:31:16.160 DEBUG 14096 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@599fab92] will not be managed by Spring
2021-01-08 20:31:16.166 DEBUG 14096 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:31:16.167 DEBUG 14096 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 20:31:16.174 DEBUG 14096 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 20:31:16.176 DEBUG 14096 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 20:31:16.176 DEBUG 14096 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@599fab92] will not be managed by Spring
2021-01-08 20:31:16.183 DEBUG 14096 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 20:31:16.184 DEBUG 14096 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 20:31:16.187 DEBUG 14096 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 4
2021-01-08 20:31:16.191 DEBUG 14096 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@599fab92] will be managed by Spring
2021-01-08 20:31:16.197 DEBUG 14096 [nio-8980-exec-7] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 20:31:16.198 DEBUG 14096 [nio-8980-exec-7] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 20:31:16.200 DEBUG 14096 [nio-8980-exec-7] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 20:31:16.201 INFO  14096 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 20:31:16.383 DEBUG 14096 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:31:16.385 DEBUG 14096 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@599fab92] will be managed by Spring
2021-01-08 20:31:16.390 DEBUG 14096 [nio-8980-exec-7] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:31:16.392 DEBUG 14096 [nio-8980-exec-7] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_yes_no(String), 1(String), 0(String)
2021-01-08 20:31:16.395 DEBUG 14096 [nio-8980-exec-7] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 20:31:16.612 DEBUG 14096 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:31:16.606  用时: 702毫秒  URI: /js/a/gen/genTable/form  总内存: 630MB  已用内存: 295.603MB
2021-01-08 20:31:16.629 DEBUG 14096 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:31:16.630 DEBUG 14096 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@599fab92] will be managed by Spring
2021-01-08 20:31:16.631 DEBUG 14096 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:31:16.632 DEBUG 14096 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347521250927480832(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:31:16.612(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=t_admin&op=step2(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 702(Long)
2021-01-08 20:31:16.634 DEBUG 14096 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:31:42.072 INFO  22628 [           main] [com.jeesite.modules.Application        ] - Starting Application on DESKTOP-0IUV8EB with PID 22628 (C:\Users\Lx\work2\web\src\main\webapp\WEB-INF\classes started by Lx in C:\Users\Lx\work2\web)
2021-01-08 20:31:42.076 DEBUG 22628 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2021-01-08 20:31:42.077 INFO  22628 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2021-01-08 20:31:45.652 INFO  22628 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2021-01-08 20:31:45.657 INFO  22628 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2021-01-08 20:31:47.681 INFO  22628 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/Lx
2021-01-08 20:31:47.682 INFO  22628 [           main] [com.jeesite.common.config.Global       ] - user.dir: C:/Users/Lx/work2/web
2021-01-08 20:31:47.682 INFO  22628 [           main] [com.jeesite.common.config.Global       ] - logPath: C:/Users/Lx/work2/web/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.2 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：adfb80499b32e1492729a84d62f8cd98
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2021-01-08 20:31:47.683 WARN  22628 [           main] [com.jeesite.common.config.Global       ] - 

===================================================================

    类型: mysql
    驱动: com.mysql.cj.jdbc.Driver
    地址: jdbc:mysql://127.0.0.1:3306/jeesite?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    用户: root

===================================================================

注意：以上信息是初始化数据库的连接信息，请认真对照。

本操作主要用于首次安装 JeeSite 或后安装 Module 的数据表初始化，若模块已安装会自动忽略。
在 v4.2 版本以后，官方初始化数据库是比较安全的，官方代码中不会包含任何删除数据表及数据的脚本。

如果你是升级到 v4.2 的版本，无法排除你是否升级完整，为安全期间，还是建议先备份数据库后再操作。

系统为您提供 20 秒的考虑时间，若不初始化数据库，请停止服务启动......

2021-01-08 20:32:08.747 DEBUG 22628 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2021-01-08 20:32:10.122 INFO  22628 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2021-01-08 20:32:11.896 INFO  22628 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2021-01-08 20:32:18.027 INFO  22628 [           main] [com.jeesite.modules.sys.db.InitCoreData] - ===== InitData Started ============
2021-01-08 20:32:18.182 DEBUG 22628 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@796642ae] will not be managed by Spring
2021-01-08 20:32:18.989 DEBUG 22628 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 20:32:19.019 DEBUG 22628 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 20:32:19.047 DEBUG 22628 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 20:32:19.051 INFO  22628 [           main] [com.jeesite.modules.sys.db.InitCoreData] - ===== InitData Completed ========== 耗时：1秒
2021-01-08 20:32:19.051 INFO  22628 [           main] [c.jeesite.modules.test.db.InitTestData ] - ===== InitData Started ============
2021-01-08 20:32:19.051 INFO  22628 [           main] [c.jeesite.modules.test.db.InitTestData ] - ===== InitData Completed ========== 耗时：0毫秒
2021-01-08 20:32:19.086 DEBUG 22628 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2021-01-08 20:32:19.089 DEBUG 22628 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@796642ae] will be managed by Spring
2021-01-08 20:32:19.090 DEBUG 22628 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2021-01-08 20:32:19.092 DEBUG 22628 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2021-01-08 20:32:19.103 DEBUG 22628 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2021-01-08 20:32:19.115 WARN  22628 [           main] [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8980 is already in use
2021-01-08 20:32:19.145 DEBUG 22628 [           main] [com.jeesite.common.utils.SpringUtils   ] - Destroy: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6986852, started on Fri Jan 08 20:31:42 GMT+08:00 2021
2021-01-08 20:32:19.182 ERROR 22628 [           main] [o.s.b.d.LoggingFailureAnalysisReporter ] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8980 was already in use.

Action:

Identify and stop the process that's listening on port 8980 or configure this application to listen on another port.

2021-01-08 20:32:45.799 INFO  19884 [           main] [com.jeesite.modules.Application        ] - Starting Application on DESKTOP-0IUV8EB with PID 19884 (C:\Users\Lx\work2\web\src\main\webapp\WEB-INF\classes started by Lx in C:\Users\Lx\work2\web)
2021-01-08 20:32:45.807 DEBUG 19884 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2021-01-08 20:32:45.807 INFO  19884 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2021-01-08 20:32:49.681 INFO  19884 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2021-01-08 20:32:49.683 INFO  19884 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2021-01-08 20:32:52.037 INFO  19884 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/Lx
2021-01-08 20:32:52.037 INFO  19884 [           main] [com.jeesite.common.config.Global       ] - user.dir: C:/Users/Lx/work2/web
2021-01-08 20:32:52.038 INFO  19884 [           main] [com.jeesite.common.config.Global       ] - logPath: C:/Users/Lx/work2/web/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.2 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：adfb80499b32e1492729a84d62f8cd98
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2021-01-08 20:32:52.040 WARN  19884 [           main] [com.jeesite.common.config.Global       ] - 

===================================================================

    类型: mysql
    驱动: com.mysql.cj.jdbc.Driver
    地址: jdbc:mysql://127.0.0.1:3306/jeesite?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    用户: root

===================================================================

注意：以上信息是初始化数据库的连接信息，请认真对照。

本操作主要用于首次安装 JeeSite 或后安装 Module 的数据表初始化，若模块已安装会自动忽略。
在 v4.2 版本以后，官方初始化数据库是比较安全的，官方代码中不会包含任何删除数据表及数据的脚本。

如果你是升级到 v4.2 的版本，无法排除你是否升级完整，为安全期间，还是建议先备份数据库后再操作。

系统为您提供 20 秒的考虑时间，若不初始化数据库，请停止服务启动......

2021-01-08 20:33:13.321 DEBUG 19884 [           main] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2021-01-08 20:33:13.933 INFO  19884 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2021-01-08 20:33:15.882 INFO  19884 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2021-01-08 20:33:21.434 INFO  19884 [           main] [com.jeesite.modules.sys.db.InitCoreData] - ===== InitData Started ============
2021-01-08 20:33:21.560 DEBUG 19884 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@445d4517] will not be managed by Spring
2021-01-08 20:33:22.179 DEBUG 19884 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 20:33:22.208 DEBUG 19884 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 20:33:22.234 DEBUG 19884 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 20:33:22.239 INFO  19884 [           main] [com.jeesite.modules.sys.db.InitCoreData] - ===== InitData Completed ========== 耗时：804毫秒
2021-01-08 20:33:22.239 INFO  19884 [           main] [c.jeesite.modules.test.db.InitTestData ] - ===== InitData Started ============
2021-01-08 20:33:22.240 INFO  19884 [           main] [c.jeesite.modules.test.db.InitTestData ] - ===== InitData Completed ========== 耗时：1毫秒
2021-01-08 20:33:22.284 DEBUG 19884 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 7毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2021-01-08 20:33:22.287 DEBUG 19884 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@445d4517] will be managed by Spring
2021-01-08 20:33:22.288 DEBUG 19884 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2021-01-08 20:33:22.289 DEBUG 19884 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2021-01-08 20:33:22.298 DEBUG 19884 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2021-01-08 20:33:22.318 WARN  19884 [           main] [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8980 is already in use
2021-01-08 20:33:22.373 DEBUG 19884 [           main] [com.jeesite.common.utils.SpringUtils   ] - Destroy: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70eecdc2, started on Fri Jan 08 20:32:45 GMT+08:00 2021
2021-01-08 20:33:22.406 ERROR 19884 [           main] [o.s.b.d.LoggingFailureAnalysisReporter ] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8980 was already in use.

Action:

Identify and stop the process that's listening on port 8980 or configure this application to listen on another port.

2021-01-08 20:38:44.265 INFO  21528 [           main] [com.jeesite.modules.Application        ] - Starting Application on DESKTOP-0IUV8EB with PID 21528 (C:\Users\Lx\work2\web\src\main\webapp\WEB-INF\classes started by Lx in C:\Users\Lx\work2\web)
2021-01-08 20:38:44.273 DEBUG 21528 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2021-01-08 20:38:44.274 INFO  21528 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2021-01-08 20:38:48.463 INFO  21528 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2021-01-08 20:38:48.466 INFO  21528 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2021-01-08 20:38:51.409 INFO  21528 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/Lx
2021-01-08 20:38:51.411 INFO  21528 [           main] [com.jeesite.common.config.Global       ] - user.dir: C:/Users/Lx/work2/web
2021-01-08 20:38:51.412 INFO  21528 [           main] [com.jeesite.common.config.Global       ] - logPath: C:/Users/Lx/work2/web/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.2 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：adfb80499b32e1492729a84d62f8cd98
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2021-01-08 20:38:51.415 WARN  21528 [           main] [com.jeesite.common.config.Global       ] - 

===================================================================

    类型: mysql
    驱动: com.mysql.cj.jdbc.Driver
    地址: jdbc:mysql://127.0.0.1:3306/jeesite?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    用户: root

===================================================================

注意：以上信息是初始化数据库的连接信息，请认真对照。

本操作主要用于首次安装 JeeSite 或后安装 Module 的数据表初始化，若模块已安装会自动忽略。
在 v4.2 版本以后，官方初始化数据库是比较安全的，官方代码中不会包含任何删除数据表及数据的脚本。

如果你是升级到 v4.2 的版本，无法排除你是否升级完整，为安全期间，还是建议先备份数据库后再操作。

系统为您提供 20 秒的考虑时间，若不初始化数据库，请停止服务启动......

2021-01-08 20:39:12.592 DEBUG 21528 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2021-01-08 20:39:13.662 INFO  21528 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2021-01-08 20:39:15.664 INFO  21528 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2021-01-08 20:39:21.335 INFO  21528 [           main] [com.jeesite.modules.sys.db.InitCoreData] - ===== InitData Started ============
2021-01-08 20:39:21.447 DEBUG 21528 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@650a0b50] will not be managed by Spring
2021-01-08 20:39:22.054 DEBUG 21528 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 20:39:22.079 DEBUG 21528 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 20:39:22.102 DEBUG 21528 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 20:39:22.105 INFO  21528 [           main] [com.jeesite.modules.sys.db.InitCoreData] - ===== InitData Completed ========== 耗时：769毫秒
2021-01-08 20:39:22.105 INFO  21528 [           main] [c.jeesite.modules.test.db.InitTestData ] - ===== InitData Started ============
2021-01-08 20:39:22.105 INFO  21528 [           main] [c.jeesite.modules.test.db.InitTestData ] - ===== InitData Completed ========== 耗时：0毫秒
2021-01-08 20:39:22.189 DEBUG 21528 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2021-01-08 20:39:22.193 DEBUG 21528 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@650a0b50] will be managed by Spring
2021-01-08 20:39:22.194 DEBUG 21528 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2021-01-08 20:39:22.197 DEBUG 21528 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2021-01-08 20:39:22.209 DEBUG 21528 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2021-01-08 20:39:22.226 WARN  21528 [           main] [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8980 is already in use
2021-01-08 20:39:22.369 DEBUG 21528 [           main] [com.jeesite.common.utils.SpringUtils   ] - Destroy: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7db0565c, started on Fri Jan 08 20:38:44 GMT+08:00 2021
2021-01-08 20:39:22.478 ERROR 21528 [           main] [o.s.b.d.LoggingFailureAnalysisReporter ] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8980 was already in use.

Action:

Identify and stop the process that's listening on port 8980 or configure this application to listen on another port.

2021-01-08 20:42:58.921 INFO  11236 [           main] [com.jeesite.modules.Application        ] - Starting Application on DESKTOP-0IUV8EB with PID 11236 (C:\Users\Lx\work2\web\src\main\webapp\WEB-INF\classes started by Lx in C:\Users\Lx\work2\web)
2021-01-08 20:42:58.928 DEBUG 11236 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2021-01-08 20:42:58.929 INFO  11236 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2021-01-08 20:43:02.522 INFO  11236 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2021-01-08 20:43:02.524 INFO  11236 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2021-01-08 20:43:04.527 INFO  11236 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/Lx
2021-01-08 20:43:04.530 INFO  11236 [           main] [com.jeesite.common.config.Global       ] - user.dir: C:/Users/Lx/work2/web
2021-01-08 20:43:04.532 INFO  11236 [           main] [com.jeesite.common.config.Global       ] - logPath: C:/Users/Lx/work2/web/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.2 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：adfb80499b32e1492729a84d62f8cd98
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2021-01-08 20:43:04.553 WARN  11236 [           main] [com.jeesite.common.config.Global       ] - 

===================================================================

    类型: mysql
    驱动: com.mysql.cj.jdbc.Driver
    地址: jdbc:mysql://127.0.0.1:3306/jeesite?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    用户: root

===================================================================

注意：以上信息是初始化数据库的连接信息，请认真对照。

本操作主要用于首次安装 JeeSite 或后安装 Module 的数据表初始化，若模块已安装会自动忽略。
在 v4.2 版本以后，官方初始化数据库是比较安全的，官方代码中不会包含任何删除数据表及数据的脚本。

如果你是升级到 v4.2 的版本，无法排除你是否升级完整，为安全期间，还是建议先备份数据库后再操作。

系统为您提供 20 秒的考虑时间，若不初始化数据库，请停止服务启动......

2021-01-08 20:43:25.653 DEBUG 11236 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2021-01-08 20:43:26.633 INFO  11236 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2021-01-08 20:43:29.041 INFO  11236 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2021-01-08 20:43:35.589 INFO  11236 [           main] [com.jeesite.modules.sys.db.InitCoreData] - ===== InitData Started ============
2021-01-08 20:43:35.717 DEBUG 11236 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will not be managed by Spring
2021-01-08 20:43:36.375 DEBUG 11236 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 20:43:36.400 DEBUG 11236 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 20:43:36.432 DEBUG 11236 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 20:43:36.437 INFO  11236 [           main] [com.jeesite.modules.sys.db.InitCoreData] - ===== InitData Completed ========== 耗时：847毫秒
2021-01-08 20:43:36.437 INFO  11236 [           main] [c.jeesite.modules.test.db.InitTestData ] - ===== InitData Started ============
2021-01-08 20:43:36.438 INFO  11236 [           main] [c.jeesite.modules.test.db.InitTestData ] - ===== InitData Completed ========== 耗时：1毫秒
2021-01-08 20:43:36.507 DEBUG 11236 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 8毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2021-01-08 20:43:36.511 DEBUG 11236 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:43:36.512 DEBUG 11236 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2021-01-08 20:43:36.519 DEBUG 11236 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2021-01-08 20:43:36.531 DEBUG 11236 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2021-01-08 20:43:36.632 INFO  11236 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2021-01-08 20:43:38.517 INFO  11236 [           main] [com.jeesite.modules.Application        ] - Started Application in 40.994 seconds (JVM running for 42.196)
2021-01-08 20:43:45.580 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = #{userCode}
2021-01-08 20:43:45.589 DEBUG 11236 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:43:45.595 DEBUG 11236 [nio-8980-exec-4] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = ?
2021-01-08 20:43:45.597 DEBUG 11236 [nio-8980-exec-4] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2021-01-08 20:43:45.620 DEBUG 11236 [nio-8980-exec-4] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2021-01-08 20:43:45.876 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2021-01-08 20:43:45.876 DEBUG 11236 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:43:45.884 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2021-01-08 20:43:45.885 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2021-01-08 20:43:45.921 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2021-01-08 20:43:45.976 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 12毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:43:45.987 DEBUG 11236 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:43:45.995 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:43:46.004 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2021-01-08 20:43:46.136 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 73
2021-01-08 20:43:47.556 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 12毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:43:47.576 DEBUG 11236 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:43:47.597 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:43:47.606 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_sys_code(String), 1(String), 0(String)
2021-01-08 20:43:47.611 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2021-01-08 20:44:15.364 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:44:15.361  URI: /js/a/sys/menu/list  IP: 127.0.0.1
2021-01-08 20:44:15.460 INFO  11236 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/menuList <<<<<<<<< /js/a/sys/menu/list >>>>>>>>> com.jeesite.modules.sys.web.MenuController#list(Menu, Model)
2021-01-08 20:44:15.653 DEBUG 11236 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:44:15.654 DEBUG 11236 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:15.659 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:44:15.664 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_type(String), 1(String), 0(String)
2021-01-08 20:44:15.684 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 20:44:15.789 DEBUG 11236 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:44:15.790 DEBUG 11236 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:15.796 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:44:15.798 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_show_hide(String), 1(String), 0(String)
2021-01-08 20:44:15.802 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 20:44:15.823 DEBUG 11236 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:44:15.823 DEBUG 11236 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:15.827 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:44:15.834 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_weight(String), 1(String), 0(String)
2021-01-08 20:44:15.839 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 4
2021-01-08 20:44:15.888 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:44:15.842  用时: 481毫秒  URI: /js/a/sys/menu/list  总内存: 618MB  已用内存: 243.420MB
2021-01-08 20:44:15.900 DEBUG 11236 [  log-save-10-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 6毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:44:15.901 DEBUG 11236 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:15.903 DEBUG 11236 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:44:15.904 DEBUG 11236 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 20:44:15.942 DEBUG 11236 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 73
2021-01-08 20:44:15.961 DEBUG 11236 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:44:15.965 DEBUG 11236 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:15.965 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:44:15.971 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524519437524992(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 20:44:15.885(Timestamp), /js/a/sys/menu/list(String), GET(String), (String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 481(Long)
2021-01-08 20:44:15.975 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:44:16.177 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:44:16.177  URI: /js/a/sys/menu/listData  IP: 127.0.0.1
2021-01-08 20:44:16.244 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:44:16.251 DEBUG 11236 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:16.260 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? AND a.`sys_code` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:44:16.268 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String), default(String)
2021-01-08 20:44:16.291 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 2
2021-01-08 20:44:16.325 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:44:16.322  用时: 145毫秒  URI: /js/a/sys/menu/listData  总内存: 618MB  已用内存: 256.154MB
2021-01-08 20:44:16.339 DEBUG 11236 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:44:16.340 DEBUG 11236 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:16.341 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:44:16.342 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524521283018752(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 20:44:16.325(Timestamp), /js/a/sys/menu/listData(String), POST(String), moduleCodes=&sysCode=default&menuNameOrig=&pageNo=&pageSize=&orderBy=(String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 145(Long)
2021-01-08 20:44:16.356 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:44:18.693 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:44:18.692  URI: /js/a/sys/menu/listData  IP: 127.0.0.1
2021-01-08 20:44:18.738 DEBUG 11236 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:44:18.739 DEBUG 11236 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:18.743 DEBUG 11236 [nio-8980-exec-9] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? AND a.`sys_code` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:44:18.744 DEBUG 11236 [nio-8980-exec-9] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1347176658019860480(String), default(String)
2021-01-08 20:44:18.750 DEBUG 11236 [nio-8980-exec-9] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 7
2021-01-08 20:44:18.772 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:44:18.765  用时: 73毫秒  URI: /js/a/sys/menu/listData  总内存: 618MB  已用内存: 261.854MB
2021-01-08 20:44:18.793 DEBUG 11236 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:44:18.794 DEBUG 11236 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:18.798 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:44:18.800 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524531542286336(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 20:44:18.771(Timestamp), /js/a/sys/menu/listData(String), POST(String), id=&nodeid=1347176658019860480&parentid=0&n_level=0&_search=false&nd=1610109858688&pageSize=&pageNo=&orderBy=&sord=asc&moduleCodes=&sysCode=default&menuNameOrig=&parentCode=1347176658019860480(String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 73(Long)
2021-01-08 20:44:18.803 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:44:32.940 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:44:32.940  URI: /js/a/sys/role/list  IP: 127.0.0.1
2021-01-08 20:44:32.985 INFO  11236 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/roleList <<<<<<<<< /js/a/sys/role/list >>>>>>>>> com.jeesite.modules.sys.web.RoleController#list(Role, Model)
2021-01-08 20:44:33.046 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:44:33.047 DEBUG 11236 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:33.053 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:44:33.054 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_user_type(String), 1(String), 0(String)
2021-01-08 20:44:33.056 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2021-01-08 20:44:33.063 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:44:33.063 DEBUG 11236 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:33.068 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:44:33.070 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_yes_no(String), 1(String), 0(String)
2021-01-08 20:44:33.072 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 20:44:33.080 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:44:33.081 DEBUG 11236 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:33.086 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:44:33.087 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_search_status(String), 1(String), 0(String)
2021-01-08 20:44:33.089 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 20:44:33.097 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:44:33.098 DEBUG 11236 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:33.102 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:44:33.103 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_role_type(String), 1(String), 0(String)
2021-01-08 20:44:33.108 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 4
2021-01-08 20:44:33.116 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:44:33.117 DEBUG 11236 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:33.121 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:44:33.122 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_role_data_scope(String), 1(String), 0(String)
2021-01-08 20:44:33.125 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 6
2021-01-08 20:44:33.138 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:44:33.139 DEBUG 11236 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:33.149 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:44:33.150 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_role_biz_scope(String), 1(String), 0(String)
2021-01-08 20:44:33.163 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2021-01-08 20:44:33.184 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:44:33.184 DEBUG 11236 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:33.190 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:44:33.201 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_status(String), 1(String), 0(String)
2021-01-08 20:44:33.205 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 7
2021-01-08 20:44:33.212 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:44:33.211  用时: 271毫秒  URI: /js/a/sys/role/list  总内存: 618MB  已用内存: 293.442MB
2021-01-08 20:44:33.266 DEBUG 11236 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 4毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:44:33.269 DEBUG 11236 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:33.271 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:44:33.274 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524592112230400(String), select(String), 系统管理/权限管理/角色管理(String), system(String), 超级管理员(String), 2021-01-08 20:44:33.212(Timestamp), /js/a/sys/role/list(String), GET(String), (String), (String), Role(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 271(Long)
2021-01-08 20:44:33.278 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:44:33.395 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:44:33.394  URI: /js/a/sys/role/listData  IP: 127.0.0.1
2021-01-08 20:44:33.443 DEBUG 11236 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`role_code` AS "roleCode", a.`role_name` AS "roleName", a.`role_type` AS "roleType", a.`role_sort` AS "roleSort", a.`is_sys` AS "isSys", a.`user_type` AS "userType", a.`data_scope` AS "dataScope", a.`biz_scope` AS "bizScope", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_role` a WHERE a.`status` != #{STATUS_DELETE} ORDER BY a.role_sort ASC
2021-01-08 20:44:33.452 DEBUG 11236 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:33.583 DEBUG 11236 [nio-8980-exec-3] [c.j.modules.sys.dao.RoleDao.findList   ] - ==>  Preparing: SELECT count(0) FROM `js_sys_role` a WHERE a.`status` != ?
2021-01-08 20:44:33.583 DEBUG 11236 [nio-8980-exec-3] [c.j.modules.sys.dao.RoleDao.findList   ] - ==> Parameters: 1(String)
2021-01-08 20:44:33.585 DEBUG 11236 [nio-8980-exec-3] [c.j.modules.sys.dao.RoleDao.findList   ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`role_code` AS "roleCode", a.`role_name` AS "roleName", a.`role_type` AS "roleType", a.`role_sort` AS "roleSort", a.`is_sys` AS "isSys", a.`user_type` AS "userType", a.`data_scope` AS "dataScope", a.`biz_scope` AS "bizScope", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_role` a WHERE a.`status` != ? ORDER BY a.role_sort ASC LIMIT 20
2021-01-08 20:44:33.586 DEBUG 11236 [nio-8980-exec-3] [c.j.modules.sys.dao.RoleDao.findList   ] - ==> Parameters: 1(String)
2021-01-08 20:44:33.588 DEBUG 11236 [nio-8980-exec-3] [c.j.modules.sys.dao.RoleDao.findList   ] - <==      Total: 4
2021-01-08 20:44:33.637 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:44:33.626  用时: 232毫秒  URI: /js/a/sys/role/listData  总内存: 618MB  已用内存: 315.198MB
2021-01-08 20:44:33.654 DEBUG 11236 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:44:33.655 DEBUG 11236 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:33.655 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:44:33.656 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524593894809600(String), select(String), 系统管理/权限管理/角色管理(String), system(String), 超级管理员(String), 2021-01-08 20:44:33.637(Timestamp), /js/a/sys/role/listData(String), POST(String), ctrlPermi=2&roleName_like=&roleCode_like=&userType=&isSys=&status=&pageNo=&pageSize=&orderBy=(String), (String), Role(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 232(Long)
2021-01-08 20:44:33.657 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:44:37.548 DEBUG 11236 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:44:37.548  URI: /js/a/sys/secAdmin/list  IP: 127.0.0.1
2021-01-08 20:44:37.593 INFO  11236 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/user/secAdminList <<<<<<<<< /js/a/sys/secAdmin/list >>>>>>>>> com.jeesite.modules.sys.web.user.SecAdminController#list(User, Model)
2021-01-08 20:44:37.615 DEBUG 11236 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:44:37.615 DEBUG 11236 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:37.620 DEBUG 11236 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:44:37.621 DEBUG 11236 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_user_status(String), 1(String), 0(String)
2021-01-08 20:44:37.623 DEBUG 11236 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 3
2021-01-08 20:44:37.647 DEBUG 11236 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:44:37.646  用时: 98毫秒  URI: /js/a/sys/secAdmin/list  总内存: 618MB  已用内存: 330.779MB
2021-01-08 20:44:37.653 DEBUG 11236 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:44:37.653 DEBUG 11236 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:37.654 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:44:37.656 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524610709774336(String), select(String), 系统管理/权限管理/二级管理员(String), system(String), 超级管理员(String), 2021-01-08 20:44:37.646(Timestamp), /js/a/sys/secAdmin/list(String), GET(String), (String), (String), User(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 98(Long)
2021-01-08 20:44:37.660 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:44:37.820 DEBUG 11236 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:44:37.820  URI: /js/a/sys/secAdmin/listData  IP: 127.0.0.1
2021-01-08 20:44:37.935 DEBUG 11236 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:37.956 DEBUG 11236 [nio-8980-exec-6] [c.j.modules.sys.dao.UserDao.findList   ] - ==>  Preparing: SELECT count(0) FROM `js_sys_user` a WHERE a.`status` != ? AND a.`mgr_type` = ?
2021-01-08 20:44:37.956 DEBUG 11236 [nio-8980-exec-6] [c.j.modules.sys.dao.UserDao.findList   ] - ==> Parameters: 1(String), 2(String)
2021-01-08 20:44:37.959 DEBUG 11236 [nio-8980-exec-6] [c.j.modules.sys.dao.UserDao.findList   ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`status` != ? AND a.`mgr_type` = ? ORDER BY a.user_weight DESC, a.update_date DESC LIMIT 20
2021-01-08 20:44:37.964 DEBUG 11236 [nio-8980-exec-6] [c.j.modules.sys.dao.UserDao.findList   ] - ==> Parameters: 1(String), 2(String)
2021-01-08 20:44:37.966 DEBUG 11236 [nio-8980-exec-6] [c.j.modules.sys.dao.UserDao.findList   ] - <==      Total: 0
2021-01-08 20:44:37.974 DEBUG 11236 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:44:37.971  用时: 151毫秒  URI: /js/a/sys/secAdmin/listData  总内存: 618MB  已用内存: 338.197MB
2021-01-08 20:44:37.980 DEBUG 11236 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 4毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:44:37.980 DEBUG 11236 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:37.981 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:44:37.982 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524612081311744(String), select(String), 系统管理/权限管理/二级管理员(String), system(String), 超级管理员(String), 2021-01-08 20:44:37.973(Timestamp), /js/a/sys/secAdmin/listData(String), POST(String), loginCode=&userName=&email=&mobile=&phone=&status=&pageNo=&pageSize=&orderBy=(String), (String), User(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 151(Long)
2021-01-08 20:44:37.988 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:44:38.536 DEBUG 11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:44:38.536  URI: /js/a/sys/corpAdmin/list  IP: 127.0.0.1
2021-01-08 20:44:38.586 INFO  11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/user/corpAdminList <<<<<<<<< /js/a/sys/corpAdmin/list >>>>>>>>> com.jeesite.modules.sys.web.user.CorpAdminController#list(User, Model)
2021-01-08 20:44:38.615 DEBUG 11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:44:38.612  用时: 76毫秒  URI: /js/a/sys/corpAdmin/list  总内存: 618MB  已用内存: 348.099MB
2021-01-08 20:44:38.617 DEBUG 11236 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:44:38.617 DEBUG 11236 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:38.618 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:44:38.621 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524614765666304(String), access(String), 系统管理/权限管理/系统管理员(String), system(String), 超级管理员(String), 2021-01-08 20:44:38.613(Timestamp), /js/a/sys/corpAdmin/list(String), GET(String), (String), (String), User(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 76(Long)
2021-01-08 20:44:38.622 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:44:38.740 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:44:38.740  URI: /js/a/sys/corpAdmin/listData  IP: 127.0.0.1
2021-01-08 20:44:38.753 DEBUG 11236 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:38.781 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.sys.dao.UserDao.findList   ] - ==>  Preparing: SELECT count(0) FROM `js_sys_user` a WHERE a.`status` != ? AND a.`mgr_type` = ?
2021-01-08 20:44:38.782 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.sys.dao.UserDao.findList   ] - ==> Parameters: 1(String), 1(String)
2021-01-08 20:44:38.784 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.sys.dao.UserDao.findList   ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`status` != ? AND a.`mgr_type` = ? ORDER BY a.user_weight DESC, a.update_date DESC LIMIT 20
2021-01-08 20:44:38.785 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.sys.dao.UserDao.findList   ] - ==> Parameters: 1(String), 1(String)
2021-01-08 20:44:38.788 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.sys.dao.UserDao.findList   ] - <==      Total: 1
2021-01-08 20:44:38.807 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:44:38.805  用时: 65毫秒  URI: /js/a/sys/corpAdmin/listData  总内存: 618MB  已用内存: 349.779MB
2021-01-08 20:44:38.819 DEBUG 11236 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:44:38.819 DEBUG 11236 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:38.820 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:44:38.821 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524615579361280(String), select(String), 系统管理/权限管理/系统管理员(String), system(String), 超级管理员(String), 2021-01-08 20:44:38.807(Timestamp), /js/a/sys/corpAdmin/listData(String), POST(String), loginCode=&userName=&corpCode_=&corpName_=&status=&pageNo=&pageSize=&orderBy=(String), (String), User(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 65(Long)
2021-01-08 20:44:38.822 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:44:42.371 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:44:42.371  URI: /js/a/sys/audit/list  IP: 127.0.0.1
2021-01-08 20:44:42.392 INFO  11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/auditList <<<<<<<<< /js/a/sys/audit/list >>>>>>>>> com.jeesite.modules.sys.web.AuditController#auditList(Audit, Model)
2021-01-08 20:44:42.461 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:44:42.458  用时: 87毫秒  URI: /js/a/sys/audit/list  总内存: 618MB  已用内存: 359.674MB
2021-01-08 20:44:42.464 DEBUG 11236 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:44:42.464 DEBUG 11236 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:42.465 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:44:42.466 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524630896959488(String), access(String), 系统管理/权限管理/安全审计(String), system(String), 超级管理员(String), 2021-01-08 20:44:42.459(Timestamp), /js/a/sys/audit/list(String), GET(String), (String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 87(Long)
2021-01-08 20:44:42.467 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:44:42.566 DEBUG 11236 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:44:42.566  URI: /js/a/sys/audit/listData  IP: 127.0.0.1
2021-01-08 20:44:42.756 DEBUG 11236 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:42.789 DEBUG 11236 [nio-8980-exec-2] [c.j.m.sys.dao.AuditDao.findAuditList   ] - ==>  Preparing: SELECT count(0) FROM js_sys_user u LEFT JOIN js_sys_employee e ON e.emp_code = u.ref_code AND u.user_type = 'employee' LEFT JOIN js_sys_office o ON o.office_code = e.office_code WHERE u.status = ? AND (u.pwd_security_level IN ('0', '1', '2') OR (u.pwd_update_date IS NULL OR u.pwd_update_date < ?) OR (u.last_login_date IS NULL OR u.last_login_date < ?) OR u.pwd_quest_update_date IS NULL)
2021-01-08 20:44:42.790 DEBUG 11236 [nio-8980-exec-2] [c.j.m.sys.dao.AuditDao.findAuditList   ] - ==> Parameters: 0(String), 2020-12-09 20:44:42.741(Timestamp), 2020-12-09 20:44:42.741(Timestamp)
2021-01-08 20:44:42.798 DEBUG 11236 [nio-8980-exec-2] [c.j.m.sys.dao.AuditDao.findAuditList   ] - ==>  Preparing: SELECT u.user_code AS "userCode", u.login_code AS "loginCode", u.user_name AS "userName", o.office_code AS "officeCode", o.office_name AS "officeName", u.pwd_security_level AS "pwdSecurityLevel", u.pwd_update_date AS "pwdUpdateDate", u.pwd_quest_update_date AS "pwdQuestUpdateDate", u.last_login_date AS "lastLoginDate", u.create_date AS "createDate", u.update_date AS "updateDate", u.user_type AS "userType", u.status AS "status" FROM js_sys_user u LEFT JOIN js_sys_employee e ON e.emp_code = u.ref_code AND u.user_type = 'employee' LEFT JOIN js_sys_office o ON o.office_code = e.office_code WHERE u.status = ? AND ( u.pwd_security_level in ('0', '1', '2') OR (u.pwd_update_date is null OR u.pwd_update_date < ?) OR (u.last_login_date is null OR u.last_login_date < ?) OR u.pwd_quest_update_date is null ) ORDER BY u.update_date LIMIT 20
2021-01-08 20:44:42.799 DEBUG 11236 [nio-8980-exec-2] [c.j.m.sys.dao.AuditDao.findAuditList   ] - ==> Parameters: 0(String), 2020-12-09 20:44:42.741(Timestamp), 2020-12-09 20:44:42.741(Timestamp)
2021-01-08 20:44:42.800 DEBUG 11236 [nio-8980-exec-2] [c.j.m.sys.dao.AuditDao.findAuditList   ] - <==      Total: 2
2021-01-08 20:44:42.819 DEBUG 11236 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:44:42.816  用时: 250毫秒  URI: /js/a/sys/audit/listData  总内存: 618MB  已用内存: 368.133MB
2021-01-08 20:44:42.830 DEBUG 11236 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 7毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:44:42.831 DEBUG 11236 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:42.831 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:44:42.836 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524632406908928(String), select(String), 系统管理/权限管理/安全审计(String), system(String), 超级管理员(String), 2021-01-08 20:44:42.819(Timestamp), /js/a/sys/audit/listData(String), POST(String), auditType=&loginCode=&userName=&employee.office.officeName=&officeCode=&pageNo=&pageSize=&orderBy=(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 250(Long)
2021-01-08 20:44:42.838 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:44:53.562 DEBUG 11236 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:44:53.562  URI: /js/a/test/testData/list  IP: 127.0.0.1
2021-01-08 20:44:53.603 INFO  11236 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/test/testDataList <<<<<<<<< /js/a/test/testData/list >>>>>>>>> com.jeesite.modules.test.web.TestDataController#list(TestData, Model)
2021-01-08 20:44:53.695 DEBUG 11236 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:44:53.694  用时: 132毫秒  URI: /js/a/test/testData/list  总内存: 618MB  已用内存: 386.975MB
2021-01-08 20:44:53.699 DEBUG 11236 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:44:53.700 DEBUG 11236 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:53.700 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:44:53.702 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524678019964928(String), access(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2021-01-08 20:44:53.694(Timestamp), /js/a/test/testData/list(String), GET(String), (String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 132(Long)
2021-01-08 20:44:53.712 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:44:53.899 DEBUG 11236 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:44:53.899  URI: /js/a/test/testData/listData  IP: 127.0.0.1
2021-01-08 20:44:54.043 DEBUG 11236 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != #{STATUS_DELETE} ORDER BY a.update_date DESC
2021-01-08 20:44:54.047 DEBUG 11236 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:54.070 DEBUG 11236 [nio-8980-exec-6] [c.j.m.test.dao.TestDataDao.findList    ] - ==>  Preparing: SELECT count(0) FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != ?
2021-01-08 20:44:54.071 DEBUG 11236 [nio-8980-exec-6] [c.j.m.test.dao.TestDataDao.findList    ] - ==> Parameters: 1(String)
2021-01-08 20:44:54.078 DEBUG 11236 [nio-8980-exec-6] [c.j.m.test.dao.TestDataDao.findList    ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != ? ORDER BY a.update_date DESC LIMIT 20
2021-01-08 20:44:54.080 DEBUG 11236 [nio-8980-exec-6] [c.j.m.test.dao.TestDataDao.findList    ] - ==> Parameters: 1(String)
2021-01-08 20:44:54.082 DEBUG 11236 [nio-8980-exec-6] [c.j.m.test.dao.TestDataDao.findList    ] - <==      Total: 0
2021-01-08 20:44:54.088 DEBUG 11236 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:44:54.086  用时: 187毫秒  URI: /js/a/test/testData/listData  总内存: 618MB  已用内存: 395.145MB
2021-01-08 20:44:54.099 DEBUG 11236 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:44:54.100 DEBUG 11236 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:54.100 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:44:54.102 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524679672520704(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2021-01-08 20:44:54.088(Timestamp), /js/a/test/testData/listData(String), POST(String), testInput=&testTextarea=&testSelect=&testDate_gte=&testDate_lte=&testDatetime_gte=&testDatetime_lte=&testUser.userName=&testUser.userCode=&testOffice.officeName=&testOffice.officeCode=&testAreaName=&testAreaCode=&!testSelectMultiple=&status=&!testRadio=&testRadio=&!testCheckbox=&pageNo=&pageSize=&orderBy=(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 187(Long)
2021-01-08 20:44:54.106 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:44:55.560 DEBUG 11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:44:55.560  URI: /js/a/test/testTree/list  IP: 127.0.0.1
2021-01-08 20:44:55.598 INFO  11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/test/testTreeList <<<<<<<<< /js/a/test/testTree/list >>>>>>>>> com.jeesite.modules.test.web.TestTreeController#list(TestTree, Model)
2021-01-08 20:44:55.622 DEBUG 11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:44:55.621  用时: 61毫秒  URI: /js/a/test/testTree/list  总内存: 618MB  已用内存: 405.804MB
2021-01-08 20:44:55.630 DEBUG 11236 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:44:55.630 DEBUG 11236 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:55.631 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:44:55.632 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524686106583040(String), access(String), 系统管理/研发工具/代码生成实例/树表_树结构表(String), system(String), 超级管理员(String), 2021-01-08 20:44:55.622(Timestamp), /js/a/test/testTree/list(String), GET(String), (String), (String), TestTree(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 61(Long)
2021-01-08 20:44:55.634 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:44:55.721 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:44:55.721  URI: /js/a/test/testTree/listData  IP: 127.0.0.1
2021-01-08 20:44:55.768 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`tree_code` AS "treeCode", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`tree_name` AS "treeName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `test_tree` a WHERE a.`parent_code` = #{sqlMap.where#parent_code#EQ1} AND a.`status` != #{STATUS_DELETE} ORDER BY a.tree_sorts, a.tree_code
2021-01-08 20:44:55.772 DEBUG 11236 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:55.780 DEBUG 11236 [nio-8980-exec-4] [c.j.m.test.dao.TestTreeDao.findList    ] - ==>  Preparing: SELECT a.`tree_code` AS "treeCode", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`tree_name` AS "treeName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `test_tree` a WHERE a.`parent_code` = ? AND a.`status` != ? ORDER BY a.tree_sorts, a.tree_code
2021-01-08 20:44:55.780 DEBUG 11236 [nio-8980-exec-4] [c.j.m.test.dao.TestTreeDao.findList    ] - ==> Parameters: 0(String), 1(String)
2021-01-08 20:44:55.782 DEBUG 11236 [nio-8980-exec-4] [c.j.m.test.dao.TestTreeDao.findList    ] - <==      Total: 0
2021-01-08 20:44:55.788 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:44:55.787  用时: 66毫秒  URI: /js/a/test/testTree/listData  总内存: 618MB  已用内存: 413.283MB
2021-01-08 20:44:55.796 DEBUG 11236 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:44:55.796 DEBUG 11236 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:55.797 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:44:55.798 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524686802837504(String), select(String), 系统管理/研发工具/代码生成实例/树表_树结构表(String), system(String), 超级管理员(String), 2021-01-08 20:44:55.788(Timestamp), /js/a/test/testTree/listData(String), POST(String), treeName=&remarks=&status=&pageNo=&pageSize=&orderBy=(String), (String), TestTree(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 66(Long)
2021-01-08 20:44:55.799 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:44:57.825 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:44:57.825  URI: /js/a/demo/dataGrid/groupGrid  IP: 127.0.0.1
2021-01-08 20:44:57.857 INFO  11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/demo/demoDataGridGroupGrid <<<<<<<<< /js/a/demo/dataGrid/groupGrid >>>>>>>>> com.jeesite.modules.test.web.DemoController#dataGrid(String, TestData, Model)
2021-01-08 20:44:57.899 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:44:57.895  用时: 70毫秒  URI: /js/a/demo/dataGrid/groupGrid  总内存: 618MB  已用内存: 421.481MB
2021-01-08 20:44:57.904 DEBUG 11236 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:44:57.905 DEBUG 11236 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:57.905 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:44:57.909 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524695652818944(String), access(String), 系统管理/研发工具/数据表格实例/多表头分组小计合计(String), system(String), 超级管理员(String), 2021-01-08 20:44:57.898(Timestamp), /js/a/demo/dataGrid/groupGrid(String), GET(String), (String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 70(Long)
2021-01-08 20:44:57.910 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:44:57.981 DEBUG 11236 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:44:57.981  URI: /js/a/test/testData/listData  IP: 127.0.0.1
2021-01-08 20:44:57.998 DEBUG 11236 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != #{STATUS_DELETE} ORDER BY a.update_date DESC
2021-01-08 20:44:57.998 DEBUG 11236 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:58.015 DEBUG 11236 [nio-8980-exec-2] [c.j.m.test.dao.TestDataDao.findList    ] - ==>  Preparing: SELECT count(0) FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != ?
2021-01-08 20:44:58.015 DEBUG 11236 [nio-8980-exec-2] [c.j.m.test.dao.TestDataDao.findList    ] - ==> Parameters: 1(String)
2021-01-08 20:44:58.017 DEBUG 11236 [nio-8980-exec-2] [c.j.m.test.dao.TestDataDao.findList    ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != ? ORDER BY a.update_date DESC LIMIT 20
2021-01-08 20:44:58.019 DEBUG 11236 [nio-8980-exec-2] [c.j.m.test.dao.TestDataDao.findList    ] - ==> Parameters: 1(String)
2021-01-08 20:44:58.020 DEBUG 11236 [nio-8980-exec-2] [c.j.m.test.dao.TestDataDao.findList    ] - <==      Total: 0
2021-01-08 20:44:58.030 DEBUG 11236 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:44:58.029  用时: 48毫秒  URI: /js/a/test/testData/listData  总内存: 618MB  已用内存: 422.889MB
2021-01-08 20:44:58.035 DEBUG 11236 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:44:58.035 DEBUG 11236 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:58.036 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:44:58.037 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524696206467072(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2021-01-08 20:44:58.03(Timestamp), /js/a/test/testData/listData(String), POST(String), testInput=&testTextarea=&testSelect=&!testSelectMultiple=&!testRadio=&testRadio=&!testCheckbox=&testDate_gte=&testDate_lte=&testDatetime_gte=&testDatetime_lte=&testUser.userName=&testUser.userCode=&testOffice.officeName=&testOffice.officeCode=&testAreaName=&testAreaCode=&status=&remarks=&pageNo=&pageSize=&orderBy=(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 48(Long)
2021-01-08 20:44:58.048 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:44:58.833 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:44:58.832  URI: /js/a/demo/dataGrid/editGrid  IP: 127.0.0.1
2021-01-08 20:44:58.842 INFO  11236 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/demo/demoDataGridEditGrid <<<<<<<<< /js/a/demo/dataGrid/editGrid >>>>>>>>> com.jeesite.modules.test.web.DemoController#dataGrid(String, TestData, Model)
2021-01-08 20:44:58.878 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:44:58.875  用时: 43毫秒  URI: /js/a/demo/dataGrid/editGrid  总内存: 618MB  已用内存: 426.668MB
2021-01-08 20:44:58.882 DEBUG 11236 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:44:58.883 DEBUG 11236 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:58.883 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:44:58.884 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524699763236864(String), access(String), 系统管理/研发工具/数据表格实例/编辑表格多行编辑(String), system(String), 超级管理员(String), 2021-01-08 20:44:58.878(Timestamp), /js/a/demo/dataGrid/editGrid(String), GET(String), (String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 43(Long)
2021-01-08 20:44:58.886 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:44:58.996 DEBUG 11236 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:44:58.995  URI: /js/a/test/testData/listData  IP: 127.0.0.1
2021-01-08 20:44:59.038 DEBUG 11236 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != #{STATUS_DELETE} ORDER BY a.update_date DESC
2021-01-08 20:44:59.038 DEBUG 11236 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:59.063 DEBUG 11236 [nio-8980-exec-8] [c.j.m.test.dao.TestDataDao.findList    ] - ==>  Preparing: SELECT count(0) FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != ?
2021-01-08 20:44:59.064 DEBUG 11236 [nio-8980-exec-8] [c.j.m.test.dao.TestDataDao.findList    ] - ==> Parameters: 1(String)
2021-01-08 20:44:59.066 DEBUG 11236 [nio-8980-exec-8] [c.j.m.test.dao.TestDataDao.findList    ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != ? ORDER BY a.update_date DESC LIMIT 20
2021-01-08 20:44:59.067 DEBUG 11236 [nio-8980-exec-8] [c.j.m.test.dao.TestDataDao.findList    ] - ==> Parameters: 1(String)
2021-01-08 20:44:59.068 DEBUG 11236 [nio-8980-exec-8] [c.j.m.test.dao.TestDataDao.findList    ] - <==      Total: 0
2021-01-08 20:44:59.082 DEBUG 11236 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:44:59.073  用时: 78毫秒  URI: /js/a/test/testData/listData  总内存: 618MB  已用内存: 429.138MB
2021-01-08 20:44:59.085 DEBUG 11236 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:44:59.087 DEBUG 11236 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:59.088 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:44:59.089 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524700618874880(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2021-01-08 20:44:59.082(Timestamp), /js/a/test/testData/listData(String), POST(String), testInput=&testTextarea=&testSelect=&!testSelectMultiple=&!testRadio=&testRadio=&!testCheckbox=&testDate_gte=&testDate_lte=&testDatetime_gte=&testDatetime_lte=&testUser.userName=&testUser.userCode=&testOffice.officeName=&testOffice.officeCode=&testAreaName=&testAreaCode=&status=&remarks=&pageNo=&pageSize=&orderBy=(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 78(Long)
2021-01-08 20:44:59.095 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:44:59.701 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:44:59.701  URI: /js/a/demo/dataGrid/multiGrid  IP: 127.0.0.1
2021-01-08 20:44:59.708 INFO  11236 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/demo/demoDataGridMultiGrid <<<<<<<<< /js/a/demo/dataGrid/multiGrid >>>>>>>>> com.jeesite.modules.test.web.DemoController#dataGrid(String, TestData, Model)
2021-01-08 20:44:59.735 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:44:59.737 DEBUG 11236 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:59.753 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:44:59.757 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_post_type(String), 1(String), 0(String)
2021-01-08 20:44:59.762 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 4
2021-01-08 20:44:59.784 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:44:59.781  用时: 80毫秒  URI: /js/a/demo/dataGrid/multiGrid  总内存: 618MB  已用内存: 432.498MB
2021-01-08 20:44:59.788 DEBUG 11236 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:44:59.788 DEBUG 11236 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:44:59.790 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:44:59.794 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524703563276288(String), select(String), 系统管理/研发工具/数据表格实例/多表联动示例(String), system(String), 超级管理员(String), 2021-01-08 20:44:59.784(Timestamp), /js/a/demo/dataGrid/multiGrid(String), GET(String), (String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 80(Long)
2021-01-08 20:44:59.796 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:44:59.986 DEBUG 11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:44:59.986  URI: /js/a/sys/post/listData  IP: 127.0.0.1
2021-01-08 20:45:00.051 DEBUG 11236 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:45:00.050  URI: /js/a/sys/empUser/listData  IP: 127.0.0.1
2021-01-08 20:45:00.133 DEBUG 11236 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:45:00.238 DEBUG 11236 [nio-8980-exec-7] [c.j.modules.sys.dao.PostDao.findList   ] - ==>  Preparing: SELECT count(0) FROM `js_sys_post` a WHERE a.`status` = ?
2021-01-08 20:45:00.247 DEBUG 11236 [nio-8980-exec-7] [c.j.modules.sys.dao.PostDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 20:45:00.252 DEBUG 11236 [nio-8980-exec-7] [c.j.modules.sys.dao.PostDao.findList   ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`post_code` AS "postCode", a.`post_name` AS "postName", a.`post_type` AS "postType", a.`post_sort` AS "postSort" FROM `js_sys_post` a WHERE a.`status` = ? ORDER BY post_code desc LIMIT 3
2021-01-08 20:45:00.253 DEBUG 11236 [nio-8980-exec-7] [c.j.modules.sys.dao.PostDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 20:45:00.255 DEBUG 11236 [nio-8980-exec-7] [c.j.modules.sys.dao.PostDao.findList   ] - <==      Total: 3
2021-01-08 20:45:00.269 DEBUG 11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:45:00.268  用时: 282毫秒  URI: /js/a/sys/post/listData  总内存: 618MB  已用内存: 458.476MB
2021-01-08 20:45:00.278 DEBUG 11236 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 6毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:45:00.278 DEBUG 11236 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:45:00.279 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:45:00.280 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524705597513728(String), select(String), 系统管理/组织管理/岗位管理/查看(String), system(String), 超级管理员(String), 2021-01-08 20:45:00.269(Timestamp), /js/a/sys/post/listData(String), POST(String), pageNo=&pageSize=3&orderBy=post_code desc(String), (String), Post(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 282(Long)
2021-01-08 20:45:00.281 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:45:00.364 DEBUG 11236 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:45:00.422 DEBUG 11236 [nio-8980-exec-8] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT count(0) FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code = a.ref_code AND a.user_type = ? LEFT JOIN `js_sys_office` o ON o.office_code = e.office_code LEFT JOIN `js_sys_company` c ON c.company_code = e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ?
2021-01-08 20:45:00.428 DEBUG 11236 [nio-8980-exec-8] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String)
2021-01-08 20:45:00.432 DEBUG 11236 [nio-8980-exec-8] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? ORDER BY a.user_weight DESC, a.update_date DESC LIMIT 6
2021-01-08 20:45:00.433 DEBUG 11236 [nio-8980-exec-8] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String)
2021-01-08 20:45:00.436 DEBUG 11236 [nio-8980-exec-8] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2021-01-08 20:45:00.444 DEBUG 11236 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:45:00.443  用时: 393毫秒  URI: /js/a/sys/empUser/listData  总内存: 618MB  已用内存: 464.177MB
2021-01-08 20:45:00.451 DEBUG 11236 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:45:00.452 DEBUG 11236 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:45:00.453 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:45:00.454 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524706331516928(String), select(String), 系统管理/组织管理/用户管理(String), system(String), 超级管理员(String), 2021-01-08 20:45:00.444(Timestamp), /js/a/sys/empUser/listData(String), POST(String), employee.postCode=&pageNo=&pageSize=6&orderBy=(String), (String), EmpUser(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 393(Long)
2021-01-08 20:45:00.455 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:45:06.484 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:45:06.484  URI: /js/a/demo/form/editForm  IP: 127.0.0.1
2021-01-08 20:45:06.490 INFO  11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/demo/demoFormEditForm <<<<<<<<< /js/a/demo/form/editForm >>>>>>>>> com.jeesite.modules.test.web.DemoController#form(String, TestData, Model)
2021-01-08 20:45:06.644 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:45:06.643  用时: 159毫秒  URI: /js/a/demo/form/editForm  总内存: 618MB  已用内存: 477.319MB
2021-01-08 20:45:06.647 DEBUG 11236 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:45:06.647 DEBUG 11236 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:45:06.648 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:45:06.649 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524732336201728(String), access(String), 系统管理/研发工具/表单组件实例/组件应用实例(String), system(String), 超级管理员(String), 2021-01-08 20:45:06.644(Timestamp), /js/a/demo/form/editForm(String), GET(String), (String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 159(Long)
2021-01-08 20:45:06.652 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:45:07.202 DEBUG 11236 [nio-8980-exec-2] [c.j.modules.sys.web.UserfilesController] - File: C:\Users\Lx\work2\web\src\main\webapp\userfiles\fileupload\201812\1073024549485039616.png
2021-01-08 20:45:07.202 DEBUG 11236 [nio-8980-exec-6] [c.j.modules.sys.web.UserfilesController] - File: C:\Users\Lx\work2\web\src\main\webapp\userfiles\fileupload\201812\1073043095867133952.png
2021-01-08 20:45:25.830 DEBUG 11236 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:45:25.830  URI: /js/a/demo/form/layoutForm  IP: 127.0.0.1
2021-01-08 20:45:25.892 INFO  11236 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/demo/demoFormLayoutForm <<<<<<<<< /js/a/demo/form/layoutForm >>>>>>>>> com.jeesite.modules.test.web.DemoController#form(String, TestData, Model)
2021-01-08 20:45:25.929 DEBUG 11236 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:45:25.930 DEBUG 11236 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:45:25.930 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:45:25.931 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524813210771456(String), access(String), 系统管理/研发工具/表单组件实例/栅格布局实例(String), system(String), 超级管理员(String), 2021-01-08 20:45:25.926(Timestamp), /js/a/demo/form/layoutForm(String), GET(String), (String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 88(Long)
2021-01-08 20:45:25.932 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:45:25.934 DEBUG 11236 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:45:25.918  用时: 88毫秒  URI: /js/a/demo/form/layoutForm  总内存: 618MB  已用内存: 496.482MB
2021-01-08 20:45:28.663 DEBUG 11236 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:45:28.663  URI: /js/a/demo/form/tableForm  IP: 127.0.0.1
2021-01-08 20:45:28.666 INFO  11236 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/demo/demoFormTableForm <<<<<<<<< /js/a/demo/form/tableForm >>>>>>>>> com.jeesite.modules.test.web.DemoController#form(String, TestData, Model)
2021-01-08 20:45:28.716 DEBUG 11236 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:45:28.714  用时: 51毫秒  URI: /js/a/demo/form/tableForm  总内存: 618MB  已用内存: 502.163MB
2021-01-08 20:45:28.719 DEBUG 11236 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:45:28.720 DEBUG 11236 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:45:28.723 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:45:28.724 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524824908685312(String), access(String), 系统管理/研发工具/表单组件实例/表格表单实例(String), system(String), 超级管理员(String), 2021-01-08 20:45:28.715(Timestamp), /js/a/demo/form/tableForm(String), GET(String), (String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 51(Long)
2021-01-08 20:45:28.725 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:45:30.353 DEBUG 11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:45:30.353  URI: /js/a/demo/form/tabPage  IP: 127.0.0.1
2021-01-08 20:45:30.361 INFO  11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/demo/demoFormTabPage <<<<<<<<< /js/a/demo/form/tabPage >>>>>>>>> com.jeesite.modules.test.web.DemoController#form(String, TestData, Model)
2021-01-08 20:45:30.379 DEBUG 11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:45:30.378  用时: 25毫秒  URI: /js/a/demo/form/tabPage  总内存: 618MB  已用内存: 507.104MB
2021-01-08 20:45:30.384 DEBUG 11236 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:45:30.386 DEBUG 11236 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:45:30.388 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:45:30.389 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524831888007168(String), access(String), 系统管理/研发工具/表单组件实例/多页签应用示例(String), system(String), 超级管理员(String), 2021-01-08 20:45:30.379(Timestamp), /js/a/demo/form/tabPage(String), GET(String), (String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 25(Long)
2021-01-08 20:45:30.391 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:45:30.458 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:45:30.458  URI: /js/a/sys/office/list  IP: 127.0.0.1
2021-01-08 20:45:30.480 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:45:30.480  URI: /js/a/sys/empUser/list  IP: 127.0.0.1
2021-01-08 20:45:30.495 DEBUG 11236 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will not be managed by Spring
2021-01-08 20:45:30.499 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.sys.dao.PostDao.findList   ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`post_code` AS "postCode", a.`post_name` AS "postName", a.`post_type` AS "postType", a.`post_sort` AS "postSort" FROM `js_sys_post` a WHERE a.`status` = ? ORDER BY a.post_sort ASC
2021-01-08 20:45:30.500 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.sys.dao.PostDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 20:45:30.503 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.sys.dao.PostDao.findList   ] - <==      Total: 5
2021-01-08 20:45:30.504 INFO  11236 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/user/empUserList <<<<<<<<< /js/a/sys/empUser/list >>>>>>>>> com.jeesite.modules.sys.web.user.EmpUserController#list(EmpUser, Model)
2021-01-08 20:45:30.508 INFO  11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/officeList <<<<<<<<< /js/a/sys/office/list >>>>>>>>> com.jeesite.modules.sys.web.OfficeController#list(Office, Model)
2021-01-08 20:45:30.575 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:45:30.573  用时: 93毫秒  URI: /js/a/sys/empUser/list  总内存: 618MB  已用内存: 524.987MB
2021-01-08 20:45:30.576 DEBUG 11236 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:45:30.576 DEBUG 11236 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:45:30.582 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:45:30.582 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_office_type(String), 1(String), 0(String)
2021-01-08 20:45:30.588 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 3
2021-01-08 20:45:30.604 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:45:30.600  用时: 142毫秒  URI: /js/a/sys/office/list  总内存: 618MB  已用内存: 526.508MB
2021-01-08 20:45:30.604 DEBUG 11236 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:45:30.608 DEBUG 11236 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:45:30.610 DEBUG 11236 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:45:30.610 DEBUG 11236 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:45:30.611 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:45:30.612 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524832819142656(String), select(String), 系统管理/组织管理/机构管理/查看(String), system(String), 超级管理员(String), 2021-01-08 20:45:30.601(Timestamp), /js/a/sys/office/list(String), GET(String), (String), (String), Office(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 142(Long)
2021-01-08 20:45:30.612 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:45:30.614 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:45:30.614 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524832710090752(String), select(String), 系统管理/组织管理/用户管理/查看(String), system(String), 超级管理员(String), 2021-01-08 20:45:30.575(Timestamp), /js/a/sys/empUser/list(String), GET(String), (String), (String), EmpUser(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 93(Long)
2021-01-08 20:45:30.616 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:45:30.627 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:45:30.626  URI: /js/a/sys/post/list  IP: 127.0.0.1
2021-01-08 20:45:30.639 INFO  11236 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/postList <<<<<<<<< /js/a/sys/post/list >>>>>>>>> com.jeesite.modules.sys.web.PostController#list(Post, Model)
2021-01-08 20:45:30.645 DEBUG 11236 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:45:30.645  URI: /js/a/sys/company/list  IP: 127.0.0.1
2021-01-08 20:45:30.711 DEBUG 11236 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:45:30.711 DEBUG 11236 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:45:30.712 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:45:30.713 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:45:30.687  用时: 61毫秒  URI: /js/a/sys/post/list  总内存: 618MB  已用内存: 541.274MB
2021-01-08 20:45:30.714 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524833267933184(String), access(String), 系统管理/组织管理/岗位管理(String), system(String), 超级管理员(String), 2021-01-08 20:45:30.708(Timestamp), /js/a/sys/post/list(String), GET(String), (String), (String), Post(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 61(Long)
2021-01-08 20:45:30.717 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:45:30.725 INFO  11236 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/companyList <<<<<<<<< /js/a/sys/company/list >>>>>>>>> com.jeesite.modules.sys.web.CompanyController#list(Company, Model)
2021-01-08 20:45:30.767 DEBUG 11236 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:45:30.765  用时: 120毫秒  URI: /js/a/sys/company/list  总内存: 618MB  已用内存: 543.744MB
2021-01-08 20:45:30.773 DEBUG 11236 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:45:30.774 DEBUG 11236 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:45:30.774 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:45:30.775 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524833511202816(String), access(String), 系统管理/组织管理/公司管理(String), system(String), 超级管理员(String), 2021-01-08 20:45:30.766(Timestamp), /js/a/sys/company/list(String), GET(String), (String), (String), Company(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 120(Long)
2021-01-08 20:45:30.777 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:45:31.250 DEBUG 11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:45:31.250  URI: /js/a/sys/office/listData  IP: 127.0.0.1
2021-01-08 20:45:31.270 DEBUG 11236 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:45:31.276 DEBUG 11236 [nio-8980-exec-7] [c.j.modules.sys.dao.OfficeDao.findList ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`office_code` AS "officeCode", a.`view_code` AS "viewCode", a.`office_name` AS "officeName", a.`full_name` AS "fullName", a.`office_type` AS "officeType", a.`leader` AS "leader", a.`phone` AS "phone", a.`address` AS "address", a.`zip_code` AS "zipCode", a.`email` AS "email", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_office` a WHERE a.`status` != ? AND a.`parent_code` = ? ORDER BY a.tree_sort, a.office_code
2021-01-08 20:45:31.276 DEBUG 11236 [nio-8980-exec-7] [c.j.modules.sys.dao.OfficeDao.findList ] - ==> Parameters: 1(String), 0(String)
2021-01-08 20:45:31.279 DEBUG 11236 [nio-8980-exec-7] [c.j.modules.sys.dao.OfficeDao.findList ] - <==      Total: 1
2021-01-08 20:45:31.293 DEBUG 11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:45:31.292  用时: 42毫秒  URI: /js/a/sys/office/listData  总内存: 618MB  已用内存: 546.977MB
2021-01-08 20:45:31.296 DEBUG 11236 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:45:31.297 DEBUG 11236 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:45:31.298 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:45:31.298 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524835721601024(String), select(String), 系统管理/组织管理/机构管理/查看(String), system(String), 超级管理员(String), 2021-01-08 20:45:31.293(Timestamp), /js/a/sys/office/listData(String), POST(String), ctrlPermi=2&officeCode=&viewCode=&officeName=&fullName=&officeType=&status=&pageNo=&pageSize=&orderBy=(String), (String), Office(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 42(Long)
2021-01-08 20:45:31.300 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:45:31.343 DEBUG 11236 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:45:31.343  URI: /js/a/sys/post/listData  IP: 127.0.0.1
2021-01-08 20:45:31.349 DEBUG 11236 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:45:31.359 DEBUG 11236 [io-8980-exec-10] [c.j.modules.sys.dao.PostDao.findList   ] - ==>  Preparing: SELECT count(0) FROM `js_sys_post` a WHERE a.`status` != ?
2021-01-08 20:45:31.360 DEBUG 11236 [io-8980-exec-10] [c.j.modules.sys.dao.PostDao.findList   ] - ==> Parameters: 1(String)
2021-01-08 20:45:31.362 DEBUG 11236 [io-8980-exec-10] [c.j.modules.sys.dao.PostDao.findList   ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`post_code` AS "postCode", a.`post_name` AS "postName", a.`post_type` AS "postType", a.`post_sort` AS "postSort" FROM `js_sys_post` a WHERE a.`status` != ? ORDER BY a.post_sort ASC LIMIT 20
2021-01-08 20:45:31.363 DEBUG 11236 [io-8980-exec-10] [c.j.modules.sys.dao.PostDao.findList   ] - ==> Parameters: 1(String)
2021-01-08 20:45:31.365 DEBUG 11236 [io-8980-exec-10] [c.j.modules.sys.dao.PostDao.findList   ] - <==      Total: 5
2021-01-08 20:45:31.375 DEBUG 11236 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:45:31.374  用时: 31毫秒  URI: /js/a/sys/post/listData  总内存: 618MB  已用内存: 546.977MB
2021-01-08 20:45:31.380 DEBUG 11236 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:45:31.381 DEBUG 11236 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:45:31.382 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:45:31.384 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524836065533952(String), select(String), 系统管理/组织管理/岗位管理/查看(String), system(String), 超级管理员(String), 2021-01-08 20:45:31.375(Timestamp), /js/a/sys/post/listData(String), POST(String), postCode=&postName_like=&postType=&status=&pageNo=&pageSize=&orderBy=(String), (String), Post(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 31(Long)
2021-01-08 20:45:31.386 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:45:31.468 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:45:31.468  URI: /js/a/sys/company/listData  IP: 127.0.0.1
2021-01-08 20:45:31.609 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 8毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`company_code` AS "companyCode", a.`view_code` AS "viewCode", a.`company_name` AS "companyName", a.`full_name` AS "fullName", a.`area_code` AS "area.areaCode", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", b.`area_name` AS "area.areaName", b.`area_type` AS "area.areaType", b.`tree_names` AS "area.treeNames" FROM `js_sys_company` a LEFT JOIN `js_sys_area` b ON b.area_code = a.area_code WHERE a.`status` != #{STATUS_DELETE} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} ORDER BY a.tree_sorts, a.company_code
2021-01-08 20:45:31.612 DEBUG 11236 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:45:31.619 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.sys.dao.CompanyDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`company_code` AS "companyCode", a.`view_code` AS "viewCode", a.`company_name` AS "companyName", a.`full_name` AS "fullName", a.`area_code` AS "area.areaCode", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", b.`area_name` AS "area.areaName", b.`area_type` AS "area.areaType", b.`tree_names` AS "area.treeNames" FROM `js_sys_company` a LEFT JOIN `js_sys_area` b ON b.area_code = a.area_code WHERE a.`status` != ? AND a.`parent_code` = ? ORDER BY a.tree_sorts, a.company_code
2021-01-08 20:45:31.626 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.sys.dao.CompanyDao.findList] - ==> Parameters: 1(String), 0(String)
2021-01-08 20:45:31.757 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.sys.dao.CompanyDao.findList] - <==      Total: 1
2021-01-08 20:45:31.810 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:45:31.809  用时: 341毫秒  URI: /js/a/sys/company/listData  总内存: 752MB  已用内存: 72.359MB
2021-01-08 20:45:31.825 DEBUG 11236 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:45:31.826 DEBUG 11236 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:45:31.827 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:45:31.828 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524837890056192(String), select(String), 系统管理/组织管理/公司管理/查看(String), system(String), 超级管理员(String), 2021-01-08 20:45:31.81(Timestamp), /js/a/sys/company/listData(String), POST(String), ctrlPermi=2&viewCode=&companyName=&fullName=&status=&pageNo=&pageSize=&orderBy=(String), (String), Company(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 341(Long)
2021-01-08 20:45:31.829 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:45:31.874 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:45:31.873  URI: /js/a/sys/empUser/listData  IP: 127.0.0.1
2021-01-08 20:45:31.896 DEBUG 11236 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:45:31.971 DEBUG 11236 [nio-8980-exec-9] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT count(0) FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code = a.ref_code AND a.user_type = ? LEFT JOIN `js_sys_office` o ON o.office_code = e.office_code LEFT JOIN `js_sys_company` c ON c.company_code = e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` != ?
2021-01-08 20:45:31.973 DEBUG 11236 [nio-8980-exec-9] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 1(String)
2021-01-08 20:45:31.977 DEBUG 11236 [nio-8980-exec-9] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` != ? ORDER BY a.user_weight DESC, a.update_date DESC LIMIT 20
2021-01-08 20:45:31.989 DEBUG 11236 [nio-8980-exec-9] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 1(String)
2021-01-08 20:45:31.991 DEBUG 11236 [nio-8980-exec-9] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2021-01-08 20:45:31.997 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:45:31.995  用时: 122毫秒  URI: /js/a/sys/empUser/listData  总内存: 752MB  已用内存: 80.229MB
2021-01-08 20:45:32.004 DEBUG 11236 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:45:32.004 DEBUG 11236 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:45:32.005 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:45:32.006 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524838670196736(String), select(String), 系统管理/组织管理/用户管理(String), system(String), 超级管理员(String), 2021-01-08 20:45:31.997(Timestamp), /js/a/sys/empUser/listData(String), POST(String), ctrlPermi=2&loginCode=&userName=&refName=&mobile=&status=&employee.office.officeName=&employee.office.officeCode=&employee.company.companyName=&employee.company.companyCode=&email=&employee.postCode=&phone=&pageNo=&pageSize=&orderBy=(String), (String), EmpUser(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 122(Long)
2021-01-08 20:45:32.008 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:45:40.755 DEBUG 11236 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:45:40.756 DEBUG 11236 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:45:40.760 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:45:40.760 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), msg_inner_content_level(String), 1(String), 0(String)
2021-01-08 20:45:40.762 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 3
2021-01-08 20:45:40.770 DEBUG 11236 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:45:40.771 DEBUG 11236 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:45:40.775 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:45:40.776 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), msg_inner_content_type(String), 1(String), 0(String)
2021-01-08 20:45:40.779 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 4
2021-01-08 20:45:40.787 DEBUG 11236 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:45:40.788 DEBUG 11236 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:45:40.791 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:45:40.791 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), msg_inner_msg_status(String), 1(String), 0(String)
2021-01-08 20:45:40.793 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 5
2021-01-08 20:45:40.941 DEBUG 11236 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:45:40.963 DEBUG 11236 [nio-8980-exec-7] [c.j.m.msg.dao.MsgInnerDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_sys_msg_inner` a LEFT JOIN js_sys_msg_inner_record r ON r.msg_inner_id = a.id AND r.receive_user_code = ? WHERE a.`status` != ? AND ((a.status = ? AND r.receive_user_code = ?) OR a.create_by = ?)
2021-01-08 20:45:40.965 DEBUG 11236 [nio-8980-exec-7] [c.j.m.msg.dao.MsgInnerDao.findList     ] - ==> Parameters: system(String), 1(String), 0(String), system(String), system(String)
2021-01-08 20:45:40.975 DEBUG 11236 [nio-8980-exec-7] [c.j.m.msg.dao.MsgInnerDao.findList     ] - ==>  Preparing: SELECT a.`id` AS "id", a.`msg_title` AS "msgTitle", a.`content_level` AS "contentLevel", a.`content_type` AS "contentType", a.`msg_content` AS "msgContent", a.`receive_type` AS "receiveType", a.`receive_codes` AS "receiveCodes", a.`receive_names` AS "receiveNames", a.`send_user_code` AS "sendUserCode", a.`send_user_name` AS "sendUserName", a.`send_date` AS "sendDate", a.`is_attac` AS "isAttac", a.`notify_types` AS "notifyTypes", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" , r.read_status AS "record.readStatus", r.read_date AS "record.readDate", r.is_star AS "record.isStar" FROM `js_sys_msg_inner` a LEFT JOIN js_sys_msg_inner_record r ON r.msg_inner_id = a.id AND r.receive_user_code = ? WHERE a.`status` != ? AND ((a.status = ? AND r.receive_user_code = ?) OR a.create_by = ?) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 20:45:40.976 DEBUG 11236 [nio-8980-exec-7] [c.j.m.msg.dao.MsgInnerDao.findList     ] - ==> Parameters: system(String), 1(String), 0(String), system(String), system(String)
2021-01-08 20:45:40.977 DEBUG 11236 [nio-8980-exec-7] [c.j.m.msg.dao.MsgInnerDao.findList     ] - <==      Total: 0
2021-01-08 20:45:44.008 DEBUG 11236 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:45:44.008  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2021-01-08 20:45:44.026 INFO  11236 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2021-01-08 20:45:44.047 DEBUG 11236 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:45:44.045  用时: 37毫秒  URI: /js/a/gen/genTable/list  总内存: 752MB  已用内存: 125.654MB
2021-01-08 20:45:44.050 DEBUG 11236 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:45:44.052 DEBUG 11236 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:45:44.053 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:45:44.054 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524889211559936(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:45:44.046(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 37(Long)
2021-01-08 20:45:44.055 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:45:44.163 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:45:44.163  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 20:45:44.214 DEBUG 11236 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 20:45:44.215 DEBUG 11236 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:45:44.247 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 20:45:44.248 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:45:44.259 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 20:45:44.260 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:45:44.263 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 20:45:44.372 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:45:44.370  用时: 207毫秒  URI: /js/a/gen/genTable/listData  总内存: 752MB  已用内存: 134.727MB
2021-01-08 20:45:44.397 DEBUG 11236 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:45:44.398 DEBUG 11236 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:45:44.398 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:45:44.401 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524890574708736(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:45:44.371(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 207(Long)
2021-01-08 20:45:44.408 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:45:45.898 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:45:45.898  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 20:45:45.901 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:45:45.901 DEBUG 11236 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:45:45.906 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:45:45.906 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:45:45.908 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:45:45.911 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:45:45.920 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:45:45.921 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:45:45.923 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:45:45.941 DEBUG 11236 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:45:45.946 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 20:45:45.947 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_admin(String), t_admin(String)
2021-01-08 20:45:45.950 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 20:45:45.958 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 20:45:45.958 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_admin(String)
2021-01-08 20:45:45.960 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 3
2021-01-08 20:45:45.964 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 20:45:45.965 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_admin(String)
2021-01-08 20:45:45.967 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 1
2021-01-08 20:45:46.123 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:45:46.125 DEBUG 11236 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will not be managed by Spring
2021-01-08 20:45:46.129 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:45:46.130 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 20:45:46.134 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 20:45:46.137 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 20:45:46.138 DEBUG 11236 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will not be managed by Spring
2021-01-08 20:45:46.144 DEBUG 11236 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 20:45:46.144 DEBUG 11236 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 20:45:46.148 DEBUG 11236 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 4
2021-01-08 20:45:46.155 DEBUG 11236 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:45:46.162 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 20:45:46.162 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 20:45:46.165 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 20:45:46.168 INFO  11236 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 20:45:46.244 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:45:46.243  用时: 345毫秒  URI: /js/a/gen/genTable/form  总内存: 752MB  已用内存: 159.930MB
2021-01-08 20:45:46.254 DEBUG 11236 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:45:46.254 DEBUG 11236 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:45:46.255 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:45:46.256 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347524898430640128(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:45:46.244(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=t_admin(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 345(Long)
2021-01-08 20:45:46.257 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:46:16.400 DEBUG 11236 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:46:16.400  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 20:46:16.402 DEBUG 11236 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:46:16.403 DEBUG 11236 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:16.408 DEBUG 11236 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:46:16.408 DEBUG 11236 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:16.412 DEBUG 11236 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:46:16.414 DEBUG 11236 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:46:16.420 DEBUG 11236 [io-8980-exec-10] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:46:16.420 DEBUG 11236 [io-8980-exec-10] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:16.424 DEBUG 11236 [io-8980-exec-10] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:46:16.809 DEBUG 11236 [io-8980-exec-10] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 3毫秒: UPDATE `js_gen_table` SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2021-01-08 20:46:16.809 DEBUG 11236 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:16.810 DEBUG 11236 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE `js_gen_table` SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ?
2021-01-08 20:46:16.811 DEBUG 11236 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: Tadmin(String), t_admin(String), t_admin(String), userid(String), (String), crud(String), com.jeesite.modules(String), t(String), (String), t_admin(String), t_admin(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 20:46:16.807(Timestamp), (String), t_admin(String)
2021-01-08 20:46:16.812 DEBUG 11236 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2021-01-08 20:46:16.813 DEBUG 11236 [io-8980-exec-10] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:46:16.814 DEBUG 11236 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:46:16.816 DEBUG 11236 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), userid(String), 10(Integer), int(String), userid(String), userid(String), userid(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"1","fieldValid":"abc","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563822243840(String)
2021-01-08 20:46:16.817 DEBUG 11236 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:46:16.828 DEBUG 11236 [io-8980-exec-10] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 10毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:46:16.830 DEBUG 11236 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:46:16.831 DEBUG 11236 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), username(String), 20(Integer), varchar(55)(String), username(String), username(String), username(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563851603968(String)
2021-01-08 20:46:16.832 DEBUG 11236 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:46:16.833 DEBUG 11236 [io-8980-exec-10] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:46:16.834 DEBUG 11236 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:46:16.834 DEBUG 11236 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), userpw(String), 30(Integer), varchar(50)(String), userpw(String), userpw(String), userpw(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563977433088(String)
2021-01-08 20:46:16.836 DEBUG 11236 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:46:16.903 DEBUG 11236 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2021-01-08 20:46:16.905 DEBUG 11236 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:16.916 DEBUG 11236 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC
2021-01-08 20:46:16.917 DEBUG 11236 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:16.919 DEBUG 11236 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 1
2021-01-08 20:46:16.923 DEBUG 11236 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:46:16.945 DEBUG 11236 [io-8980-exec-10] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:46:16.947 DEBUG 11236 [io-8980-exec-10] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:16.954 DEBUG 11236 [io-8980-exec-10] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:46:17.025 DEBUG 11236 [io-8980-exec-10] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\t\TadminDao.xml
2021-01-08 20:46:17.028 DEBUG 11236 [io-8980-exec-10] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.t.dao.TadminDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tadmin">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 20:46:17.035 DEBUG 11236 [io-8980-exec-10] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\entity\Tadmin.java
2021-01-08 20:46:17.091 DEBUG 11236 [io-8980-exec-10] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.t.entity;

import org.hibernate.validator.constraints.Length;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * t_adminEntity
 * @author LX
 * @version 2021-01-08
 */
@Table(name="t_admin", alias="a", columns={
		@Column(name="userid", attrName="userid.userid", label="userid", isPK=true),
		@Column(name="username", attrName="username", label="username"),
		@Column(name="userpw", attrName="userpw", label="userpw"),
	}, orderBy="a.userid ASC"
)
public class Tadmin extends DataEntity<Tadmin> {
	
	private static final long serialVersionUID = 1L;
	private Tadmin userid;		// userid 父类
	private String username;		// username
	private String userpw;		// userpw
	
	public Tadmin() {
		this(null);
	}


	public Tadmin(Tadmin userid){
		this.userid = userid;
	}
	
	public Tadmin getUserid() {
		return userid;
	}

	public void setUserid(Tadmin userid) {
		this.userid = userid;
	}
	
	@Length(min=0, max=55, message="username长度不能超过 55 个字符")
	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}
	
	@Length(min=0, max=50, message="userpw长度不能超过 50 个字符")
	public String getUserpw() {
		return userpw;
	}

	public void setUserpw(String userpw) {
		this.userpw = userpw;
	}
	
}
2021-01-08 20:46:17.092 DEBUG 11236 [io-8980-exec-10] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\dao\TadminDao.java
2021-01-08 20:46:17.101 DEBUG 11236 [io-8980-exec-10] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.t.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.t.entity.Tadmin;

/**
 * t_adminDAO接口
 * @author LX
 * @version 2021-01-08
 */
@MyBatisDao
public interface TadminDao extends CrudDao<Tadmin> {
	
}
2021-01-08 20:46:17.101 DEBUG 11236 [io-8980-exec-10] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\t\TadminDao.xml
2021-01-08 20:46:17.101 DEBUG 11236 [io-8980-exec-10] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.t.dao.TadminDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tadmin">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 20:46:17.102 DEBUG 11236 [io-8980-exec-10] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\entity\Tadmin.java
2021-01-08 20:46:17.111 ERROR 11236 [io-8980-exec-10] [c.j.c.beetl.handler.LoggerErrorHandler ] - 
>>08:46:17:表达式值为空(NULL):parent 位于73行 资源:/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package ${packageName}.${moduleName}.entity${isNotBlank(subModuleName)?'.'+subModuleName:''};

<% for(i in table.importList){ %>
import ${i};
<% } %>

import com.jeesite.common.entity.DataEntity;
<% if(table.isTreeEntity){ %>
import com.jeesite.common.entity.TreeEntity;
<% } %>
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;
<% if(toBoolean(table.optionMap['isBpmForm'])){ %>
	<% if(table.isTreeEntity){ %>
import com.jeesite.modules.bpm.entity.BpmTreeEntity;
	<% }else{ %>
import com.jeesite.modules.bpm.entity.BpmEntity;
	<% } %>
<% } %>

/**
 * ${functionName}Entity
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Table(name="${table.genTableName}", alias="a", columns={
		<%
		var isBase = false, isData = false,
			isTree = false, isExtend = false;
		// ◆ 生成字段属性
		for(c in table.col...
空指针
70|				// 容错，如果没有设置父表的主键属性，则设置
71|				if(!@StringUtils.contains(c.attrName, ".")){
72|					if (table.parentExists && table.parentTableFkName == c.columnName){
73|						for (pk in table.parent.pkList){
74|							c.fullAttrName = c.fullAttrName + '.' + pk.attrName;
75|							break;
76|						}


org.beetl.core.exception.BeetlException: 空指针
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)

2021-01-08 20:46:17.126 DEBUG 11236 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:46:17.121  用时: 721毫秒  URI: /js/a/gen/genTable/save  总内存: 752MB  已用内存: 201.151MB
2021-01-08 20:46:17.135 DEBUG 11236 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:46:17.136 DEBUG 11236 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:17.137 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:46:17.138 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525027959136256(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:46:17.126(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=t_admin&comments=t_admin&className=Tadmin&functionAuthor=LX&parentTableName=t_admin&parentTableFkName=userid&remarks=&columnList[0].id=1347519563822243840&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=userid&columnList[0].comments=userid&columnList[0].columnType=int&columnList[0].attrType=Long&columnList[0].fullAttrName=userid&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=12/2/5&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['isNewLine']=1&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1347519563851603968&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=username&columnList[1].comments=username&columnList[1].columnType=varchar(55)&columnList[1].attrType=String&columnList[1].fullAttrName=username&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=12/2/5&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['isNewLine']=1&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[2].id=1347519563977433088&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=userpw&columnList[2].comments=userpw&columnList[2].columnType=varchar(50)&columnList[2].attrType=String&columnList[2].fullAttrName=userpw&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&columnList[2].isUpdate=1&!columnList[2].isList=&columnList[2].isList=1&!columnList[2].isQuery=&columnList[2].isQuery=1&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=12/2/5&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['isNewLine']=1&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&tplCategory=crud&packageName=com.jeesite.modules&moduleName=t&subModuleName=&functionName=t_admin&functionNameSimple=t_admin&genBaseDir=C:\Users\Lx\work2\web&!optionMap['isHaveDisableEnable']=&optionMap['isHaveDisableEnable']=0&!optionMap['isHaveDelete']=&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&!optionMap['isImageUpload']=&optionMap['isImageUpload']=0&!optionMap['isFileUpload']=&optionMap['isFileUpload']=0&!optionMap['isBpmForm']=&optionMap['isBpmForm']=0&optionMap['bpmFormKey']=&genFlag=1&replaceFile=1&!replaceFile=0(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 1(String), 
>>08:46:17:表达式值为空(NULL):parent 位于73行 资源:/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package ${packageName}.${moduleName}.entity${isNotBlank(subModuleName)?'.'+subModuleName:''};

<% for(i in table.importList){ %>
import ${i};
<% } %>

import com.jeesite.common.entity.DataEntity;
<% if(table.isTreeEntity){ %>
import com.jeesite.common.entity.TreeEntity;
<% } %>
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;
<% if(toBoolean(table.optionMap['isBpmForm'])){ %>
	<% if(table.isTreeEntity){ %>
import com.jeesite.modules.bpm.entity.BpmTreeEntity;
	<% }else{ %>
import com.jeesite.modules.bpm.entity.BpmEntity;
	<% } %>
<% } %>

/**
 * ${functionName}Entity
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Table(name="${table.genTableName}", alias="a", columns={
		<%
		var isBase = false, isData = false,
			isTree = false, isExtend = false;
		// ◆ 生成字段属性
		for(c in table.col...
空指针
70|				// 容错，如果没有设置父表的主键属性，则设置
71|				if(!@StringUtils.contains(c.attrName, ".")){
72|					if (table.parentExists && table.parentTableFkName == c.columnName){
73|						for (pk in table.parent.pkList){
74|							c.fullAttrName = c.fullAttrName + '.' + pk.attrName;
75|							break;
76|						}

	at com.jeesite.common.beetl.handler.LoggerErrorHandler.final(dda:172)
	at com.jeesite.common.beetl.handler.LoggerErrorHandler.processExcption(dda:216)
	at org.beetl.core.Template.renderTo(Template.java:180)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: NULL
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	... 120 more
(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 721(Long)
2021-01-08 20:46:17.138 ERROR 11236 [io-8980-exec-10] [o.a.c.c.C.[.[.[/js].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [/js] threw exception [Request processing failed; nested exception is 
>>08:46:17:表达式值为空(NULL):parent 位于73行 资源:/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package ${packageName}.${moduleName}.entity${isNotBlank(subModuleName)?'.'+subModuleName:''};

<% for(i in table.importList){ %>
import ${i};
<% } %>

import com.jeesite.common.entity.DataEntity;
<% if(table.isTreeEntity){ %>
import com.jeesite.common.entity.TreeEntity;
<% } %>
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;
<% if(toBoolean(table.optionMap['isBpmForm'])){ %>
	<% if(table.isTreeEntity){ %>
import com.jeesite.modules.bpm.entity.BpmTreeEntity;
	<% }else{ %>
import com.jeesite.modules.bpm.entity.BpmEntity;
	<% } %>
<% } %>

/**
 * ${functionName}Entity
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Table(name="${table.genTableName}", alias="a", columns={
		<%
		var isBase = false, isData = false,
			isTree = false, isExtend = false;
		// ◆ 生成字段属性
		for(c in table.col...
空指针
70|				// 容错，如果没有设置父表的主键属性，则设置
71|				if(!@StringUtils.contains(c.attrName, ".")){
72|					if (table.parentExists && table.parentTableFkName == c.columnName){
73|						for (pk in table.parent.pkList){
74|							c.fullAttrName = c.fullAttrName + '.' + pk.attrName;
75|							break;
76|						}
] with root cause

org.beetl.core.exception.BeetlException: 空指针
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)

2021-01-08 20:46:17.169 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:46:17.237 ERROR 11236 [io-8980-exec-10] [error/500                              ] - 

org.beetl.core.exception.BeetlException: NULL
	at com.jeesite.common.beetl.handler.LoggerErrorHandler.final(dda:172)
	at com.jeesite.common.beetl.handler.LoggerErrorHandler.processExcption(dda:216)
	at org.beetl.core.Template.renderTo(Template.java:180)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.beetl.core.exception.BeetlException: 空指针
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	... 120 common frames omitted

2021-01-08 20:46:40.797 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:46:40.797  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 20:46:40.799 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:46:40.799 DEBUG 11236 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:40.809 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:46:40.810 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:40.812 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:46:40.813 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:46:40.816 DEBUG 11236 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:46:40.817 DEBUG 11236 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:40.819 DEBUG 11236 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:46:40.838 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table` SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2021-01-08 20:46:40.838 DEBUG 11236 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:40.839 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE `js_gen_table` SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ?
2021-01-08 20:46:40.839 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: Tadmin(String), t_admin(String), t_admin(String), userid(String), (String), crud(String), com.jeesite.modules(String), t(String), (String), t_admin(String), t_admin(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 20:46:40.837(Timestamp), (String), t_admin(String)
2021-01-08 20:46:40.840 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2021-01-08 20:46:40.842 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:46:40.843 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:46:40.844 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), userid(String), 10(Integer), int(String), userid(String), userid(String), userid(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"1","fieldValid":"abc","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563822243840(String)
2021-01-08 20:46:40.845 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:46:40.849 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 3毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:46:40.850 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:46:40.851 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), username(String), 20(Integer), varchar(55)(String), username(String), username(String), username(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563851603968(String)
2021-01-08 20:46:40.852 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:46:40.853 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:46:40.853 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:46:40.854 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), userpw(String), 30(Integer), varchar(50)(String), userpw(String), userpw(String), userpw(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563977433088(String)
2021-01-08 20:46:40.855 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:46:40.881 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2021-01-08 20:46:40.881 DEBUG 11236 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:40.886 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC
2021-01-08 20:46:40.886 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:40.887 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 1
2021-01-08 20:46:40.888 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:46:40.893 DEBUG 11236 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:46:40.894 DEBUG 11236 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:40.898 DEBUG 11236 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:46:40.899 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\t\TadminDao.xml
2021-01-08 20:46:40.899 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.t.dao.TadminDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tadmin">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 20:46:40.899 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\entity\Tadmin.java
2021-01-08 20:46:40.901 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.t.entity;

import org.hibernate.validator.constraints.Length;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * t_adminEntity
 * @author LX
 * @version 2021-01-08
 */
@Table(name="t_admin", alias="a", columns={
		@Column(name="userid", attrName="userid.userid", label="userid", isPK=true),
		@Column(name="username", attrName="username", label="username"),
		@Column(name="userpw", attrName="userpw", label="userpw"),
	}, orderBy="a.userid ASC"
)
public class Tadmin extends DataEntity<Tadmin> {
	
	private static final long serialVersionUID = 1L;
	private Tadmin userid;		// userid 父类
	private String username;		// username
	private String userpw;		// userpw
	
	public Tadmin() {
		this(null);
	}


	public Tadmin(Tadmin userid){
		this.userid = userid;
	}
	
	public Tadmin getUserid() {
		return userid;
	}

	public void setUserid(Tadmin userid) {
		this.userid = userid;
	}
	
	@Length(min=0, max=55, message="username长度不能超过 55 个字符")
	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}
	
	@Length(min=0, max=50, message="userpw长度不能超过 50 个字符")
	public String getUserpw() {
		return userpw;
	}

	public void setUserpw(String userpw) {
		this.userpw = userpw;
	}
	
}
2021-01-08 20:46:40.901 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\dao\TadminDao.java
2021-01-08 20:46:40.901 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.t.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.t.entity.Tadmin;

/**
 * t_adminDAO接口
 * @author LX
 * @version 2021-01-08
 */
@MyBatisDao
public interface TadminDao extends CrudDao<Tadmin> {
	
}
2021-01-08 20:46:40.902 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\t\TadminDao.xml
2021-01-08 20:46:40.902 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.t.dao.TadminDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tadmin">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 20:46:40.902 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\entity\Tadmin.java
2021-01-08 20:46:40.903 ERROR 11236 [nio-8980-exec-1] [c.j.c.beetl.handler.LoggerErrorHandler ] - 
>>08:46:40:表达式值为空(NULL):parent 位于73行 资源:/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package ${packageName}.${moduleName}.entity${isNotBlank(subModuleName)?'.'+subModuleName:''};

<% for(i in table.importList){ %>
import ${i};
<% } %>

import com.jeesite.common.entity.DataEntity;
<% if(table.isTreeEntity){ %>
import com.jeesite.common.entity.TreeEntity;
<% } %>
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;
<% if(toBoolean(table.optionMap['isBpmForm'])){ %>
	<% if(table.isTreeEntity){ %>
import com.jeesite.modules.bpm.entity.BpmTreeEntity;
	<% }else{ %>
import com.jeesite.modules.bpm.entity.BpmEntity;
	<% } %>
<% } %>

/**
 * ${functionName}Entity
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Table(name="${table.genTableName}", alias="a", columns={
		<%
		var isBase = false, isData = false,
			isTree = false, isExtend = false;
		// ◆ 生成字段属性
		for(c in table.col...
空指针
70|				// 容错，如果没有设置父表的主键属性，则设置
71|				if(!@StringUtils.contains(c.attrName, ".")){
72|					if (table.parentExists && table.parentTableFkName == c.columnName){
73|						for (pk in table.parent.pkList){
74|							c.fullAttrName = c.fullAttrName + '.' + pk.attrName;
75|							break;
76|						}


org.beetl.core.exception.BeetlException: 空指针
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)

2021-01-08 20:46:40.913 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:46:40.911  用时: 114毫秒  URI: /js/a/gen/genTable/save  总内存: 752MB  已用内存: 219.266MB
2021-01-08 20:46:40.929 DEBUG 11236 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:46:40.915 ERROR 11236 [nio-8980-exec-1] [o.a.c.c.C.[.[.[/js].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [/js] threw exception [Request processing failed; nested exception is 
>>08:46:40:表达式值为空(NULL):parent 位于73行 资源:/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package ${packageName}.${moduleName}.entity${isNotBlank(subModuleName)?'.'+subModuleName:''};

<% for(i in table.importList){ %>
import ${i};
<% } %>

import com.jeesite.common.entity.DataEntity;
<% if(table.isTreeEntity){ %>
import com.jeesite.common.entity.TreeEntity;
<% } %>
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;
<% if(toBoolean(table.optionMap['isBpmForm'])){ %>
	<% if(table.isTreeEntity){ %>
import com.jeesite.modules.bpm.entity.BpmTreeEntity;
	<% }else{ %>
import com.jeesite.modules.bpm.entity.BpmEntity;
	<% } %>
<% } %>

/**
 * ${functionName}Entity
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Table(name="${table.genTableName}", alias="a", columns={
		<%
		var isBase = false, isData = false,
			isTree = false, isExtend = false;
		// ◆ 生成字段属性
		for(c in table.col...
空指针
70|				// 容错，如果没有设置父表的主键属性，则设置
71|				if(!@StringUtils.contains(c.attrName, ".")){
72|					if (table.parentExists && table.parentTableFkName == c.columnName){
73|						for (pk in table.parent.pkList){
74|							c.fullAttrName = c.fullAttrName + '.' + pk.attrName;
75|							break;
76|						}
] with root cause

org.beetl.core.exception.BeetlException: 空指针
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)

2021-01-08 20:46:40.933 DEBUG 11236 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:40.934 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:46:40.935 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525127729045504(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:46:40.913(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=t_admin&comments=t_admin&className=Tadmin&functionAuthor=LX&parentTableName=t_admin&parentTableFkName=userid&remarks=&columnList[0].id=1347519563822243840&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=userid&columnList[0].comments=userid&columnList[0].columnType=int&columnList[0].attrType=Long&columnList[0].fullAttrName=userid&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=12/2/5&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['isNewLine']=1&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1347519563851603968&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=username&columnList[1].comments=username&columnList[1].columnType=varchar(55)&columnList[1].attrType=String&columnList[1].fullAttrName=username&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=12/2/5&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['isNewLine']=1&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[2].id=1347519563977433088&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=userpw&columnList[2].comments=userpw&columnList[2].columnType=varchar(50)&columnList[2].attrType=String&columnList[2].fullAttrName=userpw&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&columnList[2].isUpdate=1&!columnList[2].isList=&columnList[2].isList=1&!columnList[2].isQuery=&columnList[2].isQuery=1&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=12/2/5&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['isNewLine']=1&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&tplCategory=crud&packageName=com.jeesite.modules&moduleName=t&subModuleName=&functionName=t_admin&functionNameSimple=t_admin&genBaseDir=C:\Users\Lx\work2\web&!optionMap['isHaveDisableEnable']=&optionMap['isHaveDisableEnable']=0&!optionMap['isHaveDelete']=&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&!optionMap['isImageUpload']=&optionMap['isImageUpload']=0&!optionMap['isFileUpload']=&optionMap['isFileUpload']=0&!optionMap['isBpmForm']=&optionMap['isBpmForm']=0&optionMap['bpmFormKey']=&genFlag=1&replaceFile=1&!replaceFile=0(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 1(String), 
>>08:46:40:表达式值为空(NULL):parent 位于73行 资源:/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package ${packageName}.${moduleName}.entity${isNotBlank(subModuleName)?'.'+subModuleName:''};

<% for(i in table.importList){ %>
import ${i};
<% } %>

import com.jeesite.common.entity.DataEntity;
<% if(table.isTreeEntity){ %>
import com.jeesite.common.entity.TreeEntity;
<% } %>
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;
<% if(toBoolean(table.optionMap['isBpmForm'])){ %>
	<% if(table.isTreeEntity){ %>
import com.jeesite.modules.bpm.entity.BpmTreeEntity;
	<% }else{ %>
import com.jeesite.modules.bpm.entity.BpmEntity;
	<% } %>
<% } %>

/**
 * ${functionName}Entity
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Table(name="${table.genTableName}", alias="a", columns={
		<%
		var isBase = false, isData = false,
			isTree = false, isExtend = false;
		// ◆ 生成字段属性
		for(c in table.col...
空指针
70|				// 容错，如果没有设置父表的主键属性，则设置
71|				if(!@StringUtils.contains(c.attrName, ".")){
72|					if (table.parentExists && table.parentTableFkName == c.columnName){
73|						for (pk in table.parent.pkList){
74|							c.fullAttrName = c.fullAttrName + '.' + pk.attrName;
75|							break;
76|						}

	at com.jeesite.common.beetl.handler.LoggerErrorHandler.final(dda:172)
	at com.jeesite.common.beetl.handler.LoggerErrorHandler.processExcption(dda:216)
	at org.beetl.core.Template.renderTo(Template.java:180)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: NULL
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	... 120 more
(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 114(Long)
2021-01-08 20:46:40.940 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:46:40.938 ERROR 11236 [nio-8980-exec-1] [error/500                              ] - 

org.beetl.core.exception.BeetlException: NULL
	at com.jeesite.common.beetl.handler.LoggerErrorHandler.final(dda:172)
	at com.jeesite.common.beetl.handler.LoggerErrorHandler.processExcption(dda:216)
	at org.beetl.core.Template.renderTo(Template.java:180)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.beetl.core.exception.BeetlException: 空指针
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	... 120 common frames omitted

2021-01-08 20:46:44.575 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:46:44.575  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 20:46:44.577 DEBUG 11236 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:46:44.578 DEBUG 11236 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:44.582 DEBUG 11236 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:46:44.582 DEBUG 11236 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:44.583 DEBUG 11236 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:46:44.584 DEBUG 11236 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:46:44.586 DEBUG 11236 [nio-8980-exec-9] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:46:44.587 DEBUG 11236 [nio-8980-exec-9] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:44.591 DEBUG 11236 [nio-8980-exec-9] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:46:44.604 DEBUG 11236 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE `js_gen_table` SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2021-01-08 20:46:44.604 DEBUG 11236 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:44.605 DEBUG 11236 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE `js_gen_table` SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ?
2021-01-08 20:46:44.606 DEBUG 11236 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: Tadmin(String), t_admin(String), t_admin(String), userid(String), (String), crud(String), com.jeesite.modules(String), t(String), (String), t_admin(String), t_admin(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 20:46:44.603(Timestamp), (String), t_admin(String)
2021-01-08 20:46:44.607 DEBUG 11236 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2021-01-08 20:46:44.608 DEBUG 11236 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:46:44.611 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:46:44.612 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), userid(String), 10(Integer), int(String), userid(String), userid(String), userid(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"1","fieldValid":"abc","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563822243840(String)
2021-01-08 20:46:44.614 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:46:44.615 DEBUG 11236 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:46:44.616 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:46:44.616 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), username(String), 20(Integer), varchar(55)(String), username(String), username(String), username(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563851603968(String)
2021-01-08 20:46:44.617 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:46:44.619 DEBUG 11236 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:46:44.620 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:46:44.620 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), userpw(String), 30(Integer), varchar(50)(String), userpw(String), userpw(String), userpw(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563977433088(String)
2021-01-08 20:46:44.621 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:46:44.636 DEBUG 11236 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2021-01-08 20:46:44.636 DEBUG 11236 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:44.640 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC
2021-01-08 20:46:44.640 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:44.643 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 1
2021-01-08 20:46:44.645 DEBUG 11236 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:46:44.654 DEBUG 11236 [nio-8980-exec-9] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:46:44.655 DEBUG 11236 [nio-8980-exec-9] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:44.664 DEBUG 11236 [nio-8980-exec-9] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:46:44.665 DEBUG 11236 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\t\TadminDao.xml
2021-01-08 20:46:44.665 DEBUG 11236 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.t.dao.TadminDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tadmin">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 20:46:44.665 DEBUG 11236 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\entity\Tadmin.java
2021-01-08 20:46:44.668 DEBUG 11236 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.t.entity;

import org.hibernate.validator.constraints.Length;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * t_adminEntity
 * @author LX
 * @version 2021-01-08
 */
@Table(name="t_admin", alias="a", columns={
		@Column(name="userid", attrName="userid.userid", label="userid", isPK=true),
		@Column(name="username", attrName="username", label="username"),
		@Column(name="userpw", attrName="userpw", label="userpw"),
	}, orderBy="a.userid ASC"
)
public class Tadmin extends DataEntity<Tadmin> {
	
	private static final long serialVersionUID = 1L;
	private Tadmin userid;		// userid 父类
	private String username;		// username
	private String userpw;		// userpw
	
	public Tadmin() {
		this(null);
	}


	public Tadmin(Tadmin userid){
		this.userid = userid;
	}
	
	public Tadmin getUserid() {
		return userid;
	}

	public void setUserid(Tadmin userid) {
		this.userid = userid;
	}
	
	@Length(min=0, max=55, message="username长度不能超过 55 个字符")
	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}
	
	@Length(min=0, max=50, message="userpw长度不能超过 50 个字符")
	public String getUserpw() {
		return userpw;
	}

	public void setUserpw(String userpw) {
		this.userpw = userpw;
	}
	
}
2021-01-08 20:46:44.669 DEBUG 11236 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\dao\TadminDao.java
2021-01-08 20:46:44.669 DEBUG 11236 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.t.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.t.entity.Tadmin;

/**
 * t_adminDAO接口
 * @author LX
 * @version 2021-01-08
 */
@MyBatisDao
public interface TadminDao extends CrudDao<Tadmin> {
	
}
2021-01-08 20:46:44.669 DEBUG 11236 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\t\TadminDao.xml
2021-01-08 20:46:44.669 DEBUG 11236 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.t.dao.TadminDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tadmin">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 20:46:44.669 DEBUG 11236 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\entity\Tadmin.java
2021-01-08 20:46:44.670 ERROR 11236 [nio-8980-exec-9] [c.j.c.beetl.handler.LoggerErrorHandler ] - 
>>08:46:44:表达式值为空(NULL):parent 位于73行 资源:/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package ${packageName}.${moduleName}.entity${isNotBlank(subModuleName)?'.'+subModuleName:''};

<% for(i in table.importList){ %>
import ${i};
<% } %>

import com.jeesite.common.entity.DataEntity;
<% if(table.isTreeEntity){ %>
import com.jeesite.common.entity.TreeEntity;
<% } %>
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;
<% if(toBoolean(table.optionMap['isBpmForm'])){ %>
	<% if(table.isTreeEntity){ %>
import com.jeesite.modules.bpm.entity.BpmTreeEntity;
	<% }else{ %>
import com.jeesite.modules.bpm.entity.BpmEntity;
	<% } %>
<% } %>

/**
 * ${functionName}Entity
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Table(name="${table.genTableName}", alias="a", columns={
		<%
		var isBase = false, isData = false,
			isTree = false, isExtend = false;
		// ◆ 生成字段属性
		for(c in table.col...
空指针
70|				// 容错，如果没有设置父表的主键属性，则设置
71|				if(!@StringUtils.contains(c.attrName, ".")){
72|					if (table.parentExists && table.parentTableFkName == c.columnName){
73|						for (pk in table.parent.pkList){
74|							c.fullAttrName = c.fullAttrName + '.' + pk.attrName;
75|							break;
76|						}


org.beetl.core.exception.BeetlException: 空指针
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)

2021-01-08 20:46:44.675 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:46:44.673  用时: 98毫秒  URI: /js/a/gen/genTable/save  总内存: 752MB  已用内存: 231.070MB
2021-01-08 20:46:44.677 ERROR 11236 [nio-8980-exec-9] [o.a.c.c.C.[.[.[/js].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [/js] threw exception [Request processing failed; nested exception is 
>>08:46:44:表达式值为空(NULL):parent 位于73行 资源:/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package ${packageName}.${moduleName}.entity${isNotBlank(subModuleName)?'.'+subModuleName:''};

<% for(i in table.importList){ %>
import ${i};
<% } %>

import com.jeesite.common.entity.DataEntity;
<% if(table.isTreeEntity){ %>
import com.jeesite.common.entity.TreeEntity;
<% } %>
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;
<% if(toBoolean(table.optionMap['isBpmForm'])){ %>
	<% if(table.isTreeEntity){ %>
import com.jeesite.modules.bpm.entity.BpmTreeEntity;
	<% }else{ %>
import com.jeesite.modules.bpm.entity.BpmEntity;
	<% } %>
<% } %>

/**
 * ${functionName}Entity
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Table(name="${table.genTableName}", alias="a", columns={
		<%
		var isBase = false, isData = false,
			isTree = false, isExtend = false;
		// ◆ 生成字段属性
		for(c in table.col...
空指针
70|				// 容错，如果没有设置父表的主键属性，则设置
71|				if(!@StringUtils.contains(c.attrName, ".")){
72|					if (table.parentExists && table.parentTableFkName == c.columnName){
73|						for (pk in table.parent.pkList){
74|							c.fullAttrName = c.fullAttrName + '.' + pk.attrName;
75|							break;
76|						}
] with root cause

org.beetl.core.exception.BeetlException: 空指针
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)

2021-01-08 20:46:44.684 DEBUG 11236 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:46:44.687 DEBUG 11236 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:44.688 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:46:44.688 ERROR 11236 [nio-8980-exec-9] [error/500                              ] - 

org.beetl.core.exception.BeetlException: NULL
	at com.jeesite.common.beetl.handler.LoggerErrorHandler.final(dda:172)
	at com.jeesite.common.beetl.handler.LoggerErrorHandler.processExcption(dda:216)
	at org.beetl.core.Template.renderTo(Template.java:180)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.beetl.core.exception.BeetlException: 空指针
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	... 120 common frames omitted

2021-01-08 20:46:44.692 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525143508017152(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:46:44.675(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=t_admin&comments=t_admin&className=Tadmin&functionAuthor=LX&parentTableName=t_admin&parentTableFkName=userid&remarks=&columnList[0].id=1347519563822243840&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=userid&columnList[0].comments=userid&columnList[0].columnType=int&columnList[0].attrType=Long&columnList[0].fullAttrName=userid&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=12/2/5&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['isNewLine']=1&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1347519563851603968&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=username&columnList[1].comments=username&columnList[1].columnType=varchar(55)&columnList[1].attrType=String&columnList[1].fullAttrName=username&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=12/2/5&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['isNewLine']=1&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[2].id=1347519563977433088&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=userpw&columnList[2].comments=userpw&columnList[2].columnType=varchar(50)&columnList[2].attrType=String&columnList[2].fullAttrName=userpw&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&columnList[2].isUpdate=1&!columnList[2].isList=&columnList[2].isList=1&!columnList[2].isQuery=&columnList[2].isQuery=1&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=12/2/5&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['isNewLine']=1&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&tplCategory=crud&packageName=com.jeesite.modules&moduleName=t&subModuleName=&functionName=t_admin&functionNameSimple=t_admin&genBaseDir=C:\Users\Lx\work2\web&!optionMap['isHaveDisableEnable']=&optionMap['isHaveDisableEnable']=0&!optionMap['isHaveDelete']=&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&!optionMap['isImageUpload']=&optionMap['isImageUpload']=0&!optionMap['isFileUpload']=&optionMap['isFileUpload']=0&!optionMap['isBpmForm']=&optionMap['isBpmForm']=0&optionMap['bpmFormKey']=&genFlag=1&replaceFile=1&!replaceFile=0(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 1(String), 
>>08:46:44:表达式值为空(NULL):parent 位于73行 资源:/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package ${packageName}.${moduleName}.entity${isNotBlank(subModuleName)?'.'+subModuleName:''};

<% for(i in table.importList){ %>
import ${i};
<% } %>

import com.jeesite.common.entity.DataEntity;
<% if(table.isTreeEntity){ %>
import com.jeesite.common.entity.TreeEntity;
<% } %>
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;
<% if(toBoolean(table.optionMap['isBpmForm'])){ %>
	<% if(table.isTreeEntity){ %>
import com.jeesite.modules.bpm.entity.BpmTreeEntity;
	<% }else{ %>
import com.jeesite.modules.bpm.entity.BpmEntity;
	<% } %>
<% } %>

/**
 * ${functionName}Entity
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Table(name="${table.genTableName}", alias="a", columns={
		<%
		var isBase = false, isData = false,
			isTree = false, isExtend = false;
		// ◆ 生成字段属性
		for(c in table.col...
空指针
70|				// 容错，如果没有设置父表的主键属性，则设置
71|				if(!@StringUtils.contains(c.attrName, ".")){
72|					if (table.parentExists && table.parentTableFkName == c.columnName){
73|						for (pk in table.parent.pkList){
74|							c.fullAttrName = c.fullAttrName + '.' + pk.attrName;
75|							break;
76|						}

	at com.jeesite.common.beetl.handler.LoggerErrorHandler.final(dda:172)
	at com.jeesite.common.beetl.handler.LoggerErrorHandler.processExcption(dda:216)
	at org.beetl.core.Template.renderTo(Template.java:180)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: NULL
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	... 120 more
(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 98(Long)
2021-01-08 20:46:44.739 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:46:45.561 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:46:45.561  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 20:46:45.563 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:46:45.564 DEBUG 11236 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:45.567 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:46:45.568 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:45.569 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:46:45.570 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:46:45.572 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:46:45.573 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:45.574 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:46:45.583 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table` SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2021-01-08 20:46:45.584 DEBUG 11236 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:45.584 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE `js_gen_table` SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ?
2021-01-08 20:46:45.585 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: Tadmin(String), t_admin(String), t_admin(String), userid(String), (String), crud(String), com.jeesite.modules(String), t(String), (String), t_admin(String), t_admin(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 20:46:45.582(Timestamp), (String), t_admin(String)
2021-01-08 20:46:45.585 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2021-01-08 20:46:45.586 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:46:45.586 DEBUG 11236 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:46:45.587 DEBUG 11236 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), userid(String), 10(Integer), int(String), userid(String), userid(String), userid(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"1","fieldValid":"abc","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563822243840(String)
2021-01-08 20:46:45.587 DEBUG 11236 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:46:45.589 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:46:45.589 DEBUG 11236 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:46:45.589 DEBUG 11236 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), username(String), 20(Integer), varchar(55)(String), username(String), username(String), username(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563851603968(String)
2021-01-08 20:46:45.590 DEBUG 11236 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:46:45.591 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:46:45.592 DEBUG 11236 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:46:45.593 DEBUG 11236 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), userpw(String), 30(Integer), varchar(50)(String), userpw(String), userpw(String), userpw(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563977433088(String)
2021-01-08 20:46:45.594 DEBUG 11236 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:46:45.603 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2021-01-08 20:46:45.603 DEBUG 11236 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:45.606 DEBUG 11236 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC
2021-01-08 20:46:45.607 DEBUG 11236 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:45.611 DEBUG 11236 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 1
2021-01-08 20:46:45.612 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:46:45.616 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:46:45.616 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:45.617 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:46:45.618 DEBUG 11236 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\t\TadminDao.xml
2021-01-08 20:46:45.618 DEBUG 11236 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.t.dao.TadminDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tadmin">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 20:46:45.618 DEBUG 11236 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\entity\Tadmin.java
2021-01-08 20:46:45.619 DEBUG 11236 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.t.entity;

import org.hibernate.validator.constraints.Length;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * t_adminEntity
 * @author LX
 * @version 2021-01-08
 */
@Table(name="t_admin", alias="a", columns={
		@Column(name="userid", attrName="userid.userid", label="userid", isPK=true),
		@Column(name="username", attrName="username", label="username"),
		@Column(name="userpw", attrName="userpw", label="userpw"),
	}, orderBy="a.userid ASC"
)
public class Tadmin extends DataEntity<Tadmin> {
	
	private static final long serialVersionUID = 1L;
	private Tadmin userid;		// userid 父类
	private String username;		// username
	private String userpw;		// userpw
	
	public Tadmin() {
		this(null);
	}


	public Tadmin(Tadmin userid){
		this.userid = userid;
	}
	
	public Tadmin getUserid() {
		return userid;
	}

	public void setUserid(Tadmin userid) {
		this.userid = userid;
	}
	
	@Length(min=0, max=55, message="username长度不能超过 55 个字符")
	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}
	
	@Length(min=0, max=50, message="userpw长度不能超过 50 个字符")
	public String getUserpw() {
		return userpw;
	}

	public void setUserpw(String userpw) {
		this.userpw = userpw;
	}
	
}
2021-01-08 20:46:45.620 DEBUG 11236 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\dao\TadminDao.java
2021-01-08 20:46:45.620 DEBUG 11236 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.t.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.t.entity.Tadmin;

/**
 * t_adminDAO接口
 * @author LX
 * @version 2021-01-08
 */
@MyBatisDao
public interface TadminDao extends CrudDao<Tadmin> {
	
}
2021-01-08 20:46:45.620 DEBUG 11236 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\t\TadminDao.xml
2021-01-08 20:46:45.620 DEBUG 11236 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.t.dao.TadminDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tadmin">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 20:46:45.620 DEBUG 11236 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\entity\Tadmin.java
2021-01-08 20:46:45.621 ERROR 11236 [nio-8980-exec-4] [c.j.c.beetl.handler.LoggerErrorHandler ] - 
>>08:46:45:表达式值为空(NULL):parent 位于73行 资源:/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package ${packageName}.${moduleName}.entity${isNotBlank(subModuleName)?'.'+subModuleName:''};

<% for(i in table.importList){ %>
import ${i};
<% } %>

import com.jeesite.common.entity.DataEntity;
<% if(table.isTreeEntity){ %>
import com.jeesite.common.entity.TreeEntity;
<% } %>
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;
<% if(toBoolean(table.optionMap['isBpmForm'])){ %>
	<% if(table.isTreeEntity){ %>
import com.jeesite.modules.bpm.entity.BpmTreeEntity;
	<% }else{ %>
import com.jeesite.modules.bpm.entity.BpmEntity;
	<% } %>
<% } %>

/**
 * ${functionName}Entity
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Table(name="${table.genTableName}", alias="a", columns={
		<%
		var isBase = false, isData = false,
			isTree = false, isExtend = false;
		// ◆ 生成字段属性
		for(c in table.col...
空指针
70|				// 容错，如果没有设置父表的主键属性，则设置
71|				if(!@StringUtils.contains(c.attrName, ".")){
72|					if (table.parentExists && table.parentTableFkName == c.columnName){
73|						for (pk in table.parent.pkList){
74|							c.fullAttrName = c.fullAttrName + '.' + pk.attrName;
75|							break;
76|						}


org.beetl.core.exception.BeetlException: 空指针
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)

2021-01-08 20:46:45.625 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:46:45.623  用时: 62毫秒  URI: /js/a/gen/genTable/save  总内存: 752MB  已用内存: 242.543MB
2021-01-08 20:46:45.627 ERROR 11236 [nio-8980-exec-4] [o.a.c.c.C.[.[.[/js].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [/js] threw exception [Request processing failed; nested exception is 
>>08:46:45:表达式值为空(NULL):parent 位于73行 资源:/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package ${packageName}.${moduleName}.entity${isNotBlank(subModuleName)?'.'+subModuleName:''};

<% for(i in table.importList){ %>
import ${i};
<% } %>

import com.jeesite.common.entity.DataEntity;
<% if(table.isTreeEntity){ %>
import com.jeesite.common.entity.TreeEntity;
<% } %>
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;
<% if(toBoolean(table.optionMap['isBpmForm'])){ %>
	<% if(table.isTreeEntity){ %>
import com.jeesite.modules.bpm.entity.BpmTreeEntity;
	<% }else{ %>
import com.jeesite.modules.bpm.entity.BpmEntity;
	<% } %>
<% } %>

/**
 * ${functionName}Entity
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Table(name="${table.genTableName}", alias="a", columns={
		<%
		var isBase = false, isData = false,
			isTree = false, isExtend = false;
		// ◆ 生成字段属性
		for(c in table.col...
空指针
70|				// 容错，如果没有设置父表的主键属性，则设置
71|				if(!@StringUtils.contains(c.attrName, ".")){
72|					if (table.parentExists && table.parentTableFkName == c.columnName){
73|						for (pk in table.parent.pkList){
74|							c.fullAttrName = c.fullAttrName + '.' + pk.attrName;
75|							break;
76|						}
] with root cause

org.beetl.core.exception.BeetlException: 空指针
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)

2021-01-08 20:46:45.632 DEBUG 11236 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:46:45.632 DEBUG 11236 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:45.633 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:46:45.634 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525147492605952(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:46:45.625(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=t_admin&comments=t_admin&className=Tadmin&functionAuthor=LX&parentTableName=t_admin&parentTableFkName=userid&remarks=&columnList[0].id=1347519563822243840&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=userid&columnList[0].comments=userid&columnList[0].columnType=int&columnList[0].attrType=Long&columnList[0].fullAttrName=userid&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=12/2/5&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['isNewLine']=1&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1347519563851603968&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=username&columnList[1].comments=username&columnList[1].columnType=varchar(55)&columnList[1].attrType=String&columnList[1].fullAttrName=username&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=12/2/5&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['isNewLine']=1&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[2].id=1347519563977433088&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=userpw&columnList[2].comments=userpw&columnList[2].columnType=varchar(50)&columnList[2].attrType=String&columnList[2].fullAttrName=userpw&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&columnList[2].isUpdate=1&!columnList[2].isList=&columnList[2].isList=1&!columnList[2].isQuery=&columnList[2].isQuery=1&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=12/2/5&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['isNewLine']=1&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&tplCategory=crud&packageName=com.jeesite.modules&moduleName=t&subModuleName=&functionName=t_admin&functionNameSimple=t_admin&genBaseDir=C:\Users\Lx\work2\web&!optionMap['isHaveDisableEnable']=&optionMap['isHaveDisableEnable']=0&!optionMap['isHaveDelete']=&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&!optionMap['isImageUpload']=&optionMap['isImageUpload']=0&!optionMap['isFileUpload']=&optionMap['isFileUpload']=0&!optionMap['isBpmForm']=&optionMap['isBpmForm']=0&optionMap['bpmFormKey']=&genFlag=1&replaceFile=1&!replaceFile=0(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 1(String), 
>>08:46:45:表达式值为空(NULL):parent 位于73行 资源:/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package ${packageName}.${moduleName}.entity${isNotBlank(subModuleName)?'.'+subModuleName:''};

<% for(i in table.importList){ %>
import ${i};
<% } %>

import com.jeesite.common.entity.DataEntity;
<% if(table.isTreeEntity){ %>
import com.jeesite.common.entity.TreeEntity;
<% } %>
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;
<% if(toBoolean(table.optionMap['isBpmForm'])){ %>
	<% if(table.isTreeEntity){ %>
import com.jeesite.modules.bpm.entity.BpmTreeEntity;
	<% }else{ %>
import com.jeesite.modules.bpm.entity.BpmEntity;
	<% } %>
<% } %>

/**
 * ${functionName}Entity
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Table(name="${table.genTableName}", alias="a", columns={
		<%
		var isBase = false, isData = false,
			isTree = false, isExtend = false;
		// ◆ 生成字段属性
		for(c in table.col...
空指针
70|				// 容错，如果没有设置父表的主键属性，则设置
71|				if(!@StringUtils.contains(c.attrName, ".")){
72|					if (table.parentExists && table.parentTableFkName == c.columnName){
73|						for (pk in table.parent.pkList){
74|							c.fullAttrName = c.fullAttrName + '.' + pk.attrName;
75|							break;
76|						}

	at com.jeesite.common.beetl.handler.LoggerErrorHandler.final(dda:172)
	at com.jeesite.common.beetl.handler.LoggerErrorHandler.processExcption(dda:216)
	at org.beetl.core.Template.renderTo(Template.java:180)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: NULL
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	... 120 more
(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 62(Long)
2021-01-08 20:46:45.636 ERROR 11236 [nio-8980-exec-4] [error/500                              ] - 

org.beetl.core.exception.BeetlException: NULL
	at com.jeesite.common.beetl.handler.LoggerErrorHandler.final(dda:172)
	at com.jeesite.common.beetl.handler.LoggerErrorHandler.processExcption(dda:216)
	at org.beetl.core.Template.renderTo(Template.java:180)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.beetl.core.exception.BeetlException: 空指针
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	... 120 common frames omitted

2021-01-08 20:46:45.638 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:46:46.394 DEBUG 11236 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:46:46.394  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 20:46:46.396 DEBUG 11236 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:46:46.396 DEBUG 11236 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:46.401 DEBUG 11236 [nio-8980-exec-2] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:46:46.402 DEBUG 11236 [nio-8980-exec-2] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:46.403 DEBUG 11236 [nio-8980-exec-2] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:46:46.405 DEBUG 11236 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:46:46.411 DEBUG 11236 [nio-8980-exec-2] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:46:46.412 DEBUG 11236 [nio-8980-exec-2] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:46.414 DEBUG 11236 [nio-8980-exec-2] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:46:46.425 DEBUG 11236 [nio-8980-exec-2] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table` SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2021-01-08 20:46:46.425 DEBUG 11236 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:46.426 DEBUG 11236 [nio-8980-exec-2] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE `js_gen_table` SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ?
2021-01-08 20:46:46.428 DEBUG 11236 [nio-8980-exec-2] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: Tadmin(String), t_admin(String), t_admin(String), userid(String), (String), crud(String), com.jeesite.modules(String), t(String), (String), t_admin(String), t_admin(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 20:46:46.424(Timestamp), (String), t_admin(String)
2021-01-08 20:46:46.429 DEBUG 11236 [nio-8980-exec-2] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2021-01-08 20:46:46.430 DEBUG 11236 [nio-8980-exec-2] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:46:46.431 DEBUG 11236 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:46:46.431 DEBUG 11236 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), userid(String), 10(Integer), int(String), userid(String), userid(String), userid(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"1","fieldValid":"abc","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563822243840(String)
2021-01-08 20:46:46.432 DEBUG 11236 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:46:46.433 DEBUG 11236 [nio-8980-exec-2] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:46:46.434 DEBUG 11236 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:46:46.434 DEBUG 11236 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), username(String), 20(Integer), varchar(55)(String), username(String), username(String), username(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563851603968(String)
2021-01-08 20:46:46.435 DEBUG 11236 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:46:46.436 DEBUG 11236 [nio-8980-exec-2] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:46:46.437 DEBUG 11236 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:46:46.438 DEBUG 11236 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), userpw(String), 30(Integer), varchar(50)(String), userpw(String), userpw(String), userpw(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563977433088(String)
2021-01-08 20:46:46.439 DEBUG 11236 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:46:46.452 DEBUG 11236 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2021-01-08 20:46:46.453 DEBUG 11236 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:46.458 DEBUG 11236 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC
2021-01-08 20:46:46.458 DEBUG 11236 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:46.462 DEBUG 11236 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 1
2021-01-08 20:46:46.462 DEBUG 11236 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:46:46.468 DEBUG 11236 [nio-8980-exec-2] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:46:46.468 DEBUG 11236 [nio-8980-exec-2] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:46.470 DEBUG 11236 [nio-8980-exec-2] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:46:46.471 DEBUG 11236 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\t\TadminDao.xml
2021-01-08 20:46:46.471 DEBUG 11236 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.t.dao.TadminDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tadmin">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 20:46:46.472 DEBUG 11236 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\entity\Tadmin.java
2021-01-08 20:46:46.473 DEBUG 11236 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.t.entity;

import org.hibernate.validator.constraints.Length;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * t_adminEntity
 * @author LX
 * @version 2021-01-08
 */
@Table(name="t_admin", alias="a", columns={
		@Column(name="userid", attrName="userid.userid", label="userid", isPK=true),
		@Column(name="username", attrName="username", label="username"),
		@Column(name="userpw", attrName="userpw", label="userpw"),
	}, orderBy="a.userid ASC"
)
public class Tadmin extends DataEntity<Tadmin> {
	
	private static final long serialVersionUID = 1L;
	private Tadmin userid;		// userid 父类
	private String username;		// username
	private String userpw;		// userpw
	
	public Tadmin() {
		this(null);
	}


	public Tadmin(Tadmin userid){
		this.userid = userid;
	}
	
	public Tadmin getUserid() {
		return userid;
	}

	public void setUserid(Tadmin userid) {
		this.userid = userid;
	}
	
	@Length(min=0, max=55, message="username长度不能超过 55 个字符")
	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}
	
	@Length(min=0, max=50, message="userpw长度不能超过 50 个字符")
	public String getUserpw() {
		return userpw;
	}

	public void setUserpw(String userpw) {
		this.userpw = userpw;
	}
	
}
2021-01-08 20:46:46.473 DEBUG 11236 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\dao\TadminDao.java
2021-01-08 20:46:46.473 DEBUG 11236 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.t.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.t.entity.Tadmin;

/**
 * t_adminDAO接口
 * @author LX
 * @version 2021-01-08
 */
@MyBatisDao
public interface TadminDao extends CrudDao<Tadmin> {
	
}
2021-01-08 20:46:46.473 DEBUG 11236 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\t\TadminDao.xml
2021-01-08 20:46:46.473 DEBUG 11236 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.t.dao.TadminDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tadmin">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 20:46:46.473 DEBUG 11236 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\entity\Tadmin.java
2021-01-08 20:46:46.474 ERROR 11236 [nio-8980-exec-2] [c.j.c.beetl.handler.LoggerErrorHandler ] - 
>>08:46:46:表达式值为空(NULL):parent 位于73行 资源:/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package ${packageName}.${moduleName}.entity${isNotBlank(subModuleName)?'.'+subModuleName:''};

<% for(i in table.importList){ %>
import ${i};
<% } %>

import com.jeesite.common.entity.DataEntity;
<% if(table.isTreeEntity){ %>
import com.jeesite.common.entity.TreeEntity;
<% } %>
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;
<% if(toBoolean(table.optionMap['isBpmForm'])){ %>
	<% if(table.isTreeEntity){ %>
import com.jeesite.modules.bpm.entity.BpmTreeEntity;
	<% }else{ %>
import com.jeesite.modules.bpm.entity.BpmEntity;
	<% } %>
<% } %>

/**
 * ${functionName}Entity
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Table(name="${table.genTableName}", alias="a", columns={
		<%
		var isBase = false, isData = false,
			isTree = false, isExtend = false;
		// ◆ 生成字段属性
		for(c in table.col...
空指针
70|				// 容错，如果没有设置父表的主键属性，则设置
71|				if(!@StringUtils.contains(c.attrName, ".")){
72|					if (table.parentExists && table.parentTableFkName == c.columnName){
73|						for (pk in table.parent.pkList){
74|							c.fullAttrName = c.fullAttrName + '.' + pk.attrName;
75|							break;
76|						}


org.beetl.core.exception.BeetlException: 空指针
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)

2021-01-08 20:46:46.483 DEBUG 11236 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:46:46.481  用时: 87毫秒  URI: /js/a/gen/genTable/save  总内存: 752MB  已用内存: 252.455MB
2021-01-08 20:46:46.484 ERROR 11236 [nio-8980-exec-2] [o.a.c.c.C.[.[.[/js].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [/js] threw exception [Request processing failed; nested exception is 
>>08:46:46:表达式值为空(NULL):parent 位于73行 资源:/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package ${packageName}.${moduleName}.entity${isNotBlank(subModuleName)?'.'+subModuleName:''};

<% for(i in table.importList){ %>
import ${i};
<% } %>

import com.jeesite.common.entity.DataEntity;
<% if(table.isTreeEntity){ %>
import com.jeesite.common.entity.TreeEntity;
<% } %>
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;
<% if(toBoolean(table.optionMap['isBpmForm'])){ %>
	<% if(table.isTreeEntity){ %>
import com.jeesite.modules.bpm.entity.BpmTreeEntity;
	<% }else{ %>
import com.jeesite.modules.bpm.entity.BpmEntity;
	<% } %>
<% } %>

/**
 * ${functionName}Entity
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Table(name="${table.genTableName}", alias="a", columns={
		<%
		var isBase = false, isData = false,
			isTree = false, isExtend = false;
		// ◆ 生成字段属性
		for(c in table.col...
空指针
70|				// 容错，如果没有设置父表的主键属性，则设置
71|				if(!@StringUtils.contains(c.attrName, ".")){
72|					if (table.parentExists && table.parentTableFkName == c.columnName){
73|						for (pk in table.parent.pkList){
74|							c.fullAttrName = c.fullAttrName + '.' + pk.attrName;
75|							break;
76|						}
] with root cause

org.beetl.core.exception.BeetlException: 空指针
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)

2021-01-08 20:46:46.500 ERROR 11236 [nio-8980-exec-2] [error/500                              ] - 

org.beetl.core.exception.BeetlException: NULL
	at com.jeesite.common.beetl.handler.LoggerErrorHandler.final(dda:172)
	at com.jeesite.common.beetl.handler.LoggerErrorHandler.processExcption(dda:216)
	at org.beetl.core.Template.renderTo(Template.java:180)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.beetl.core.exception.BeetlException: 空指针
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	... 120 common frames omitted

2021-01-08 20:46:46.490 DEBUG 11236 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:46:46.502 DEBUG 11236 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:46.503 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:46:46.508 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525151091318784(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:46:46.483(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=t_admin&comments=t_admin&className=Tadmin&functionAuthor=LX&parentTableName=t_admin&parentTableFkName=userid&remarks=&columnList[0].id=1347519563822243840&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=userid&columnList[0].comments=userid&columnList[0].columnType=int&columnList[0].attrType=Long&columnList[0].fullAttrName=userid&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=12/2/5&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['isNewLine']=1&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1347519563851603968&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=username&columnList[1].comments=username&columnList[1].columnType=varchar(55)&columnList[1].attrType=String&columnList[1].fullAttrName=username&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=12/2/5&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['isNewLine']=1&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[2].id=1347519563977433088&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=userpw&columnList[2].comments=userpw&columnList[2].columnType=varchar(50)&columnList[2].attrType=String&columnList[2].fullAttrName=userpw&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&columnList[2].isUpdate=1&!columnList[2].isList=&columnList[2].isList=1&!columnList[2].isQuery=&columnList[2].isQuery=1&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=12/2/5&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['isNewLine']=1&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&tplCategory=crud&packageName=com.jeesite.modules&moduleName=t&subModuleName=&functionName=t_admin&functionNameSimple=t_admin&genBaseDir=C:\Users\Lx\work2\web&!optionMap['isHaveDisableEnable']=&optionMap['isHaveDisableEnable']=0&!optionMap['isHaveDelete']=&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&!optionMap['isImageUpload']=&optionMap['isImageUpload']=0&!optionMap['isFileUpload']=&optionMap['isFileUpload']=0&!optionMap['isBpmForm']=&optionMap['isBpmForm']=0&optionMap['bpmFormKey']=&genFlag=1&replaceFile=1&!replaceFile=0(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 1(String), 
>>08:46:46:表达式值为空(NULL):parent 位于73行 资源:/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package ${packageName}.${moduleName}.entity${isNotBlank(subModuleName)?'.'+subModuleName:''};

<% for(i in table.importList){ %>
import ${i};
<% } %>

import com.jeesite.common.entity.DataEntity;
<% if(table.isTreeEntity){ %>
import com.jeesite.common.entity.TreeEntity;
<% } %>
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;
<% if(toBoolean(table.optionMap['isBpmForm'])){ %>
	<% if(table.isTreeEntity){ %>
import com.jeesite.modules.bpm.entity.BpmTreeEntity;
	<% }else{ %>
import com.jeesite.modules.bpm.entity.BpmEntity;
	<% } %>
<% } %>

/**
 * ${functionName}Entity
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Table(name="${table.genTableName}", alias="a", columns={
		<%
		var isBase = false, isData = false,
			isTree = false, isExtend = false;
		// ◆ 生成字段属性
		for(c in table.col...
空指针
70|				// 容错，如果没有设置父表的主键属性，则设置
71|				if(!@StringUtils.contains(c.attrName, ".")){
72|					if (table.parentExists && table.parentTableFkName == c.columnName){
73|						for (pk in table.parent.pkList){
74|							c.fullAttrName = c.fullAttrName + '.' + pk.attrName;
75|							break;
76|						}

	at com.jeesite.common.beetl.handler.LoggerErrorHandler.final(dda:172)
	at com.jeesite.common.beetl.handler.LoggerErrorHandler.processExcption(dda:216)
	at org.beetl.core.Template.renderTo(Template.java:180)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: NULL
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	... 120 more
(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 87(Long)
2021-01-08 20:46:46.561 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:46:47.939 DEBUG 11236 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:46:47.939  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 20:46:47.940 DEBUG 11236 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:46:47.941 DEBUG 11236 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:47.947 DEBUG 11236 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:46:47.948 DEBUG 11236 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:47.950 DEBUG 11236 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:46:47.951 DEBUG 11236 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:46:47.956 DEBUG 11236 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:46:47.956 DEBUG 11236 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:47.958 DEBUG 11236 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:46:47.974 DEBUG 11236 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table` SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2021-01-08 20:46:47.975 DEBUG 11236 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:47.977 DEBUG 11236 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE `js_gen_table` SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ?
2021-01-08 20:46:47.980 DEBUG 11236 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: Tadmin(String), t_admin(String), t_admin(String), userid(String), (String), crud(String), com.jeesite.modules(String), t(String), (String), t_admin(String), t_admin(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 20:46:47.974(Timestamp), (String), t_admin(String)
2021-01-08 20:46:47.981 DEBUG 11236 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2021-01-08 20:46:47.982 DEBUG 11236 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:46:47.983 DEBUG 11236 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:46:47.983 DEBUG 11236 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), userid(String), 10(Integer), int(String), userid(String), userid(String), userid(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"1","fieldValid":"abc","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563822243840(String)
2021-01-08 20:46:47.984 DEBUG 11236 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:46:47.985 DEBUG 11236 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:46:47.986 DEBUG 11236 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:46:47.987 DEBUG 11236 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), username(String), 20(Integer), varchar(55)(String), username(String), username(String), username(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563851603968(String)
2021-01-08 20:46:47.988 DEBUG 11236 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:46:47.989 DEBUG 11236 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:46:47.990 DEBUG 11236 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:46:47.990 DEBUG 11236 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), userpw(String), 30(Integer), varchar(50)(String), userpw(String), userpw(String), userpw(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563977433088(String)
2021-01-08 20:46:47.991 DEBUG 11236 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:46:48.005 DEBUG 11236 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2021-01-08 20:46:48.005 DEBUG 11236 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:48.011 DEBUG 11236 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC
2021-01-08 20:46:48.012 DEBUG 11236 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:48.013 DEBUG 11236 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 1
2021-01-08 20:46:48.015 DEBUG 11236 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:46:48.018 DEBUG 11236 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:46:48.018 DEBUG 11236 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:48.020 DEBUG 11236 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:46:48.021 DEBUG 11236 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\t\TadminDao.xml
2021-01-08 20:46:48.021 DEBUG 11236 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.t.dao.TadminDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tadmin">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 20:46:48.023 DEBUG 11236 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\mappings\modules\t\TadminDao.xml
2021-01-08 20:46:48.023 DEBUG 11236 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\entity\Tadmin.java
2021-01-08 20:46:48.023 DEBUG 11236 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.t.entity;

import org.hibernate.validator.constraints.Length;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * t_adminEntity
 * @author LX
 * @version 2021-01-08
 */
@Table(name="t_admin", alias="a", columns={
		@Column(name="userid", attrName="userid.userid", label="userid", isPK=true),
		@Column(name="username", attrName="username", label="username"),
		@Column(name="userpw", attrName="userpw", label="userpw"),
	}, orderBy="a.userid ASC"
)
public class Tadmin extends DataEntity<Tadmin> {
	
	private static final long serialVersionUID = 1L;
	private Tadmin userid;		// userid 父类
	private String username;		// username
	private String userpw;		// userpw
	
	public Tadmin() {
		this(null);
	}


	public Tadmin(Tadmin userid){
		this.userid = userid;
	}
	
	public Tadmin getUserid() {
		return userid;
	}

	public void setUserid(Tadmin userid) {
		this.userid = userid;
	}
	
	@Length(min=0, max=55, message="username长度不能超过 55 个字符")
	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}
	
	@Length(min=0, max=50, message="userpw长度不能超过 50 个字符")
	public String getUserpw() {
		return userpw;
	}

	public void setUserpw(String userpw) {
		this.userpw = userpw;
	}
	
}
2021-01-08 20:46:48.025 DEBUG 11236 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\entity\Tadmin.java
2021-01-08 20:46:48.025 DEBUG 11236 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\dao\TadminDao.java
2021-01-08 20:46:48.025 DEBUG 11236 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.t.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.t.entity.Tadmin;

/**
 * t_adminDAO接口
 * @author LX
 * @version 2021-01-08
 */
@MyBatisDao
public interface TadminDao extends CrudDao<Tadmin> {
	
}
2021-01-08 20:46:48.027 DEBUG 11236 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\dao\TadminDao.java
2021-01-08 20:46:48.028 DEBUG 11236 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\t\TadminDao.xml
2021-01-08 20:46:48.028 DEBUG 11236 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.t.dao.TadminDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tadmin">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 20:46:48.031 DEBUG 11236 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\mappings\modules\t\TadminDao.xml
2021-01-08 20:46:48.031 DEBUG 11236 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\entity\Tadmin.java
2021-01-08 20:46:48.032 ERROR 11236 [nio-8980-exec-5] [c.j.c.beetl.handler.LoggerErrorHandler ] - 
>>08:46:48:表达式值为空(NULL):parent 位于73行 资源:/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package ${packageName}.${moduleName}.entity${isNotBlank(subModuleName)?'.'+subModuleName:''};

<% for(i in table.importList){ %>
import ${i};
<% } %>

import com.jeesite.common.entity.DataEntity;
<% if(table.isTreeEntity){ %>
import com.jeesite.common.entity.TreeEntity;
<% } %>
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;
<% if(toBoolean(table.optionMap['isBpmForm'])){ %>
	<% if(table.isTreeEntity){ %>
import com.jeesite.modules.bpm.entity.BpmTreeEntity;
	<% }else{ %>
import com.jeesite.modules.bpm.entity.BpmEntity;
	<% } %>
<% } %>

/**
 * ${functionName}Entity
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Table(name="${table.genTableName}", alias="a", columns={
		<%
		var isBase = false, isData = false,
			isTree = false, isExtend = false;
		// ◆ 生成字段属性
		for(c in table.col...
空指针
70|				// 容错，如果没有设置父表的主键属性，则设置
71|				if(!@StringUtils.contains(c.attrName, ".")){
72|					if (table.parentExists && table.parentTableFkName == c.columnName){
73|						for (pk in table.parent.pkList){
74|							c.fullAttrName = c.fullAttrName + '.' + pk.attrName;
75|							break;
76|						}


org.beetl.core.exception.BeetlException: 空指针
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)

2021-01-08 20:46:48.037 DEBUG 11236 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:46:48.035  用时: 96毫秒  URI: /js/a/gen/genTable/save  总内存: 752MB  已用内存: 265.969MB
2021-01-08 20:46:48.038 ERROR 11236 [nio-8980-exec-5] [o.a.c.c.C.[.[.[/js].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [/js] threw exception [Request processing failed; nested exception is 
>>08:46:48:表达式值为空(NULL):parent 位于73行 资源:/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package ${packageName}.${moduleName}.entity${isNotBlank(subModuleName)?'.'+subModuleName:''};

<% for(i in table.importList){ %>
import ${i};
<% } %>

import com.jeesite.common.entity.DataEntity;
<% if(table.isTreeEntity){ %>
import com.jeesite.common.entity.TreeEntity;
<% } %>
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;
<% if(toBoolean(table.optionMap['isBpmForm'])){ %>
	<% if(table.isTreeEntity){ %>
import com.jeesite.modules.bpm.entity.BpmTreeEntity;
	<% }else{ %>
import com.jeesite.modules.bpm.entity.BpmEntity;
	<% } %>
<% } %>

/**
 * ${functionName}Entity
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Table(name="${table.genTableName}", alias="a", columns={
		<%
		var isBase = false, isData = false,
			isTree = false, isExtend = false;
		// ◆ 生成字段属性
		for(c in table.col...
空指针
70|				// 容错，如果没有设置父表的主键属性，则设置
71|				if(!@StringUtils.contains(c.attrName, ".")){
72|					if (table.parentExists && table.parentTableFkName == c.columnName){
73|						for (pk in table.parent.pkList){
74|							c.fullAttrName = c.fullAttrName + '.' + pk.attrName;
75|							break;
76|						}
] with root cause

org.beetl.core.exception.BeetlException: 空指针
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)

2021-01-08 20:46:48.041 DEBUG 11236 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:46:48.041 DEBUG 11236 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:48.042 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:46:48.042 ERROR 11236 [nio-8980-exec-5] [error/500                              ] - 

org.beetl.core.exception.BeetlException: NULL
	at com.jeesite.common.beetl.handler.LoggerErrorHandler.final(dda:172)
	at com.jeesite.common.beetl.handler.LoggerErrorHandler.processExcption(dda:216)
	at org.beetl.core.Template.renderTo(Template.java:180)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.beetl.core.exception.BeetlException: 空指针
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	... 120 common frames omitted

2021-01-08 20:46:48.045 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525157605072896(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:46:48.036(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=t_admin&comments=t_admin&className=Tadmin&functionAuthor=LX&parentTableName=t_admin&parentTableFkName=userid&remarks=&columnList[0].id=1347519563822243840&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=userid&columnList[0].comments=userid&columnList[0].columnType=int&columnList[0].attrType=Long&columnList[0].fullAttrName=userid&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=12/2/5&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['isNewLine']=1&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1347519563851603968&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=username&columnList[1].comments=username&columnList[1].columnType=varchar(55)&columnList[1].attrType=String&columnList[1].fullAttrName=username&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=12/2/5&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['isNewLine']=1&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[2].id=1347519563977433088&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=userpw&columnList[2].comments=userpw&columnList[2].columnType=varchar(50)&columnList[2].attrType=String&columnList[2].fullAttrName=userpw&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&columnList[2].isUpdate=1&!columnList[2].isList=&columnList[2].isList=1&!columnList[2].isQuery=&columnList[2].isQuery=1&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=12/2/5&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['isNewLine']=1&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&tplCategory=crud&packageName=com.jeesite.modules&moduleName=t&subModuleName=&functionName=t_admin&functionNameSimple=t_admin&genBaseDir=C:\Users\Lx\work2\web&!optionMap['isHaveDisableEnable']=&optionMap['isHaveDisableEnable']=0&!optionMap['isHaveDelete']=&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&!optionMap['isImageUpload']=&optionMap['isImageUpload']=0&!optionMap['isFileUpload']=&optionMap['isFileUpload']=0&!optionMap['isBpmForm']=&optionMap['isBpmForm']=0&optionMap['bpmFormKey']=&genFlag=2&replaceFile=1&!replaceFile=0(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 1(String), 
>>08:46:48:表达式值为空(NULL):parent 位于73行 资源:/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package ${packageName}.${moduleName}.entity${isNotBlank(subModuleName)?'.'+subModuleName:''};

<% for(i in table.importList){ %>
import ${i};
<% } %>

import com.jeesite.common.entity.DataEntity;
<% if(table.isTreeEntity){ %>
import com.jeesite.common.entity.TreeEntity;
<% } %>
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;
<% if(toBoolean(table.optionMap['isBpmForm'])){ %>
	<% if(table.isTreeEntity){ %>
import com.jeesite.modules.bpm.entity.BpmTreeEntity;
	<% }else{ %>
import com.jeesite.modules.bpm.entity.BpmEntity;
	<% } %>
<% } %>

/**
 * ${functionName}Entity
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Table(name="${table.genTableName}", alias="a", columns={
		<%
		var isBase = false, isData = false,
			isTree = false, isExtend = false;
		// ◆ 生成字段属性
		for(c in table.col...
空指针
70|				// 容错，如果没有设置父表的主键属性，则设置
71|				if(!@StringUtils.contains(c.attrName, ".")){
72|					if (table.parentExists && table.parentTableFkName == c.columnName){
73|						for (pk in table.parent.pkList){
74|							c.fullAttrName = c.fullAttrName + '.' + pk.attrName;
75|							break;
76|						}

	at com.jeesite.common.beetl.handler.LoggerErrorHandler.final(dda:172)
	at com.jeesite.common.beetl.handler.LoggerErrorHandler.processExcption(dda:216)
	at org.beetl.core.Template.renderTo(Template.java:180)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: NULL
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	... 120 more
(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 96(Long)
2021-01-08 20:46:48.055 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:46:48.940 DEBUG 11236 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:46:48.939  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 20:46:48.942 DEBUG 11236 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:46:48.943 DEBUG 11236 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:48.947 DEBUG 11236 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:46:48.948 DEBUG 11236 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:48.949 DEBUG 11236 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:46:48.950 DEBUG 11236 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:46:48.955 DEBUG 11236 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:46:48.956 DEBUG 11236 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:48.957 DEBUG 11236 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:46:48.969 DEBUG 11236 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table` SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2021-01-08 20:46:48.970 DEBUG 11236 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:48.970 DEBUG 11236 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE `js_gen_table` SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ?
2021-01-08 20:46:48.971 DEBUG 11236 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: Tadmin(String), t_admin(String), t_admin(String), userid(String), (String), crud(String), com.jeesite.modules(String), t(String), (String), t_admin(String), t_admin(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 20:46:48.969(Timestamp), (String), t_admin(String)
2021-01-08 20:46:48.982 DEBUG 11236 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2021-01-08 20:46:48.984 DEBUG 11236 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:46:48.985 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:46:48.985 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), userid(String), 10(Integer), int(String), userid(String), userid(String), userid(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"1","fieldValid":"abc","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563822243840(String)
2021-01-08 20:46:48.988 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:46:48.989 DEBUG 11236 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:46:48.990 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:46:48.991 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), username(String), 20(Integer), varchar(55)(String), username(String), username(String), username(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563851603968(String)
2021-01-08 20:46:48.993 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:46:49.388 DEBUG 11236 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 394毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:46:49.414 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:46:49.416 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), userpw(String), 30(Integer), varchar(50)(String), userpw(String), userpw(String), userpw(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563977433088(String)
2021-01-08 20:46:49.417 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:46:49.439 DEBUG 11236 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2021-01-08 20:46:49.439 DEBUG 11236 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:49.446 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC
2021-01-08 20:46:49.447 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:49.455 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 1
2021-01-08 20:46:49.460 DEBUG 11236 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:46:49.467 DEBUG 11236 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:46:49.468 DEBUG 11236 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:46:49.471 DEBUG 11236 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:46:49.472 DEBUG 11236 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\t\TadminDao.xml
2021-01-08 20:46:49.472 DEBUG 11236 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.t.dao.TadminDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tadmin">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 20:46:49.489 DEBUG 11236 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\mappings\modules\t\TadminDao.xml
2021-01-08 20:46:49.490 DEBUG 11236 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\entity\Tadmin.java
2021-01-08 20:46:49.491 DEBUG 11236 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.t.entity;

import org.hibernate.validator.constraints.Length;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * t_adminEntity
 * @author LX
 * @version 2021-01-08
 */
@Table(name="t_admin", alias="a", columns={
		@Column(name="userid", attrName="userid.userid", label="userid", isPK=true),
		@Column(name="username", attrName="username", label="username"),
		@Column(name="userpw", attrName="userpw", label="userpw"),
	}, orderBy="a.userid ASC"
)
public class Tadmin extends DataEntity<Tadmin> {
	
	private static final long serialVersionUID = 1L;
	private Tadmin userid;		// userid 父类
	private String username;		// username
	private String userpw;		// userpw
	
	public Tadmin() {
		this(null);
	}


	public Tadmin(Tadmin userid){
		this.userid = userid;
	}
	
	public Tadmin getUserid() {
		return userid;
	}

	public void setUserid(Tadmin userid) {
		this.userid = userid;
	}
	
	@Length(min=0, max=55, message="username长度不能超过 55 个字符")
	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}
	
	@Length(min=0, max=50, message="userpw长度不能超过 50 个字符")
	public String getUserpw() {
		return userpw;
	}

	public void setUserpw(String userpw) {
		this.userpw = userpw;
	}
	
}
2021-01-08 20:46:49.493 DEBUG 11236 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\entity\Tadmin.java
2021-01-08 20:46:49.493 DEBUG 11236 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\dao\TadminDao.java
2021-01-08 20:46:49.493 DEBUG 11236 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.t.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.t.entity.Tadmin;

/**
 * t_adminDAO接口
 * @author LX
 * @version 2021-01-08
 */
@MyBatisDao
public interface TadminDao extends CrudDao<Tadmin> {
	
}
2021-01-08 20:46:49.495 DEBUG 11236 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\dao\TadminDao.java
2021-01-08 20:46:49.495 DEBUG 11236 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\t\TadminDao.xml
2021-01-08 20:46:49.495 DEBUG 11236 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.t.dao.TadminDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tadmin">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 20:46:49.497 DEBUG 11236 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\mappings\modules\t\TadminDao.xml
2021-01-08 20:46:49.497 DEBUG 11236 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\entity\Tadmin.java
2021-01-08 20:46:49.498 ERROR 11236 [nio-8980-exec-6] [c.j.c.beetl.handler.LoggerErrorHandler ] - 
>>08:46:49:表达式值为空(NULL):parent 位于73行 资源:/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package ${packageName}.${moduleName}.entity${isNotBlank(subModuleName)?'.'+subModuleName:''};

<% for(i in table.importList){ %>
import ${i};
<% } %>

import com.jeesite.common.entity.DataEntity;
<% if(table.isTreeEntity){ %>
import com.jeesite.common.entity.TreeEntity;
<% } %>
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;
<% if(toBoolean(table.optionMap['isBpmForm'])){ %>
	<% if(table.isTreeEntity){ %>
import com.jeesite.modules.bpm.entity.BpmTreeEntity;
	<% }else{ %>
import com.jeesite.modules.bpm.entity.BpmEntity;
	<% } %>
<% } %>

/**
 * ${functionName}Entity
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Table(name="${table.genTableName}", alias="a", columns={
		<%
		var isBase = false, isData = false,
			isTree = false, isExtend = false;
		// ◆ 生成字段属性
		for(c in table.col...
空指针
70|				// 容错，如果没有设置父表的主键属性，则设置
71|				if(!@StringUtils.contains(c.attrName, ".")){
72|					if (table.parentExists && table.parentTableFkName == c.columnName){
73|						for (pk in table.parent.pkList){
74|							c.fullAttrName = c.fullAttrName + '.' + pk.attrName;
75|							break;
76|						}


org.beetl.core.exception.BeetlException: 空指针
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)

2021-01-08 20:46:49.520 DEBUG 11236 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:46:49.518  用时: 579毫秒  URI: /js/a/gen/genTable/save  总内存: 789.5MB  已用内存: 63.242MB
2021-01-08 20:46:49.524 DEBUG 11236 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:46:49.521 ERROR 11236 [nio-8980-exec-6] [o.a.c.c.C.[.[.[/js].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [/js] threw exception [Request processing failed; nested exception is 
>>08:46:49:表达式值为空(NULL):parent 位于73行 资源:/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package ${packageName}.${moduleName}.entity${isNotBlank(subModuleName)?'.'+subModuleName:''};

<% for(i in table.importList){ %>
import ${i};
<% } %>

import com.jeesite.common.entity.DataEntity;
<% if(table.isTreeEntity){ %>
import com.jeesite.common.entity.TreeEntity;
<% } %>
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;
<% if(toBoolean(table.optionMap['isBpmForm'])){ %>
	<% if(table.isTreeEntity){ %>
import com.jeesite.modules.bpm.entity.BpmTreeEntity;
	<% }else{ %>
import com.jeesite.modules.bpm.entity.BpmEntity;
	<% } %>
<% } %>

/**
 * ${functionName}Entity
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Table(name="${table.genTableName}", alias="a", columns={
		<%
		var isBase = false, isData = false,
			isTree = false, isExtend = false;
		// ◆ 生成字段属性
		for(c in table.col...
空指针
70|				// 容错，如果没有设置父表的主键属性，则设置
71|				if(!@StringUtils.contains(c.attrName, ".")){
72|					if (table.parentExists && table.parentTableFkName == c.columnName){
73|						for (pk in table.parent.pkList){
74|							c.fullAttrName = c.fullAttrName + '.' + pk.attrName;
75|							break;
76|						}
] with root cause

org.beetl.core.exception.BeetlException: 空指针
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)

2021-01-08 20:46:49.529 DEBUG 11236 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:49.530 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:46:49.531 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525163825225728(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:46:49.519(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=t_admin&comments=t_admin&className=Tadmin&functionAuthor=LX&parentTableName=t_admin&parentTableFkName=userid&remarks=&columnList[0].id=1347519563822243840&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=userid&columnList[0].comments=userid&columnList[0].columnType=int&columnList[0].attrType=Long&columnList[0].fullAttrName=userid&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=12/2/5&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['isNewLine']=1&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1347519563851603968&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=username&columnList[1].comments=username&columnList[1].columnType=varchar(55)&columnList[1].attrType=String&columnList[1].fullAttrName=username&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=12/2/5&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['isNewLine']=1&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[2].id=1347519563977433088&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=userpw&columnList[2].comments=userpw&columnList[2].columnType=varchar(50)&columnList[2].attrType=String&columnList[2].fullAttrName=userpw&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&columnList[2].isUpdate=1&!columnList[2].isList=&columnList[2].isList=1&!columnList[2].isQuery=&columnList[2].isQuery=1&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=12/2/5&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['isNewLine']=1&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&tplCategory=crud&packageName=com.jeesite.modules&moduleName=t&subModuleName=&functionName=t_admin&functionNameSimple=t_admin&genBaseDir=C:\Users\Lx\work2\web&!optionMap['isHaveDisableEnable']=&optionMap['isHaveDisableEnable']=0&!optionMap['isHaveDelete']=&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&!optionMap['isImageUpload']=&optionMap['isImageUpload']=0&!optionMap['isFileUpload']=&optionMap['isFileUpload']=0&!optionMap['isBpmForm']=&optionMap['isBpmForm']=0&optionMap['bpmFormKey']=&genFlag=2&replaceFile=1&!replaceFile=0(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 1(String), 
>>08:46:49:表达式值为空(NULL):parent 位于73行 资源:/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package ${packageName}.${moduleName}.entity${isNotBlank(subModuleName)?'.'+subModuleName:''};

<% for(i in table.importList){ %>
import ${i};
<% } %>

import com.jeesite.common.entity.DataEntity;
<% if(table.isTreeEntity){ %>
import com.jeesite.common.entity.TreeEntity;
<% } %>
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;
<% if(toBoolean(table.optionMap['isBpmForm'])){ %>
	<% if(table.isTreeEntity){ %>
import com.jeesite.modules.bpm.entity.BpmTreeEntity;
	<% }else{ %>
import com.jeesite.modules.bpm.entity.BpmEntity;
	<% } %>
<% } %>

/**
 * ${functionName}Entity
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Table(name="${table.genTableName}", alias="a", columns={
		<%
		var isBase = false, isData = false,
			isTree = false, isExtend = false;
		// ◆ 生成字段属性
		for(c in table.col...
空指针
70|				// 容错，如果没有设置父表的主键属性，则设置
71|				if(!@StringUtils.contains(c.attrName, ".")){
72|					if (table.parentExists && table.parentTableFkName == c.columnName){
73|						for (pk in table.parent.pkList){
74|							c.fullAttrName = c.fullAttrName + '.' + pk.attrName;
75|							break;
76|						}

	at com.jeesite.common.beetl.handler.LoggerErrorHandler.final(dda:172)
	at com.jeesite.common.beetl.handler.LoggerErrorHandler.processExcption(dda:216)
	at org.beetl.core.Template.renderTo(Template.java:180)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: NULL
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	... 120 more
(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 579(Long)
2021-01-08 20:46:49.538 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:46:49.533 ERROR 11236 [nio-8980-exec-6] [error/500                              ] - 

org.beetl.core.exception.BeetlException: NULL
	at com.jeesite.common.beetl.handler.LoggerErrorHandler.final(dda:172)
	at com.jeesite.common.beetl.handler.LoggerErrorHandler.processExcption(dda:216)
	at org.beetl.core.Template.renderTo(Template.java:180)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.core.Template.render(Template.java:89)
	at com.jeesite.common.beetl.BeetlUtils.renderFromString(iha:87)
	at com.jeesite.modules.gen.utils.GenTableUtils.final(ri:12187)
	at com.jeesite.modules.gen.utils.GenTableUtils.generateToFile(ri:12831)
	at com.jeesite.modules.gen.service.GenTableService.final(zh:12506)
	at com.jeesite.modules.gen.service.GenTableService.generateCode(zh:16507)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$e7adc0e.generateCode(<generated>)
	at com.jeesite.modules.gen.service.GenTableService$$FastClassBySpringCGLIB$$b4d0470f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.service.GenTableService$$EnhancerBySpringCGLIB$$4c6e6d96.generateCode(<generated>)
	at com.jeesite.modules.gen.web.GenTableController.final(dg:66)
	at com.jeesite.modules.gen.web.GenTableController.save(dg:182)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$6f179b0b.save(<generated>)
	at com.jeesite.modules.gen.web.GenTableController$$FastClassBySpringCGLIB$$9f23fd83.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.gen.web.GenTableController$$EnhancerBySpringCGLIB$$e871560b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.beetl.core.exception.BeetlException: 空指针
	at org.beetl.core.statement.VarRef.evaluate(VarRef.java:88)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:73)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:58)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.IfStatement.execute(IfStatement.java:61)
	at org.beetl.core.statement.optimal.BlockStatementOptimal.execute(BlockStatementOptimal.java:50)
	at org.beetl.core.statement.ForStatement.execute(ForStatement.java:126)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	... 120 common frames omitted

2021-01-08 20:46:58.981 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:46:58.981  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2021-01-08 20:46:58.983 INFO  11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2021-01-08 20:46:58.995 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:46:58.994  用时: 13毫秒  URI: /js/a/gen/genTable/list  总内存: 789.5MB  已用内存: 86.322MB
2021-01-08 20:46:58.997 DEBUG 11236 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:46:58.997 DEBUG 11236 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:58.998 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:46:58.999 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525203566256128(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:46:58.994(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 13(Long)
2021-01-08 20:46:59.000 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:46:59.138 DEBUG 11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:46:59.138  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 20:46:59.147 DEBUG 11236 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 20:46:59.147 DEBUG 11236 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:59.155 DEBUG 11236 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 20:46:59.155 DEBUG 11236 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:46:59.157 DEBUG 11236 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 20:46:59.158 DEBUG 11236 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:46:59.161 DEBUG 11236 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 2
2021-01-08 20:46:59.169 DEBUG 11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:46:59.168  用时: 30毫秒  URI: /js/a/gen/genTable/listData  总内存: 789.5MB  已用内存: 94.258MB
2021-01-08 20:46:59.171 DEBUG 11236 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:46:59.172 DEBUG 11236 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:46:59.172 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:46:59.173 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525204296065024(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:46:59.168(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 30(Long)
2021-01-08 20:46:59.174 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:47:03.439 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:47:03.439  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2021-01-08 20:47:03.443 INFO  11236 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2021-01-08 20:47:03.448 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:47:03.447  用时: 8毫秒  URI: /js/a/gen/genTable/list  总内存: 789.5MB  已用内存: 98.143MB
2021-01-08 20:47:03.453 DEBUG 11236 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:47:03.453 DEBUG 11236 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:47:03.454 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:47:03.454 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525222247686144(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:47:03.448(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 8(Long)
2021-01-08 20:47:03.455 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:47:03.563 DEBUG 11236 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:47:03.562  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 20:47:03.566 DEBUG 11236 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 20:47:03.566 DEBUG 11236 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:47:03.577 DEBUG 11236 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 20:47:03.577 DEBUG 11236 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:47:03.579 DEBUG 11236 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 20:47:03.580 DEBUG 11236 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:47:03.581 DEBUG 11236 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 2
2021-01-08 20:47:03.586 DEBUG 11236 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:47:03.585  用时: 23毫秒  URI: /js/a/gen/genTable/listData  总内存: 789.5MB  已用内存: 98.640MB
2021-01-08 20:47:03.591 DEBUG 11236 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:47:03.592 DEBUG 11236 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:47:03.593 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:47:03.593 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525222826500096(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:47:03.586(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 23(Long)
2021-01-08 20:47:03.594 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:47:13.721 DEBUG 11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:47:13.721  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 20:47:13.730 DEBUG 11236 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:47:13.731 DEBUG 11236 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will not be managed by Spring
2021-01-08 20:47:13.734 DEBUG 11236 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:47:13.735 DEBUG 11236 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 20:47:13.736 DEBUG 11236 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 20:47:13.738 DEBUG 11236 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:47:13.744 DEBUG 11236 [nio-8980-exec-7] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 20:47:13.744 DEBUG 11236 [nio-8980-exec-7] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 20:47:13.748 DEBUG 11236 [nio-8980-exec-7] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 20:47:13.749 INFO  11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableFormSelect <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 20:47:13.764 DEBUG 11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:47:13.763  用时: 42毫秒  URI: /js/a/gen/genTable/form  总内存: 789.5MB  已用内存: 104.838MB
2021-01-08 20:47:13.767 DEBUG 11236 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:47:13.767 DEBUG 11236 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:47:13.768 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:47:13.769 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525265511931904(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:47:13.763(Timestamp), /js/a/gen/genTable/form(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 42(Long)
2021-01-08 20:47:13.770 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:47:17.970 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:47:17.970  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 20:47:17.972 DEBUG 11236 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:47:17.972 DEBUG 11236 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:47:17.976 DEBUG 11236 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:47:17.976 DEBUG 11236 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:47:17.977 DEBUG 11236 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:47:17.978 DEBUG 11236 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:47:17.981 DEBUG 11236 [nio-8980-exec-3] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:47:17.981 DEBUG 11236 [nio-8980-exec-3] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:47:17.983 DEBUG 11236 [nio-8980-exec-3] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:47:17.988 DEBUG 11236 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:47:17.988 DEBUG 11236 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:47:17.991 DEBUG 11236 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:47:17.991 DEBUG 11236 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:47:17.992 DEBUG 11236 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:47:17.994 INFO  11236 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: redirect:/a/gen/genTable/form?tableName=t_admin <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 20:47:17.996 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:47:17.995  用时: 25毫秒  URI: /js/a/gen/genTable/form  总内存: 789.5MB  已用内存: 107.876MB
2021-01-08 20:47:17.998 DEBUG 11236 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:47:17.998 DEBUG 11236 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:47:17.999 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:47:18.000 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525283262226432(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:47:17.995(Timestamp), /js/a/gen/genTable/form(String), POST(String), isNewRecord=true&tableName=t_admin(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 25(Long)
2021-01-08 20:47:18.001 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:47:18.002 DEBUG 11236 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:47:18.002  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 20:47:18.007 DEBUG 11236 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:47:18.007 DEBUG 11236 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:47:18.010 DEBUG 11236 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:47:18.010 DEBUG 11236 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:47:18.011 DEBUG 11236 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:47:18.012 DEBUG 11236 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:47:18.017 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:47:18.017 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:47:18.019 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:47:18.028 DEBUG 11236 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:47:18.033 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 20:47:18.033 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_admin(String), t_admin(String)
2021-01-08 20:47:18.036 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 20:47:18.042 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 20:47:18.043 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_admin(String)
2021-01-08 20:47:18.045 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 3
2021-01-08 20:47:18.050 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 20:47:18.051 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_admin(String)
2021-01-08 20:47:18.052 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 1
2021-01-08 20:47:18.056 DEBUG 11236 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:47:18.056 DEBUG 11236 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will not be managed by Spring
2021-01-08 20:47:18.059 DEBUG 11236 [nio-8980-exec-8] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:47:18.059 DEBUG 11236 [nio-8980-exec-8] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 20:47:18.062 DEBUG 11236 [nio-8980-exec-8] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 20:47:18.063 DEBUG 11236 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 20:47:18.063 DEBUG 11236 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will not be managed by Spring
2021-01-08 20:47:18.066 DEBUG 11236 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 20:47:18.066 DEBUG 11236 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 20:47:18.068 DEBUG 11236 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 4
2021-01-08 20:47:18.070 DEBUG 11236 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:47:18.076 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 20:47:18.076 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 20:47:18.077 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 20:47:18.078 INFO  11236 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 20:47:18.089 DEBUG 11236 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:47:18.088  用时: 86毫秒  URI: /js/a/gen/genTable/form  总内存: 789.5MB  已用内存: 114.154MB
2021-01-08 20:47:18.109 DEBUG 11236 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:47:18.110 DEBUG 11236 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:47:18.110 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:47:18.111 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525283656491008(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:47:18.089(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=t_admin(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 86(Long)
2021-01-08 20:47:18.112 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:47:25.103 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:47:25.102  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 20:47:25.104 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:47:25.105 DEBUG 11236 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:47:25.109 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:47:25.110 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:47:25.112 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:47:25.113 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:47:25.118 DEBUG 11236 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:47:25.119 DEBUG 11236 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:47:25.123 DEBUG 11236 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:47:25.132 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table` SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2021-01-08 20:47:25.133 DEBUG 11236 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:47:25.133 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE `js_gen_table` SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ?
2021-01-08 20:47:25.134 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: Tadmin(String), t_admin(String), t_admin(String), userid(String), (String), crud(String), com.jeesite.modules(String), t(String), (String), t_admin(String), t_admin(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 20:47:25.132(Timestamp), (String), t_admin(String)
2021-01-08 20:47:25.136 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2021-01-08 20:47:25.137 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:47:25.139 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:47:25.143 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), userid(String), 10(Integer), int(String), userid(String), userid(String), userid(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"1","fieldValid":"abc","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563822243840(String)
2021-01-08 20:47:25.144 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:47:25.145 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:47:25.147 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:47:25.148 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), username(String), 20(Integer), varchar(55)(String), username(String), username(String), username(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563851603968(String)
2021-01-08 20:47:25.149 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:47:25.150 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:47:25.151 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:47:25.152 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), userpw(String), 30(Integer), varchar(50)(String), userpw(String), userpw(String), userpw(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563977433088(String)
2021-01-08 20:47:25.153 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:47:25.161 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:47:25.159  用时: 57毫秒  URI: /js/a/gen/genTable/save  总内存: 789.5MB  已用内存: 117.883MB
2021-01-08 20:47:25.164 DEBUG 11236 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:47:25.164 DEBUG 11236 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:47:25.165 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:47:25.166 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525313318608896(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:47:25.161(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=t_admin&comments=t_admin&className=Tadmin&functionAuthor=LX&parentTableName=t_admin&parentTableFkName=userid&remarks=&columnList[0].id=1347519563822243840&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=userid&columnList[0].comments=userid&columnList[0].columnType=int&columnList[0].attrType=Long&columnList[0].fullAttrName=userid&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=12/2/5&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['isNewLine']=1&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1347519563851603968&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=username&columnList[1].comments=username&columnList[1].columnType=varchar(55)&columnList[1].attrType=String&columnList[1].fullAttrName=username&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=12/2/5&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['isNewLine']=1&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[2].id=1347519563977433088&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=userpw&columnList[2].comments=userpw&columnList[2].columnType=varchar(50)&columnList[2].attrType=String&columnList[2].fullAttrName=userpw&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&columnList[2].isUpdate=1&!columnList[2].isList=&columnList[2].isList=1&!columnList[2].isQuery=&columnList[2].isQuery=1&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=12/2/5&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['isNewLine']=1&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&genFlag=(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 57(Long)
2021-01-08 20:47:25.168 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:47:25.191 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:47:25.191  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 20:47:25.194 DEBUG 11236 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 20:47:25.195 DEBUG 11236 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:47:25.203 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 20:47:25.204 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:47:25.208 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 20:47:25.208 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:47:25.211 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 2
2021-01-08 20:47:25.218 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:47:25.217  用时: 26毫秒  URI: /js/a/gen/genTable/listData  总内存: 789.5MB  已用内存: 118.388MB
2021-01-08 20:47:25.223 DEBUG 11236 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:47:25.223 DEBUG 11236 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:47:25.224 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:47:25.225 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525313557684224(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:47:25.218(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 26(Long)
2021-01-08 20:47:25.226 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:47:36.931 DEBUG 11236 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:47:36.931  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2021-01-08 20:47:36.933 INFO  11236 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2021-01-08 20:47:36.938 DEBUG 11236 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:47:36.937  用时: 6毫秒  URI: /js/a/gen/genTable/list  总内存: 789.5MB  已用内存: 126.431MB
2021-01-08 20:47:36.942 DEBUG 11236 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:47:36.942 DEBUG 11236 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:47:36.943 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:47:36.943 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525362714927104(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:47:36.938(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 6(Long)
2021-01-08 20:47:36.944 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:47:37.093 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:47:37.093  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 20:47:37.097 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 20:47:37.097 DEBUG 11236 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:47:37.111 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 20:47:37.112 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:47:37.114 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 20:47:37.115 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:47:37.117 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 2
2021-01-08 20:47:37.126 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:47:37.125  用时: 32毫秒  URI: /js/a/gen/genTable/listData  总内存: 789.5MB  已用内存: 128.481MB
2021-01-08 20:47:37.128 DEBUG 11236 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:47:37.128 DEBUG 11236 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:47:37.129 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:47:37.130 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525363499261952(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:47:37.125(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 32(Long)
2021-01-08 20:47:37.131 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:47:38.391 DEBUG 11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:47:38.391  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2021-01-08 20:47:38.392 INFO  11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2021-01-08 20:47:38.397 DEBUG 11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:47:38.396  用时: 5毫秒  URI: /js/a/gen/genTable/list  总内存: 789.5MB  已用内存: 130.366MB
2021-01-08 20:47:38.401 DEBUG 11236 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:47:38.401 DEBUG 11236 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:47:38.402 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:47:38.403 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525368830222336(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:47:38.396(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 5(Long)
2021-01-08 20:47:38.404 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:47:38.536 DEBUG 11236 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:47:38.536  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 20:47:38.543 DEBUG 11236 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 20:47:38.544 DEBUG 11236 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:47:38.558 DEBUG 11236 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 20:47:38.558 DEBUG 11236 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:47:38.561 DEBUG 11236 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 20:47:38.561 DEBUG 11236 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:47:38.563 DEBUG 11236 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 2
2021-01-08 20:47:38.575 DEBUG 11236 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:47:38.574  用时: 38毫秒  URI: /js/a/gen/genTable/listData  总内存: 789.5MB  已用内存: 133.001MB
2021-01-08 20:47:38.581 DEBUG 11236 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:47:38.581 DEBUG 11236 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:47:38.582 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:47:38.582 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525369581002752(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:47:38.575(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 38(Long)
2021-01-08 20:47:38.583 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:47:39.848 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:47:39.848  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 20:47:39.852 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:47:39.853 DEBUG 11236 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will not be managed by Spring
2021-01-08 20:47:39.858 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:47:39.858 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 20:47:39.861 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 20:47:39.865 DEBUG 11236 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:47:39.872 DEBUG 11236 [nio-8980-exec-1] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 20:47:39.873 DEBUG 11236 [nio-8980-exec-1] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 20:47:39.880 DEBUG 11236 [nio-8980-exec-1] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 20:47:39.881 INFO  11236 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableFormSelect <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 20:47:39.886 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:47:39.884  用时: 36毫秒  URI: /js/a/gen/genTable/form  总内存: 789.5MB  已用内存: 134.554MB
2021-01-08 20:47:39.892 DEBUG 11236 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:47:39.892 DEBUG 11236 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:47:39.893 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:47:39.894 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525375075540992(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:47:39.885(Timestamp), /js/a/gen/genTable/form(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 36(Long)
2021-01-08 20:47:39.895 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:47:48.730 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:47:48.729  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 20:47:48.731 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:47:48.732 DEBUG 11236 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:47:48.735 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:47:48.736 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:47:48.738 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:47:48.739 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:47:48.742 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:47:48.742 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:47:48.743 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:47:48.745 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:47:48.746 DEBUG 11236 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:47:48.748 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:47:48.748 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:47:48.749 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:47:48.750 INFO  11236 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: redirect:/a/gen/genTable/form?tableName=t_admin <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 20:47:48.752 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:47:48.751  用时: 22毫秒  URI: /js/a/gen/genTable/form  总内存: 789.5MB  已用内存: 137.410MB
2021-01-08 20:47:48.753 DEBUG 11236 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:47:48.754 DEBUG 11236 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@18419ab7] will be managed by Spring
2021-01-08 20:47:48.754 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:47:48.755 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525412262240256(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:47:48.751(Timestamp), /js/a/gen/genTable/form(String), POST(String), isNewRecord=true&tableName=t_admin(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 22(Long)
2021-01-08 20:47:48.756 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:47:48.757 DEBUG 11236 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:47:48.757  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 20:47:48.759 DEBUG 11236 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:47:48.759 DEBUG 11236 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:47:48.762 DEBUG 11236 [nio-8980-exec-2] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:47:48.762 DEBUG 11236 [nio-8980-exec-2] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:47:48.763 DEBUG 11236 [nio-8980-exec-2] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:47:48.764 DEBUG 11236 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:47:48.767 DEBUG 11236 [nio-8980-exec-2] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:47:48.767 DEBUG 11236 [nio-8980-exec-2] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:47:48.768 DEBUG 11236 [nio-8980-exec-2] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:47:48.771 DEBUG 11236 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:47:48.775 DEBUG 11236 [nio-8980-exec-2] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 20:47:48.775 DEBUG 11236 [nio-8980-exec-2] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_admin(String), t_admin(String)
2021-01-08 20:47:48.777 DEBUG 11236 [nio-8980-exec-2] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 20:47:48.780 DEBUG 11236 [nio-8980-exec-2] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 20:47:48.781 DEBUG 11236 [nio-8980-exec-2] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_admin(String)
2021-01-08 20:47:48.782 DEBUG 11236 [nio-8980-exec-2] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 3
2021-01-08 20:47:48.787 DEBUG 11236 [nio-8980-exec-2] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 20:47:48.787 DEBUG 11236 [nio-8980-exec-2] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_admin(String)
2021-01-08 20:47:48.800 DEBUG 11236 [nio-8980-exec-2] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 1
2021-01-08 20:47:48.804 DEBUG 11236 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:47:48.804 DEBUG 11236 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will not be managed by Spring
2021-01-08 20:47:48.808 DEBUG 11236 [nio-8980-exec-2] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:47:48.808 DEBUG 11236 [nio-8980-exec-2] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 20:47:48.810 DEBUG 11236 [nio-8980-exec-2] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 20:47:48.810 DEBUG 11236 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 20:47:48.811 DEBUG 11236 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will not be managed by Spring
2021-01-08 20:47:48.814 DEBUG 11236 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 20:47:48.814 DEBUG 11236 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 20:47:48.816 DEBUG 11236 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 4
2021-01-08 20:47:48.817 DEBUG 11236 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:47:48.821 DEBUG 11236 [nio-8980-exec-2] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 20:47:48.821 DEBUG 11236 [nio-8980-exec-2] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 20:47:48.822 DEBUG 11236 [nio-8980-exec-2] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 20:47:48.823 INFO  11236 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 20:47:48.828 DEBUG 11236 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:47:48.827  用时: 70毫秒  URI: /js/a/gen/genTable/form  总内存: 789.5MB  已用内存: 141.204MB
2021-01-08 20:47:48.831 DEBUG 11236 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:47:48.831 DEBUG 11236 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:47:48.832 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:47:48.832 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525412585201664(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:47:48.828(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=t_admin(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 70(Long)
2021-01-08 20:47:48.834 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:48:16.651 DEBUG 11236 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:48:16.651  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 20:48:16.653 DEBUG 11236 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:48:16.653 DEBUG 11236 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:48:16.658 DEBUG 11236 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:48:16.659 DEBUG 11236 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:48:16.660 DEBUG 11236 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:48:16.661 DEBUG 11236 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:48:16.668 DEBUG 11236 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:48:16.669 DEBUG 11236 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:48:16.671 DEBUG 11236 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:48:16.678 DEBUG 11236 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table` SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2021-01-08 20:48:16.678 DEBUG 11236 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:48:16.679 DEBUG 11236 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE `js_gen_table` SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ?
2021-01-08 20:48:16.680 DEBUG 11236 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: Tadmin(String), t_admin(String), (String), userid(String), (String), crud(String), com.jeesite.modules(String), t(String), (String), t_admin(String), t_admin(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 20:48:16.677(Timestamp), (String), t_admin(String)
2021-01-08 20:48:16.682 DEBUG 11236 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2021-01-08 20:48:16.684 DEBUG 11236 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:48:16.685 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:48:16.686 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), userid(String), 10(Integer), int(String), userid(String), userid(String), userid(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"1","fieldValid":"abc","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563822243840(String)
2021-01-08 20:48:16.687 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:48:16.688 DEBUG 11236 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:48:16.688 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:48:16.689 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), username(String), 20(Integer), varchar(55)(String), username(String), username(String), username(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563851603968(String)
2021-01-08 20:48:16.689 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:48:16.690 DEBUG 11236 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:48:16.691 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:48:16.692 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), userpw(String), 30(Integer), varchar(50)(String), userpw(String), userpw(String), userpw(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563977433088(String)
2021-01-08 20:48:16.693 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:48:16.697 DEBUG 11236 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:48:16.695  用时: 44毫秒  URI: /js/a/gen/genTable/save  总内存: 789.5MB  已用内存: 144.249MB
2021-01-08 20:48:16.702 DEBUG 11236 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:48:16.702 DEBUG 11236 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:48:16.703 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:48:16.704 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525529472065536(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:48:16.696(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=t_admin&comments=t_admin&className=Tadmin&functionAuthor=LX&parentTableName=&parentTableFkName=userid&remarks=&columnList[0].id=1347519563822243840&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=userid&columnList[0].comments=userid&columnList[0].columnType=int&columnList[0].attrType=Long&columnList[0].fullAttrName=userid&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=12/2/5&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['isNewLine']=1&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1347519563851603968&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=username&columnList[1].comments=username&columnList[1].columnType=varchar(55)&columnList[1].attrType=String&columnList[1].fullAttrName=username&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=12/2/5&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['isNewLine']=1&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[2].id=1347519563977433088&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=userpw&columnList[2].comments=userpw&columnList[2].columnType=varchar(50)&columnList[2].attrType=String&columnList[2].fullAttrName=userpw&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&columnList[2].isUpdate=1&!columnList[2].isList=&columnList[2].isList=1&!columnList[2].isQuery=&columnList[2].isQuery=1&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=12/2/5&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['isNewLine']=1&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&genFlag=(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 44(Long)
2021-01-08 20:48:16.706 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:48:16.713 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:48:16.713  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 20:48:16.718 DEBUG 11236 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 20:48:16.718 DEBUG 11236 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:48:16.725 DEBUG 11236 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 20:48:16.726 DEBUG 11236 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:48:16.729 DEBUG 11236 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 20:48:16.730 DEBUG 11236 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:48:16.735 DEBUG 11236 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 20:48:16.744 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:48:16.743  用时: 30毫秒  URI: /js/a/gen/genTable/listData  总内存: 789.5MB  已用内存: 146.362MB
2021-01-08 20:48:16.747 DEBUG 11236 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:48:16.747 DEBUG 11236 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:48:16.749 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:48:16.751 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525529669197824(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:48:16.743(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 30(Long)
2021-01-08 20:48:16.753 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:48:20.483 DEBUG 11236 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:48:20.483  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 20:48:20.485 DEBUG 11236 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:48:20.485 DEBUG 11236 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:48:20.489 DEBUG 11236 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:48:20.489 DEBUG 11236 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:48:20.491 DEBUG 11236 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:48:20.492 DEBUG 11236 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:48:20.496 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:48:20.498 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:48:20.500 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:48:20.504 DEBUG 11236 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:48:20.508 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 20:48:20.508 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_admin(String), t_admin(String)
2021-01-08 20:48:20.510 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 20:48:20.513 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 20:48:20.514 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_admin(String)
2021-01-08 20:48:20.517 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 3
2021-01-08 20:48:20.520 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 20:48:20.520 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_admin(String)
2021-01-08 20:48:20.522 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 1
2021-01-08 20:48:20.526 DEBUG 11236 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:48:20.526 DEBUG 11236 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will not be managed by Spring
2021-01-08 20:48:20.529 DEBUG 11236 [nio-8980-exec-8] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:48:20.529 DEBUG 11236 [nio-8980-exec-8] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 20:48:20.535 DEBUG 11236 [nio-8980-exec-8] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 20:48:20.537 DEBUG 11236 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 20:48:20.537 DEBUG 11236 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will not be managed by Spring
2021-01-08 20:48:20.542 DEBUG 11236 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 20:48:20.542 DEBUG 11236 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 20:48:20.543 DEBUG 11236 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 4
2021-01-08 20:48:20.545 DEBUG 11236 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:48:20.551 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 20:48:20.551 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 20:48:20.552 DEBUG 11236 [nio-8980-exec-8] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 20:48:20.553 INFO  11236 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 20:48:20.576 DEBUG 11236 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:48:20.572  用时: 89毫秒  URI: /js/a/gen/genTable/form  总内存: 789.5MB  已用内存: 152.642MB
2021-01-08 20:48:20.579 DEBUG 11236 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:48:20.579 DEBUG 11236 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:48:20.579 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:48:20.581 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525545733382144(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:48:20.573(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=t_admin(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 89(Long)
2021-01-08 20:48:20.583 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:48:23.781 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:48:23.781  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 20:48:23.783 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:48:23.783 DEBUG 11236 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:48:23.788 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:48:23.788 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:48:23.789 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:48:23.790 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:48:23.792 DEBUG 11236 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:48:23.792 DEBUG 11236 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:48:23.793 DEBUG 11236 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:48:23.800 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table` SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2021-01-08 20:48:23.800 DEBUG 11236 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:48:23.801 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE `js_gen_table` SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ?
2021-01-08 20:48:23.801 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: Tadmin(String), t_admin(String), (String), userid(String), (String), crud(String), com.jeesite.modules(String), t(String), (String), t_admin(String), t_admin(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 20:48:23.8(Timestamp), (String), t_admin(String)
2021-01-08 20:48:23.802 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2021-01-08 20:48:23.803 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:48:23.803 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:48:23.804 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), userid(String), 10(Integer), int(String), userid(String), userid(String), userid(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"1","fieldValid":"abc","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563822243840(String)
2021-01-08 20:48:23.804 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:48:23.805 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:48:23.806 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:48:23.806 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), username(String), 20(Integer), varchar(55)(String), username(String), username(String), username(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563851603968(String)
2021-01-08 20:48:23.807 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:48:23.808 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 20:48:23.808 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 20:48:23.808 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_admin(String), userpw(String), 30(Integer), varchar(50)(String), userpw(String), userpw(String), userpw(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347519563977433088(String)
2021-01-08 20:48:23.809 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 20:48:23.821 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2021-01-08 20:48:23.822 DEBUG 11236 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:48:23.826 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC
2021-01-08 20:48:23.827 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_admin(String)
2021-01-08 20:48:23.828 DEBUG 11236 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 0
2021-01-08 20:48:23.828 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\t\TadminDao.xml
2021-01-08 20:48:23.828 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.t.dao.TadminDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tadmin">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 20:48:23.829 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - File Extents ==> C:\Users\Lx\work2\web\src\main\resources\mappings\modules\t\TadminDao.xml
2021-01-08 20:48:23.829 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\entity\Tadmin.java
2021-01-08 20:48:23.829 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.t.entity;

import org.hibernate.validator.constraints.Length;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * t_adminEntity
 * @author LX
 * @version 2021-01-08
 */
@Table(name="t_admin", alias="a", columns={
		@Column(name="userid", attrName="userid", label="userid", isPK=true),
		@Column(name="username", attrName="username", label="username"),
		@Column(name="userpw", attrName="userpw", label="userpw"),
	}, orderBy="a.userid DESC"
)
public class Tadmin extends DataEntity<Tadmin> {
	
	private static final long serialVersionUID = 1L;
	private Long userid;		// userid
	private String username;		// username
	private String userpw;		// userpw
	
	public Tadmin() {
		this(null);
	}

	public Tadmin(String id){
		super(id);
	}
	
	public Long getUserid() {
		return userid;
	}

	public void setUserid(Long userid) {
		this.userid = userid;
	}
	
	@Length(min=0, max=55, message="username长度不能超过 55 个字符")
	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}
	
	@Length(min=0, max=50, message="userpw长度不能超过 50 个字符")
	public String getUserpw() {
		return userpw;
	}

	public void setUserpw(String userpw) {
		this.userpw = userpw;
	}
	
}
2021-01-08 20:48:23.831 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - File Extents ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\entity\Tadmin.java
2021-01-08 20:48:23.831 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\dao\TadminDao.java
2021-01-08 20:48:23.831 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.t.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.t.entity.Tadmin;

/**
 * t_adminDAO接口
 * @author LX
 * @version 2021-01-08
 */
@MyBatisDao
public interface TadminDao extends CrudDao<Tadmin> {
	
}
2021-01-08 20:48:23.831 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - File Extents ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\dao\TadminDao.java
2021-01-08 20:48:23.831 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\service\TadminService.java
2021-01-08 20:48:23.880 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.t.service;

import java.util.List;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.jeesite.common.entity.Page;
import com.jeesite.common.service.CrudService;
import com.jeesite.modules.t.entity.Tadmin;
import com.jeesite.modules.t.dao.TadminDao;

/**
 * t_adminService
 * @author LX
 * @version 2021-01-08
 */
@Service
@Transactional(readOnly=true)
public class TadminService extends CrudService<TadminDao, Tadmin> {
	
	/**
	 * 获取单条数据
	 * @param tadmin
	 * @return
	 */
	@Override
	public Tadmin get(Tadmin tadmin) {
		return super.get(tadmin);
	}
	
	/**
	 * 查询分页数据
	 * @param tadmin 查询条件
	 * @param tadmin.page 分页对象
	 * @return
	 */
	@Override
	public Page<Tadmin> findPage(Tadmin tadmin) {
		return super.findPage(tadmin);
	}
	
	/**
	 * 保存数据（插入或更新）
	 * @param tadmin
	 */
	@Override
	@Transactional(readOnly=false)
	public void save(Tadmin tadmin) {
		super.save(tadmin);
	}
	
	/**
	 * 更新状态
	 * @param tadmin
	 */
	@Override
	@Transactional(readOnly=false)
	public void updateStatus(Tadmin tadmin) {
		super.updateStatus(tadmin);
	}
	
	/**
	 * 删除数据
	 * @param tadmin
	 */
	@Override
	@Transactional(readOnly=false)
	public void delete(Tadmin tadmin) {
		super.delete(tadmin);
	}
	
}
2021-01-08 20:48:23.880 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - File Extents ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\service\TadminService.java
2021-01-08 20:48:23.881 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\web\TadminController.java
2021-01-08 20:48:23.890 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.t.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.jeesite.common.config.Global;
import com.jeesite.common.entity.Page;
import com.jeesite.common.web.BaseController;
import com.jeesite.modules.t.entity.Tadmin;
import com.jeesite.modules.t.service.TadminService;

/**
 * t_adminController
 * @author LX
 * @version 2021-01-08
 */
@Controller
@RequestMapping(value = "${adminPath}/t/tadmin")
public class TadminController extends BaseController {

	@Autowired
	private TadminService tadminService;
	
	/**
	 * 获取数据
	 */
	@ModelAttribute
	public Tadmin get(Long userid, boolean isNewRecord) {
		return tadminService.get(userid, isNewRecord);
	}
	
	/**
	 * 查询列表
	 */
	@RequiresPermissions("t:tadmin:view")
	@RequestMapping(value = {"list", ""})
	public String list(Tadmin tadmin, Model model) {
		model.addAttribute("tadmin", tadmin);
		return "modules/t/tadminList";
	}
	
	/**
	 * 查询列表数据
	 */
	@RequiresPermissions("t:tadmin:view")
	@RequestMapping(value = "listData")
	@ResponseBody
	public Page<Tadmin> listData(Tadmin tadmin, HttpServletRequest request, HttpServletResponse response) {
		tadmin.setPage(new Page<>(request, response));
		Page<Tadmin> page = tadminService.findPage(tadmin);
		return page;
	}

	/**
	 * 查看编辑表单
	 */
	@RequiresPermissions("t:tadmin:view")
	@RequestMapping(value = "form")
	public String form(Tadmin tadmin, Model model) {
		model.addAttribute("tadmin", tadmin);
		return "modules/t/tadminForm";
	}

	/**
	 * 保存数据
	 */
	@RequiresPermissions("t:tadmin:edit")
	@PostMapping(value = "save")
	@ResponseBody
	public String save(@Validated Tadmin tadmin) {
		tadminService.save(tadmin);
		return renderResult(Global.TRUE, text("保存t_admin成功！"));
	}
	
	/**
	 * 删除数据
	 */
	@RequiresPermissions("t:tadmin:edit")
	@RequestMapping(value = "delete")
	@ResponseBody
	public String delete(Tadmin tadmin) {
		tadminService.delete(tadmin);
		return renderResult(Global.TRUE, text("删除t_admin成功！"));
	}
	
}
2021-01-08 20:48:23.891 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - File Extents ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\t\web\TadminController.java
2021-01-08 20:48:23.891 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\views\modules\t\tadminList.html
2021-01-08 20:48:23.915 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: 't_admin管理', libs: ['dataGrid']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header">
			<div class="box-title">
				<i class="fa icon-notebook"></i> ${text('t_admin管理')}
			</div>
			<div class="box-tools pull-right">
				<a href="#" class="btn btn-default" id="btnSearch" title="${text('查询')}"><i class="fa fa-filter"></i> ${text('查询')}</a>
				<% if(hasPermi('t:tadmin:edit')){ %>
					<a href="${ctx}/t/tadmin/form" class="btn btn-default btnTool" title="${text('新增t_admin')}"><i class="fa fa-plus"></i> ${text('新增')}</a>
				<% } %>
				<a href="#" class="btn btn-default" id="btnSetting" title="${text('设置')}"><i class="fa fa-navicon"></i></a>
			</div>
		</div>
		<div class="box-body">
			<#form:form id="searchForm" model="${tadmin}" action="${ctx}/t/tadmin/listData" method="post" class="form-inline hide"
					data-page-no="${parameter.pageNo}" data-page-size="${parameter.pageSize}" data-order-by="${parameter.orderBy}">
				<div class="form-group">
					<label class="control-label">${text('username')}：</label>
					<div class="control-inline">
						<#form:input path="username" maxlength="55" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('userpw')}：</label>
					<div class="control-inline">
						<#form:input path="userpw" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<button type="submit" class="btn btn-primary btn-sm">${text('查询')}</button>
					<button type="reset" class="btn btn-default btn-sm">${text('重置')}</button>
				</div>
			</#form:form>
			<table id="dataGrid"></table>
			<div id="dataGridPage"></div>
		</div>
	</div>
</div>
<% } %>
<script>
// 初始化DataGrid对象
$('#dataGrid').dataGrid({
	searchForm: $("#searchForm"),
	columnModel: [
		{header:'${text("username")}', name:'username', index:'a.username', width:150, align:"left", frozen:true, formatter: function(val, obj, row, act){
			return '<a href="${ctx}/t/tadmin/form?userid='+row.userid+'" class="btnList" data-title="${text("编辑t_admin")}">'+(val||row.id)+'</a>';
		}},
		{header:'${text("userpw")}', name:'userpw', index:'a.userpw', width:150, align:"left"},
		{header:'${text("操作")}', name:'actions', width:120, sortable:false, title:false, formatter: function(val, obj, row, act){
			var actions = [];
			<% if(hasPermi('t:tadmin:edit')){ %>
				actions.push('<a href="${ctx}/t/tadmin/form?userid='+row.userid+'" class="btnList" title="${text("编辑t_admin")}"><i class="fa fa-pencil"></i></a>&nbsp;');
				actions.push('<a href="${ctx}/t/tadmin/delete?userid='+row.userid+'" class="btnList" title="${text("删除t_admin")}" data-confirm="${text("确认要删除该t_admin吗？")}"><i class="fa fa-trash-o"></i></a>&nbsp;');
			<% } %>
			return actions.join('');
		}}
	],
	// 加载成功后执行事件
	ajaxSuccess: function(data){
		
	}
});
</script>
2021-01-08 20:48:23.918 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - File Extents ==> C:\Users\Lx\work2\web\src\main\resources\views\modules\t\tadminList.html
2021-01-08 20:48:23.918 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\views\modules\t\tadminForm.html
2021-01-08 20:48:23.938 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: 't_admin管理', libs: ['validate']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header with-border">
			<div class="box-title">
				<i class="fa icon-note"></i> ${text(tadmin.isNewRecord ? '新增t_admin' : '编辑t_admin')}
			</div>
			<div class="box-tools pull-right">
				<button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
			</div>
		</div>
		<#form:form id="inputForm" model="${tadmin}" action="${ctx}/t/tadmin/save" method="post" class="form-horizontal">
			<div class="box-body">
				<div class="form-unit">${text('基本信息')}</div>
				<#form:hidden path="userid"/>
				<div class="row">
				<div class="row">
					<div class="col-xs-12">
						<div class="form-group">
							<label class="control-label col-sm-2" title="">
								<span class="required hide">*</span> ${text('username')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-5">
								<#form:input path="username" maxlength="55" class="form-control"/>
							</div>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col-xs-12">
						<div class="form-group">
							<label class="control-label col-sm-2" title="">
								<span class="required hide">*</span> ${text('userpw')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-5">
								<#form:input path="userpw" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="box-footer">
				<div class="row">
					<div class="col-sm-offset-2 col-sm-10">
						<% if (hasPermi('t:tadmin:edit')){ %>
							<button type="submit" class="btn btn-sm btn-primary" id="btnSubmit"><i class="fa fa-check"></i> ${text('保 存')}</button>&nbsp;
						<% } %>
						<button type="button" class="btn btn-sm btn-default" id="btnCancel" onclick="js.closeCurrentTabPage()"><i class="fa fa-reply-all"></i> ${text('关 闭')}</button>
					</div>
				</div>
			</div>
		</#form:form>
	</div>
</div>
<% } %>
<script>
$("#inputForm").validate({
	submitHandler: function(form){
		js.ajaxSubmitForm($(form), function(data){
			js.showMessage(data.message);
			if(data.result == Global.TRUE){
				js.closeCurrentTabPage(function(contentWindow){
					contentWindow.page();
				});
			}
		}, "json");
    }
});
</script>
2021-01-08 20:48:23.938 DEBUG 11236 [nio-8980-exec-1] [com.jeesite.modules.gen.utils.GenUtils ] - File Extents ==> C:\Users\Lx\work2\web\src\main\resources\views\modules\t\tadminForm.html
2021-01-08 20:48:23.942 DEBUG 11236 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:48:23.940  用时: 159毫秒  URI: /js/a/gen/genTable/save  总内存: 789.5MB  已用内存: 176.458MB
2021-01-08 20:48:23.949 DEBUG 11236 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:48:23.950 DEBUG 11236 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:48:23.950 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:48:23.952 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525559859798016(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:48:23.941(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=t_admin&comments=t_admin&className=Tadmin&functionAuthor=LX&parentTableName=&parentTableFkName=userid&remarks=&columnList[0].id=1347519563822243840&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=userid&columnList[0].comments=userid&columnList[0].columnType=int&columnList[0].attrType=Long&columnList[0].fullAttrName=userid&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=12/2/5&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['isNewLine']=1&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1347519563851603968&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=username&columnList[1].comments=username&columnList[1].columnType=varchar(55)&columnList[1].attrType=String&columnList[1].fullAttrName=username&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=12/2/5&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['isNewLine']=1&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[2].id=1347519563977433088&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=userpw&columnList[2].comments=userpw&columnList[2].columnType=varchar(50)&columnList[2].attrType=String&columnList[2].fullAttrName=userpw&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&columnList[2].isUpdate=1&!columnList[2].isList=&columnList[2].isList=1&!columnList[2].isQuery=&columnList[2].isQuery=1&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=12/2/5&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['isNewLine']=1&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&tplCategory=crud&packageName=com.jeesite.modules&moduleName=t&subModuleName=&functionName=t_admin&functionNameSimple=t_admin&genBaseDir=C:\Users\Lx\work2\web&!optionMap['isHaveDisableEnable']=&optionMap['isHaveDisableEnable']=0&!optionMap['isHaveDelete']=&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&!optionMap['isImageUpload']=&optionMap['isImageUpload']=0&!optionMap['isFileUpload']=&optionMap['isFileUpload']=0&!optionMap['isBpmForm']=&optionMap['isBpmForm']=0&optionMap['bpmFormKey']=&genFlag=2&!replaceFile=0(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 159(Long)
2021-01-08 20:48:23.958 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:48:23.998 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:48:23.996  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 20:48:24.003 DEBUG 11236 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 20:48:24.003 DEBUG 11236 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:48:24.016 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 20:48:24.018 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:48:24.022 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 20:48:24.038 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:48:24.042 DEBUG 11236 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 20:48:24.052 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:48:24.051  用时: 55毫秒  URI: /js/a/gen/genTable/listData  总内存: 789.5MB  已用内存: 179.099MB
2021-01-08 20:48:24.060 DEBUG 11236 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:48:24.061 DEBUG 11236 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:48:24.061 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:48:24.067 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525560325365760(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:48:24.052(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 55(Long)
2021-01-08 20:48:24.069 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:48:41.929 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:48:41.929  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 20:48:41.931 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:48:41.931 DEBUG 11236 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:48:41.937 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:48:41.939 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:48:41.940 DEBUG 11236 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:48:41.941 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:48:41.946 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:48:41.947 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:48:41.948 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:48:41.952 DEBUG 11236 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:48:41.956 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 20:48:41.957 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_admin(String), t_admin(String)
2021-01-08 20:48:41.959 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 20:48:41.966 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 20:48:41.967 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_admin(String)
2021-01-08 20:48:41.969 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 3
2021-01-08 20:48:41.975 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 20:48:41.975 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_admin(String)
2021-01-08 20:48:41.977 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 1
2021-01-08 20:48:41.982 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:48:41.982 DEBUG 11236 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will not be managed by Spring
2021-01-08 20:48:41.986 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:48:41.987 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 20:48:41.989 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 20:48:41.990 DEBUG 11236 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 20:48:41.990 DEBUG 11236 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will not be managed by Spring
2021-01-08 20:48:41.996 DEBUG 11236 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 20:48:41.996 DEBUG 11236 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 20:48:41.998 DEBUG 11236 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 4
2021-01-08 20:48:42.000 DEBUG 11236 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:48:42.006 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 20:48:42.007 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 20:48:42.008 DEBUG 11236 [nio-8980-exec-4] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 20:48:42.009 INFO  11236 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 20:48:42.021 DEBUG 11236 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:48:42.020  用时: 91毫秒  URI: /js/a/gen/genTable/form  总内存: 789.5MB  已用内存: 186.429MB
2021-01-08 20:48:42.025 DEBUG 11236 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:48:42.026 DEBUG 11236 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:48:42.026 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:48:42.027 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525635692814336(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:48:42.021(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=t_admin(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 91(Long)
2021-01-08 20:48:42.029 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:49:10.812 DEBUG 11236 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:49:10.811  URI: /js/a/gen/genTable/createMenu  IP: 127.0.0.1
2021-01-08 20:49:10.813 DEBUG 11236 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:49:10.814 DEBUG 11236 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:49:10.819 DEBUG 11236 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:49:10.820 DEBUG 11236 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:49:10.822 DEBUG 11236 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:49:10.823 DEBUG 11236 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:49:10.829 DEBUG 11236 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:49:10.829 DEBUG 11236 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:49:10.831 DEBUG 11236 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:49:10.835 INFO  11236 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: redirect:/a/sys/menu/form?menuName=t_admin&menuHref=/t/tadmin/list&permission=t:tadmin:view,t:tadmin:edit <<<<<<<<< /js/a/gen/genTable/createMenu >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#createMenu(GenTable, Model)
2021-01-08 20:49:10.839 DEBUG 11236 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:49:10.836  用时: 25毫秒  URI: /js/a/gen/genTable/createMenu  总内存: 789.5MB  已用内存: 188.885MB
2021-01-08 20:49:10.849 DEBUG 11236 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:49:10.849 DEBUG 11236 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:49:10.850 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:49:10.851 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525756551684096(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:49:10.836(Timestamp), /js/a/gen/genTable/createMenu(String), GET(String), tableName=t_admin(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 25(Long)
2021-01-08 20:49:10.852 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:49:10.856 DEBUG 11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:49:10.856  URI: /js/a/sys/menu/form  IP: 127.0.0.1
2021-01-08 20:49:10.863 DEBUG 11236 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} ORDER BY a.tree_sort DESC
2021-01-08 20:49:10.863 DEBUG 11236 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:49:10.869 DEBUG 11236 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? ORDER BY a.tree_sort DESC LIMIT 1
2021-01-08 20:49:10.869 DEBUG 11236 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String)
2021-01-08 20:49:10.871 DEBUG 11236 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 1
2021-01-08 20:49:10.873 DEBUG 11236 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2021-01-08 20:49:10.873 DEBUG 11236 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:49:10.878 DEBUG 11236 [nio-8980-exec-7] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2021-01-08 20:49:10.878 DEBUG 11236 [nio-8980-exec-7] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2021-01-08 20:49:10.881 DEBUG 11236 [nio-8980-exec-7] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2021-01-08 20:49:10.883 INFO  11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/menuForm <<<<<<<<< /js/a/sys/menu/form >>>>>>>>> com.jeesite.modules.sys.web.MenuController#form(Menu, Model)
2021-01-08 20:49:10.912 DEBUG 11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:49:10.909  用时: 53毫秒  URI: /js/a/sys/menu/form  总内存: 789.5MB  已用内存: 197.471MB
2021-01-08 20:49:10.914 DEBUG 11236 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:49:10.915 DEBUG 11236 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:49:10.915 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:49:10.916 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347525756870451200(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 20:49:10.912(Timestamp), /js/a/sys/menu/form(String), GET(String), menuName=t_admin&menuHref=/t/tadmin/list&permission=t:tadmin:view,t:tadmin:edit(String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 53(Long)
2021-01-08 20:49:10.917 DEBUG 11236 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:50:09.488 DEBUG 11236 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:50:09.489 DEBUG 11236 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:50:09.493 DEBUG 11236 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:50:09.494 DEBUG 11236 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 20:50:09.511 DEBUG 11236 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 73
2021-01-08 20:50:16.714 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:50:16.713  URI: /js/a/sys/menu/createNextNode  IP: 127.0.0.1
2021-01-08 20:50:16.718 DEBUG 11236 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} ORDER BY a.tree_sort DESC
2021-01-08 20:50:16.719 DEBUG 11236 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:50:16.724 DEBUG 11236 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? ORDER BY a.tree_sort DESC LIMIT 1
2021-01-08 20:50:16.725 DEBUG 11236 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String)
2021-01-08 20:50:16.726 DEBUG 11236 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 1
2021-01-08 20:50:16.740 DEBUG 11236 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:50:16.740  用时: 27毫秒  URI: /js/a/sys/menu/createNextNode  总内存: 789.5MB  已用内存: 206.673MB
2021-01-08 20:50:16.745 DEBUG 11236 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:50:16.746 DEBUG 11236 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:50:16.747 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:50:16.747 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347526032973094912(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 20:50:16.74(Timestamp), /js/a/sys/menu/createNextNode(String), GET(String), parentCode=(String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 27(Long)
2021-01-08 20:50:16.749 DEBUG 11236 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:50:18.851 DEBUG 11236 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:50:18.851 DEBUG 11236 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:50:18.857 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:50:18.857 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 20:50:18.871 DEBUG 11236 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 73
2021-01-08 20:50:20.790 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:50:20.790  URI: /js/a/sys/menu/createNextNode  IP: 127.0.0.1
2021-01-08 20:50:20.793 DEBUG 11236 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} ORDER BY a.tree_sort DESC
2021-01-08 20:50:20.793 DEBUG 11236 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:50:20.797 DEBUG 11236 [nio-8980-exec-9] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? ORDER BY a.tree_sort DESC LIMIT 1
2021-01-08 20:50:20.797 DEBUG 11236 [nio-8980-exec-9] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String)
2021-01-08 20:50:20.799 DEBUG 11236 [nio-8980-exec-9] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 1
2021-01-08 20:50:20.804 DEBUG 11236 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:50:20.803  用时: 13毫秒  URI: /js/a/sys/menu/createNextNode  总内存: 789.5MB  已用内存: 212.421MB
2021-01-08 20:50:20.811 DEBUG 11236 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:50:20.811 DEBUG 11236 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:50:20.812 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:50:20.812 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347526050014552064(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 20:50:20.803(Timestamp), /js/a/sys/menu/createNextNode(String), GET(String), parentCode=(String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 13(Long)
2021-01-08 20:50:20.813 DEBUG 11236 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:50:34.379 DEBUG 11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:50:34.379  URI: /js/a/sys/menu/save  IP: 127.0.0.1
2021-01-08 20:50:34.477 DEBUG 11236 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`menu_code` = #{menuCode}
2021-01-08 20:50:34.478 DEBUG 11236 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:50:34.484 DEBUG 11236 [nio-8980-exec-7] [com.jeesite.modules.sys.dao.MenuDao.get] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`menu_code` = ?
2021-01-08 20:50:34.485 DEBUG 11236 [nio-8980-exec-7] [com.jeesite.modules.sys.dao.MenuDao.get] - ==> Parameters: (String)
2021-01-08 20:50:34.486 DEBUG 11236 [nio-8980-exec-7] [com.jeesite.modules.sys.dao.MenuDao.get] - <==      Total: 0
2021-01-08 20:50:34.489 DEBUG 11236 [nio-8980-exec-7] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_menu` (`status`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`, `parent_code`, `parent_codes`, `tree_sort`, `tree_sorts`, `tree_leaf`, `tree_level`, `tree_names`, `menu_code`, `menu_name`, `menu_type`, `menu_href`, `menu_target`, `menu_icon`, `menu_color`, `menu_title`, `permission`, `weight`, `is_show`, `sys_code`, `module_codes`, `extend_s1`, `extend_s2`, `extend_s3`, `extend_s4`, `extend_s5`, `extend_s6`, `extend_s7`, `extend_s8`) VALUES (#{status}, #{createBy}, #{createDate}, #{updateBy}, #{updateDate}, #{remarks}, #{parentCode}, #{parentCodes}, #{treeSort}, #{treeSorts}, #{treeLeaf}, #{treeLevel}, #{treeNames}, #{menuCode}, #{menuNameOrig}, #{menuType}, #{menuHref}, #{menuTarget}, #{menuIcon}, #{menuColor}, #{menuTitle}, #{permission}, #{weight}, #{isShow}, #{sysCode}, #{moduleCodes}, #{extend.extendS1}, #{extend.extendS2}, #{extend.extendS3}, #{extend.extendS4}, #{extend.extendS5}, #{extend.extendS6}, #{extend.extendS7}, #{extend.extendS8})
2021-01-08 20:50:34.490 DEBUG 11236 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.insert     ] - ==>  Preparing: INSERT INTO `js_sys_menu` (`status`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`, `parent_code`, `parent_codes`, `tree_sort`, `tree_sorts`, `tree_leaf`, `tree_level`, `tree_names`, `menu_code`, `menu_name`, `menu_type`, `menu_href`, `menu_target`, `menu_icon`, `menu_color`, `menu_title`, `permission`, `weight`, `is_show`, `sys_code`, `module_codes`, `extend_s1`, `extend_s2`, `extend_s3`, `extend_s4`, `extend_s5`, `extend_s6`, `extend_s7`, `extend_s8`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:50:34.491 DEBUG 11236 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.insert     ] - ==> Parameters: 0(String), system(String), 2021-01-08 20:50:34.488(Timestamp), system(String), 2021-01-08 20:50:34.488(Timestamp), (String), 0(String), 0,(String), 9040(Integer), 0000009040,(String), 1(String), 0(Integer), 管理用户(String), 1347526107413602304(String), 管理用户(String), 1(String), /t/tadmin/list(String), (String), icon-user(String), (String), (String), t:tadmin:view,t:tadmin:edit(String), 60(Integer), 1(String), default(String), oauth2(String), (String), (String), (String), (String), (String), (String), (String), (String)
2021-01-08 20:50:34.493 DEBUG 11236 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.insert     ] - <==    Updates: 1
2021-01-08 20:50:34.505 INFO  11236 [nio-8980-exec-7] [com.jeesite.common.cache.CacheUtils    ] - removeByKeyPrefix: userCache_system => [menuList_default_null_0__tree, menuList_default_null_0_]
2021-01-08 20:50:34.517 DEBUG 11236 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:50:34.516  用时: 137毫秒  URI: /js/a/sys/menu/save  总内存: 789.5MB  已用内存: 222.884MB
2021-01-08 20:50:34.521 DEBUG 11236 [  log-save-10-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:50:34.522 DEBUG 11236 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:50:34.522 DEBUG 11236 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:50:34.523 DEBUG 11236 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 20:50:34.532 DEBUG 11236 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 20:50:34.534 DEBUG 11236 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:50:34.552 DEBUG 11236 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:50:34.552 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:50:34.553 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347526107535237120(String), update(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 20:50:34.517(Timestamp), /js/a/sys/menu/save(String), POST(String), sysCode=default&menuCode=&parent.menuNameOrig=&parent.id=&!menuType=&menuType=1&menuNameOrig=管理用户&!moduleCodes=&moduleCodes=oauth2&menuHref=/t/tadmin/list&menuTarget=&treeSort=9040&permission=t:tadmin:view,t:tadmin:edit&menuIcon=icon-user&menuColor=&menuTitle=&!isShow=&isShow=1&weight=60&remarks=&extend.extendS1=&extend.extendS2=&extend.extendS3=&extend.extendS4=&extend.extendS5=&extend.extendS6=&extend.extendS7=&extend.extendS8=&extend.extendI1=&extend.extendI2=&extend.extendI3=&extend.extendI4=&extend.extendF1=&extend.extendF2=&extend.extendF3=&extend.extendF4=&extend.extendD1=&extend.extendD2=&extend.extendD3=&extend.extendD4=(String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 137(Long)
2021-01-08 20:50:34.554 DEBUG 11236 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:50:34.564 DEBUG 11236 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:50:34.564  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 20:50:34.571 DEBUG 11236 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:50:34.572 DEBUG 11236 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:50:34.577 DEBUG 11236 [nio-8980-exec-6] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:50:34.578 DEBUG 11236 [nio-8980-exec-6] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2021-01-08 20:50:34.589 DEBUG 11236 [nio-8980-exec-6] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 20:50:34.592 DEBUG 11236 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 20:50:34.598 DEBUG 11236 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:50:34.608 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 20:50:34.608 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:50:34.611 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 20:50:34.614 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:50:34.617 DEBUG 11236 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 20:50:34.624 DEBUG 11236 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:50:34.623  用时: 59毫秒  URI: /js/a/gen/genTable/listData  总内存: 789.5MB  已用内存: 229.068MB
2021-01-08 20:50:34.628 DEBUG 11236 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:50:34.629 DEBUG 11236 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f80fb7e] will be managed by Spring
2021-01-08 20:50:34.629 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:50:34.630 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347526107984027648(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:50:34.624(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 59(Long)
2021-01-08 20:50:34.632 DEBUG 11236 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:51:01.303 INFO  5440 [           main] [com.jeesite.modules.Application        ] - Starting Application on DESKTOP-0IUV8EB with PID 5440 (C:\Users\Lx\work2\web\src\main\webapp\WEB-INF\classes started by Lx in C:\Users\Lx\work2\web)
2021-01-08 20:51:01.310 DEBUG 5440 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2021-01-08 20:51:01.310 INFO  5440 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2021-01-08 20:51:06.421 INFO  5440 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2021-01-08 20:51:06.423 INFO  5440 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2021-01-08 20:51:08.604 INFO  5440 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/Lx
2021-01-08 20:51:08.607 INFO  5440 [           main] [com.jeesite.common.config.Global       ] - user.dir: C:/Users/Lx/work2/web
2021-01-08 20:51:08.608 INFO  5440 [           main] [com.jeesite.common.config.Global       ] - logPath: C:/Users/Lx/work2/web/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.2 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：adfb80499b32e1492729a84d62f8cd98
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2021-01-08 20:51:08.612 WARN  5440 [           main] [com.jeesite.common.config.Global       ] - 

===================================================================

    类型: mysql
    驱动: com.mysql.cj.jdbc.Driver
    地址: jdbc:mysql://127.0.0.1:3306/jeesite?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    用户: root

===================================================================

注意：以上信息是初始化数据库的连接信息，请认真对照。

本操作主要用于首次安装 JeeSite 或后安装 Module 的数据表初始化，若模块已安装会自动忽略。
在 v4.2 版本以后，官方初始化数据库是比较安全的，官方代码中不会包含任何删除数据表及数据的脚本。

如果你是升级到 v4.2 的版本，无法排除你是否升级完整，为安全期间，还是建议先备份数据库后再操作。

系统为您提供 20 秒的考虑时间，若不初始化数据库，请停止服务启动......

2021-01-08 20:51:29.710 DEBUG 5440 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2021-01-08 20:51:30.627 INFO  5440 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2021-01-08 20:51:32.998 INFO  5440 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2021-01-08 20:51:38.662 INFO  5440 [           main] [com.jeesite.modules.sys.db.InitCoreData] - ===== InitData Started ============
2021-01-08 20:51:38.783 DEBUG 5440 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3c7f8c25] will not be managed by Spring
2021-01-08 20:51:39.407 DEBUG 5440 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 20:51:39.435 DEBUG 5440 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 20:51:39.464 DEBUG 5440 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 20:51:39.468 INFO  5440 [           main] [com.jeesite.modules.sys.db.InitCoreData] - ===== InitData Completed ========== 耗时：805毫秒
2021-01-08 20:51:39.468 INFO  5440 [           main] [c.jeesite.modules.test.db.InitTestData ] - ===== InitData Started ============
2021-01-08 20:51:39.468 INFO  5440 [           main] [c.jeesite.modules.test.db.InitTestData ] - ===== InitData Completed ========== 耗时：0毫秒
2021-01-08 20:51:39.518 DEBUG 5440 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2021-01-08 20:51:39.520 DEBUG 5440 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3c7f8c25] will be managed by Spring
2021-01-08 20:51:39.520 DEBUG 5440 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2021-01-08 20:51:39.522 DEBUG 5440 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2021-01-08 20:51:39.531 DEBUG 5440 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2021-01-08 20:51:39.587 INFO  5440 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2021-01-08 20:51:41.458 INFO  5440 [           main] [com.jeesite.modules.Application        ] - Started Application in 41.92 seconds (JVM running for 43.302)
2021-01-08 20:52:21.419 DEBUG 5440 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 6毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = #{userCode}
2021-01-08 20:52:21.427 DEBUG 5440 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3c7f8c25] will be managed by Spring
2021-01-08 20:52:21.438 DEBUG 5440 [nio-8980-exec-4] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = ?
2021-01-08 20:52:21.440 DEBUG 5440 [nio-8980-exec-4] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2021-01-08 20:52:21.456 DEBUG 5440 [nio-8980-exec-4] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2021-01-08 20:52:21.763 DEBUG 5440 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2021-01-08 20:52:21.763 DEBUG 5440 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3c7f8c25] will be managed by Spring
2021-01-08 20:52:21.775 DEBUG 5440 [nio-8980-exec-4] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2021-01-08 20:52:21.780 DEBUG 5440 [nio-8980-exec-4] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2021-01-08 20:52:21.806 DEBUG 5440 [nio-8980-exec-4] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2021-01-08 20:52:21.859 DEBUG 5440 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 18毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:52:21.864 DEBUG 5440 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3c7f8c25] will be managed by Spring
2021-01-08 20:52:21.875 DEBUG 5440 [nio-8980-exec-4] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:52:21.880 DEBUG 5440 [nio-8980-exec-4] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2021-01-08 20:52:22.030 DEBUG 5440 [nio-8980-exec-4] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 20:52:23.520 DEBUG 5440 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:52:23.527 DEBUG 5440 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3c7f8c25] will be managed by Spring
2021-01-08 20:52:23.537 DEBUG 5440 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:52:23.540 DEBUG 5440 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_sys_code(String), 1(String), 0(String)
2021-01-08 20:52:23.557 DEBUG 5440 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2021-01-08 20:52:27.573 DEBUG 5440 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:52:27.567  URI: /js/a/t/tadmin/list  IP: 127.0.0.1
2021-01-08 20:52:27.641 INFO  5440 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/t/tadminList <<<<<<<<< /js/a/t/tadmin/list >>>>>>>>> com.jeesite.modules.t.web.TadminController#list(Tadmin, Model)
2021-01-08 20:52:27.976 DEBUG 5440 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:52:27.759  用时: 192毫秒  URI: /js/a/t/tadmin/list  总内存: 597.5MB  已用内存: 220.878MB
2021-01-08 20:52:27.995 DEBUG 5440 [  log-save-10-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:52:27.997 DEBUG 5440 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3c7f8c25] will be managed by Spring
2021-01-08 20:52:27.997 DEBUG 5440 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:52:28.002 DEBUG 5440 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 20:52:28.025 DEBUG 5440 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 20:52:28.046 DEBUG 5440 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:52:28.054 DEBUG 5440 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3c7f8c25] will be managed by Spring
2021-01-08 20:52:28.056 DEBUG 5440 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:52:28.069 DEBUG 5440 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347526583362834432(String), access(String), 管理用户(String), system(String), 超级管理员(String), 2021-01-08 20:52:27.963(Timestamp), /js/a/t/tadmin/list(String), GET(String), (String), (String), Tadmin(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 192(Long)
2021-01-08 20:52:28.071 DEBUG 5440 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:52:28.135 DEBUG 5440 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:52:28.134  URI: /js/a/t/tadmin/listData  IP: 127.0.0.1
2021-01-08 20:52:28.247 DEBUG 5440 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:52:28.163  用时: 29毫秒  URI: /js/a/t/tadmin/listData  总内存: 597.5MB  已用内存: 229.483MB
2021-01-08 20:52:28.279 DEBUG 5440 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:52:28.279 ERROR 5440 [nio-8980-exec-8] [o.a.c.c.C.[.[.[/js].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [/js] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause

java.lang.NullPointerException: null
	at com.jeesite.modules.t.web.TadminController.listData(TadminController.java:62)
	at com.jeesite.modules.t.web.TadminController$$FastClassBySpringCGLIB$$b5e561c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.t.web.TadminController$$EnhancerBySpringCGLIB$$22aaed37.listData(<generated>)
	at com.jeesite.modules.t.web.TadminController$$FastClassBySpringCGLIB$$b5e561c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.t.web.TadminController$$EnhancerBySpringCGLIB$$a09e32bd.listData(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)

2021-01-08 20:52:28.280 DEBUG 5440 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3c7f8c25] will be managed by Spring
2021-01-08 20:52:28.308 DEBUG 5440 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:52:28.327 DEBUG 5440 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347526584549822464(String), access(String), 管理用户(String), system(String), 超级管理员(String), 2021-01-08 20:52:28.246(Timestamp), /js/a/t/tadmin/listData(String), POST(String), username=&userpw=&pageNo=&pageSize=&orderBy=(String), (String), Tadmin(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 1(String), java.lang.NullPointerException
	at com.jeesite.modules.t.web.TadminController.listData(TadminController.java:62)
	at com.jeesite.modules.t.web.TadminController$$FastClassBySpringCGLIB$$b5e561c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.t.web.TadminController$$EnhancerBySpringCGLIB$$22aaed37.listData(<generated>)
	at com.jeesite.modules.t.web.TadminController$$FastClassBySpringCGLIB$$b5e561c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.t.web.TadminController$$EnhancerBySpringCGLIB$$a09e32bd.listData(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 29(Long)
2021-01-08 20:52:28.339 DEBUG 5440 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:52:28.463 ERROR 5440 [nio-8980-exec-8] [error/500                              ] - 

java.lang.NullPointerException: null
	at com.jeesite.modules.t.web.TadminController.listData(TadminController.java:62)
	at com.jeesite.modules.t.web.TadminController$$FastClassBySpringCGLIB$$b5e561c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.t.web.TadminController$$EnhancerBySpringCGLIB$$22aaed37.listData(<generated>)
	at com.jeesite.modules.t.web.TadminController$$FastClassBySpringCGLIB$$b5e561c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.t.web.TadminController$$EnhancerBySpringCGLIB$$a09e32bd.listData(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)

2021-01-08 20:52:34.839 DEBUG 5440 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 9毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:52:34.842 DEBUG 5440 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3c7f8c25] will be managed by Spring
2021-01-08 20:52:34.861 DEBUG 5440 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:52:34.864 DEBUG 5440 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), msg_inner_content_level(String), 1(String), 0(String)
2021-01-08 20:52:34.873 DEBUG 5440 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 3
2021-01-08 20:52:34.894 DEBUG 5440 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:52:34.895 DEBUG 5440 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3c7f8c25] will be managed by Spring
2021-01-08 20:52:34.905 DEBUG 5440 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:52:34.906 DEBUG 5440 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), msg_inner_content_type(String), 1(String), 0(String)
2021-01-08 20:52:34.923 DEBUG 5440 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 4
2021-01-08 20:52:34.932 DEBUG 5440 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:52:34.933 DEBUG 5440 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3c7f8c25] will be managed by Spring
2021-01-08 20:52:34.937 DEBUG 5440 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:52:34.938 DEBUG 5440 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), msg_inner_msg_status(String), 1(String), 0(String)
2021-01-08 20:52:34.941 DEBUG 5440 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 5
2021-01-08 20:52:35.309 DEBUG 5440 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3c7f8c25] will be managed by Spring
2021-01-08 20:52:35.473 DEBUG 5440 [nio-8980-exec-7] [c.j.m.msg.dao.MsgInnerDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_sys_msg_inner` a LEFT JOIN js_sys_msg_inner_record r ON r.msg_inner_id = a.id AND r.receive_user_code = ? WHERE a.`status` != ? AND ((a.status = ? AND r.receive_user_code = ?) OR a.create_by = ?)
2021-01-08 20:52:35.474 DEBUG 5440 [nio-8980-exec-7] [c.j.m.msg.dao.MsgInnerDao.findList     ] - ==> Parameters: system(String), 1(String), 0(String), system(String), system(String)
2021-01-08 20:52:35.479 DEBUG 5440 [nio-8980-exec-7] [c.j.m.msg.dao.MsgInnerDao.findList     ] - ==>  Preparing: SELECT a.`id` AS "id", a.`msg_title` AS "msgTitle", a.`content_level` AS "contentLevel", a.`content_type` AS "contentType", a.`msg_content` AS "msgContent", a.`receive_type` AS "receiveType", a.`receive_codes` AS "receiveCodes", a.`receive_names` AS "receiveNames", a.`send_user_code` AS "sendUserCode", a.`send_user_name` AS "sendUserName", a.`send_date` AS "sendDate", a.`is_attac` AS "isAttac", a.`notify_types` AS "notifyTypes", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" , r.read_status AS "record.readStatus", r.read_date AS "record.readDate", r.is_star AS "record.isStar" FROM `js_sys_msg_inner` a LEFT JOIN js_sys_msg_inner_record r ON r.msg_inner_id = a.id AND r.receive_user_code = ? WHERE a.`status` != ? AND ((a.status = ? AND r.receive_user_code = ?) OR a.create_by = ?) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 20:52:35.480 DEBUG 5440 [nio-8980-exec-7] [c.j.m.msg.dao.MsgInnerDao.findList     ] - ==> Parameters: system(String), 1(String), 0(String), system(String), system(String)
2021-01-08 20:52:35.486 DEBUG 5440 [nio-8980-exec-7] [c.j.m.msg.dao.MsgInnerDao.findList     ] - <==      Total: 0
2021-01-08 20:52:41.825 DEBUG 5440 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:52:41.824  URI: /js/a/t/tadmin/list  IP: 127.0.0.1
2021-01-08 20:52:41.829 INFO  5440 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/t/tadminList <<<<<<<<< /js/a/t/tadmin/list >>>>>>>>> com.jeesite.modules.t.web.TadminController#list(Tadmin, Model)
2021-01-08 20:52:41.891 DEBUG 5440 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:52:41.838  用时: 14毫秒  URI: /js/a/t/tadmin/list  总内存: 597.5MB  已用内存: 308.534MB
2021-01-08 20:52:41.916 DEBUG 5440 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 4毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:52:41.918 DEBUG 5440 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3c7f8c25] will be managed by Spring
2021-01-08 20:52:41.919 DEBUG 5440 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:52:41.921 DEBUG 5440 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347526641776906240(String), access(String), 管理用户(String), system(String), 超级管理员(String), 2021-01-08 20:52:41.89(Timestamp), /js/a/t/tadmin/list(String), GET(String), (String), (String), Tadmin(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 14(Long)
2021-01-08 20:52:41.922 DEBUG 5440 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:52:42.043 DEBUG 5440 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:52:42.043  URI: /js/a/t/tadmin/listData  IP: 127.0.0.1
2021-01-08 20:52:42.095 DEBUG 5440 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:52:42.057  用时: 14毫秒  URI: /js/a/t/tadmin/listData  总内存: 597.5MB  已用内存: 310.597MB
2021-01-08 20:52:42.099 ERROR 5440 [nio-8980-exec-5] [o.a.c.c.C.[.[.[/js].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [/js] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause

java.lang.NullPointerException: null
	at com.jeesite.modules.t.web.TadminController.listData(TadminController.java:62)
	at com.jeesite.modules.t.web.TadminController$$FastClassBySpringCGLIB$$b5e561c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.t.web.TadminController$$EnhancerBySpringCGLIB$$22aaed37.listData(<generated>)
	at com.jeesite.modules.t.web.TadminController$$FastClassBySpringCGLIB$$b5e561c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.t.web.TadminController$$EnhancerBySpringCGLIB$$a09e32bd.listData(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)

2021-01-08 20:52:42.105 ERROR 5440 [nio-8980-exec-5] [error/500                              ] - 

java.lang.NullPointerException: null
	at com.jeesite.modules.t.web.TadminController.listData(TadminController.java:62)
	at com.jeesite.modules.t.web.TadminController$$FastClassBySpringCGLIB$$b5e561c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.t.web.TadminController$$EnhancerBySpringCGLIB$$22aaed37.listData(<generated>)
	at com.jeesite.modules.t.web.TadminController$$FastClassBySpringCGLIB$$b5e561c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.t.web.TadminController$$EnhancerBySpringCGLIB$$a09e32bd.listData(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)

2021-01-08 20:52:42.109 DEBUG 5440 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:52:42.109 DEBUG 5440 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3c7f8c25] will be managed by Spring
2021-01-08 20:52:42.110 DEBUG 5440 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:52:42.114 DEBUG 5440 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347526642636738560(String), access(String), 管理用户(String), system(String), 超级管理员(String), 2021-01-08 20:52:42.095(Timestamp), /js/a/t/tadmin/listData(String), POST(String), username=&userpw=&pageNo=&pageSize=&orderBy=(String), (String), Tadmin(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 1(String), java.lang.NullPointerException
	at com.jeesite.modules.t.web.TadminController.listData(TadminController.java:62)
	at com.jeesite.modules.t.web.TadminController$$FastClassBySpringCGLIB$$b5e561c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.t.web.TadminController$$EnhancerBySpringCGLIB$$22aaed37.listData(<generated>)
	at com.jeesite.modules.t.web.TadminController$$FastClassBySpringCGLIB$$b5e561c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.t.web.TadminController$$EnhancerBySpringCGLIB$$a09e32bd.listData(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 14(Long)
2021-01-08 20:52:42.118 DEBUG 5440 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:54:17.140 INFO  26564 [           main] [com.jeesite.modules.Application        ] - Starting Application on DESKTOP-0IUV8EB with PID 26564 (C:\Users\Lx\work2\web\src\main\webapp\WEB-INF\classes started by Lx in C:\Users\Lx\work2\web)
2021-01-08 20:54:17.150 DEBUG 26564 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2021-01-08 20:54:17.150 INFO  26564 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2021-01-08 20:54:21.496 INFO  26564 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2021-01-08 20:54:21.498 INFO  26564 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2021-01-08 20:54:23.953 INFO  26564 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/Lx
2021-01-08 20:54:23.955 INFO  26564 [           main] [com.jeesite.common.config.Global       ] - user.dir: C:/Users/Lx/work2/web
2021-01-08 20:54:23.956 INFO  26564 [           main] [com.jeesite.common.config.Global       ] - logPath: C:/Users/Lx/work2/web/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.2 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：adfb80499b32e1492729a84d62f8cd98
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2021-01-08 20:54:23.976 WARN  26564 [           main] [com.jeesite.common.config.Global       ] - 

===================================================================

    类型: mysql
    驱动: com.mysql.cj.jdbc.Driver
    地址: jdbc:mysql://127.0.0.1:3306/jeesite?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    用户: root

===================================================================

注意：以上信息是初始化数据库的连接信息，请认真对照。

本操作主要用于首次安装 JeeSite 或后安装 Module 的数据表初始化，若模块已安装会自动忽略。
在 v4.2 版本以后，官方初始化数据库是比较安全的，官方代码中不会包含任何删除数据表及数据的脚本。

如果你是升级到 v4.2 的版本，无法排除你是否升级完整，为安全期间，还是建议先备份数据库后再操作。

系统为您提供 20 秒的考虑时间，若不初始化数据库，请停止服务启动......

2021-01-08 20:54:45.474 DEBUG 26564 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2021-01-08 20:54:46.448 INFO  26564 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2021-01-08 20:54:48.740 INFO  26564 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2021-01-08 20:54:55.217 INFO  26564 [           main] [com.jeesite.modules.sys.db.InitCoreData] - ===== InitData Started ============
2021-01-08 20:54:55.313 DEBUG 26564 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will not be managed by Spring
2021-01-08 20:54:55.932 DEBUG 26564 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 20:54:55.965 DEBUG 26564 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 20:54:56.000 DEBUG 26564 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 20:54:56.005 INFO  26564 [           main] [com.jeesite.modules.sys.db.InitCoreData] - ===== InitData Completed ========== 耗时：788毫秒
2021-01-08 20:54:56.006 INFO  26564 [           main] [c.jeesite.modules.test.db.InitTestData ] - ===== InitData Started ============
2021-01-08 20:54:56.007 INFO  26564 [           main] [c.jeesite.modules.test.db.InitTestData ] - ===== InitData Completed ========== 耗时：1毫秒
2021-01-08 20:54:56.063 DEBUG 26564 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 6毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2021-01-08 20:54:56.068 DEBUG 26564 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:54:56.069 DEBUG 26564 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2021-01-08 20:54:56.073 DEBUG 26564 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2021-01-08 20:54:56.086 DEBUG 26564 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2021-01-08 20:54:56.216 INFO  26564 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2021-01-08 20:54:58.578 INFO  26564 [           main] [com.jeesite.modules.Application        ] - Started Application in 43.144 seconds (JVM running for 45.081)
2021-01-08 20:55:11.891 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = #{userCode}
2021-01-08 20:55:11.895 DEBUG 26564 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:55:11.902 DEBUG 26564 [nio-8980-exec-1] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = ?
2021-01-08 20:55:11.903 DEBUG 26564 [nio-8980-exec-1] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2021-01-08 20:55:11.926 DEBUG 26564 [nio-8980-exec-1] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2021-01-08 20:55:12.247 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 6毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2021-01-08 20:55:12.248 DEBUG 26564 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:55:12.266 DEBUG 26564 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2021-01-08 20:55:12.274 DEBUG 26564 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2021-01-08 20:55:12.508 DEBUG 26564 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2021-01-08 20:55:12.607 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 14毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:55:12.620 DEBUG 26564 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:55:12.624 DEBUG 26564 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:55:12.628 DEBUG 26564 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2021-01-08 20:55:12.690 DEBUG 26564 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 20:55:14.188 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:55:14.195 DEBUG 26564 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:55:14.207 DEBUG 26564 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:55:14.217 DEBUG 26564 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_sys_code(String), 1(String), 0(String)
2021-01-08 20:55:14.224 DEBUG 26564 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2021-01-08 20:55:15.390 DEBUG 26564 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:55:15.387  URI: /js/a/t/tadmin/list  IP: 127.0.0.1
2021-01-08 20:55:15.491 INFO  26564 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/t/tadminList <<<<<<<<< /js/a/t/tadmin/list >>>>>>>>> com.jeesite.modules.t.web.TadminController#list(Tadmin, Model)
2021-01-08 20:55:16.074 DEBUG 26564 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:55:15.873  用时: 486毫秒  URI: /js/a/t/tadmin/list  总内存: 617MB  已用内存: 218.332MB
2021-01-08 20:55:16.113 DEBUG 26564 [  log-save-10-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:55:16.114 DEBUG 26564 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:55:16.115 DEBUG 26564 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 20:55:16.117 DEBUG 26564 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 20:55:16.144 DEBUG 26564 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 20:55:16.163 DEBUG 26564 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:55:16.165 DEBUG 26564 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:55:16.166 DEBUG 26564 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:55:16.171 DEBUG 26564 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347527288434700288(String), access(String), 管理用户(String), system(String), 超级管理员(String), 2021-01-08 20:55:16.066(Timestamp), /js/a/t/tadmin/list(String), GET(String), (String), (String), Tadmin(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 486(Long)
2021-01-08 20:55:16.176 DEBUG 26564 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:55:16.951 DEBUG 26564 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:55:16.951  URI: /js/a/t/tadmin/listData  IP: 127.0.0.1
2021-01-08 20:55:16.999 DEBUG 26564 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:55:16.958  用时: 7毫秒  URI: /js/a/t/tadmin/listData  总内存: 617MB  已用内存: 228.425MB
2021-01-08 20:55:17.007 ERROR 26564 [nio-8980-exec-3] [o.a.c.c.C.[.[.[/js].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [/js] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause

java.lang.NullPointerException: null
	at com.jeesite.modules.t.web.TadminController.listData(TadminController.java:62)
	at com.jeesite.modules.t.web.TadminController$$FastClassBySpringCGLIB$$b5e561c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.t.web.TadminController$$EnhancerBySpringCGLIB$$d0bb99f1.listData(<generated>)
	at com.jeesite.modules.t.web.TadminController$$FastClassBySpringCGLIB$$b5e561c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.t.web.TadminController$$EnhancerBySpringCGLIB$$4eaedf77.listData(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)

2021-01-08 20:55:17.016 DEBUG 26564 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 3毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:55:17.017 DEBUG 26564 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:55:17.018 DEBUG 26564 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:55:17.020 DEBUG 26564 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347527292343791616(String), access(String), 管理用户(String), system(String), 超级管理员(String), 2021-01-08 20:55:16.998(Timestamp), /js/a/t/tadmin/listData(String), POST(String), username=&userpw=&pageNo=&pageSize=&orderBy=(String), (String), Tadmin(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 1(String), java.lang.NullPointerException
	at com.jeesite.modules.t.web.TadminController.listData(TadminController.java:62)
	at com.jeesite.modules.t.web.TadminController$$FastClassBySpringCGLIB$$b5e561c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.t.web.TadminController$$EnhancerBySpringCGLIB$$d0bb99f1.listData(<generated>)
	at com.jeesite.modules.t.web.TadminController$$FastClassBySpringCGLIB$$b5e561c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.t.web.TadminController$$EnhancerBySpringCGLIB$$4eaedf77.listData(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 7(Long)
2021-01-08 20:55:17.071 DEBUG 26564 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:55:17.270 ERROR 26564 [nio-8980-exec-3] [error/500                              ] - 

java.lang.NullPointerException: null
	at com.jeesite.modules.t.web.TadminController.listData(TadminController.java:62)
	at com.jeesite.modules.t.web.TadminController$$FastClassBySpringCGLIB$$b5e561c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.t.web.TadminController$$EnhancerBySpringCGLIB$$d0bb99f1.listData(<generated>)
	at com.jeesite.modules.t.web.TadminController$$FastClassBySpringCGLIB$$b5e561c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.t.web.TadminController$$EnhancerBySpringCGLIB$$4eaedf77.listData(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)

2021-01-08 20:55:56.631 DEBUG 26564 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:55:56.630  URI: /js/a/t/tadmin/form  IP: 127.0.0.1
2021-01-08 20:55:56.636 INFO  26564 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/t/tadminForm <<<<<<<<< /js/a/t/tadmin/form >>>>>>>>> com.jeesite.modules.t.web.TadminController#form(Tadmin, Model)
2021-01-08 20:55:56.709 DEBUG 26564 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:55:56.661  用时: 31毫秒  URI: /js/a/t/tadmin/form  总内存: 617MB  已用内存: 252.653MB
2021-01-08 20:55:56.710 ERROR 26564 [nio-8980-exec-6] [o.a.c.c.C.[.[.[/js].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [/js] threw exception [Request processing failed; nested exception is 
>>08:55:56:表达式值为空(NULL):tadmin.isNewRecord 位于6行 资源:/modules/t/tadminForm.html
空指针
3|	<div class="box box-main">
4|		<div class="box-header with-border">
5|			<div class="box-title">
6|				<i class="fa icon-note"></i> ${text(tadmin.isNewRecord ? '新增t_admin' : '编辑t_admin')}
7|			</div>
8|			<div class="box-tools pull-right">
9|				<button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
] with root cause

org.beetl.core.exception.BeetlException: 空指针
	at org.beetl.core.statement.optimal.VarRefOptimal.evaluate(VarRefOptimal.java:62)
	at org.beetl.core.statement.TernaryExpression.evaluate(TernaryExpression.java:56)
	at org.beetl.core.statement.FunctionExpression.evaluate(FunctionExpression.java:79)
	at org.beetl.core.statement.PlaceholderST.execute(PlaceholderST.java:30)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.tag.Tag.doBodyRender(Tag.java:73)
	at org.beetl.core.tag.Tag.getBodyContent(Tag.java:85)
	at org.beetl.ext.tag.LayoutTag.render(LayoutTag.java:98)
	at org.beetl.core.statement.TagStatement.runTag(TagStatement.java:95)
	at org.beetl.core.statement.TagStatement.execute(TagStatement.java:78)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.ext.web.WebRender.render(WebRender.java:129)
	at org.beetl.ext.spring.BeetlSpringView.renderMergedTemplateModel(BeetlSpringView.java:123)
	at com.jeesite.common.shiro.realms.RE.final(iga:49)
	at com.jeesite.common.shiro.realms.RE.renderMergedTemplateModel(iga:146)
	at org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:179)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)

2021-01-08 20:55:56.728 ERROR 26564 [nio-8980-exec-6] [error/500                              ] - 

org.beetl.core.exception.BeetlException: NULL
	at com.jeesite.common.beetl.handler.LoggerErrorHandler.final(dda:172)
	at com.jeesite.common.beetl.handler.LoggerErrorHandler.processExcption(dda:216)
	at org.beetl.core.Template.renderTo(Template.java:180)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.ext.web.WebRender.render(WebRender.java:129)
	at org.beetl.ext.spring.BeetlSpringView.renderMergedTemplateModel(BeetlSpringView.java:123)
	at com.jeesite.common.shiro.realms.RE.final(iga:49)
	at com.jeesite.common.shiro.realms.RE.renderMergedTemplateModel(iga:146)
	at org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:179)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.beetl.core.exception.BeetlException: 空指针
	at org.beetl.core.statement.optimal.VarRefOptimal.evaluate(VarRefOptimal.java:62)
	at org.beetl.core.statement.TernaryExpression.evaluate(TernaryExpression.java:56)
	at org.beetl.core.statement.FunctionExpression.evaluate(FunctionExpression.java:79)
	at org.beetl.core.statement.PlaceholderST.execute(PlaceholderST.java:30)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.tag.Tag.doBodyRender(Tag.java:73)
	at org.beetl.core.tag.Tag.getBodyContent(Tag.java:85)
	at org.beetl.ext.tag.LayoutTag.render(LayoutTag.java:98)
	at org.beetl.core.statement.TagStatement.runTag(TagStatement.java:95)
	at org.beetl.core.statement.TagStatement.execute(TagStatement.java:78)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	... 64 common frames omitted

2021-01-08 20:55:56.755 DEBUG 26564 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:55:56.756 DEBUG 26564 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:55:56.758 DEBUG 26564 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:55:56.760 DEBUG 26564 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347527458903797760(String), access(String), 管理用户(String), system(String), 超级管理员(String), 2021-01-08 20:55:56.709(Timestamp), /js/a/t/tadmin/form(String), GET(String), (String), (String), Tadmin(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 1(String), 
>>08:55:56:表达式值为空(NULL):tadmin.isNewRecord 位于6行 资源:/modules/t/tadminForm.html
空指针
3|	<div class="box box-main">
4|		<div class="box-header with-border">
5|			<div class="box-title">
6|				<i class="fa icon-note"></i> ${text(tadmin.isNewRecord ? '新增t_admin' : '编辑t_admin')}
7|			</div>
8|			<div class="box-tools pull-right">
9|				<button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>

	at com.jeesite.common.beetl.handler.LoggerErrorHandler.final(dda:172)
	at com.jeesite.common.beetl.handler.LoggerErrorHandler.processExcption(dda:216)
	at org.beetl.core.Template.renderTo(Template.java:180)
	at org.beetl.core.Template.renderTo(Template.java:101)
	at org.beetl.ext.web.WebRender.render(WebRender.java:129)
	at org.beetl.ext.spring.BeetlSpringView.renderMergedTemplateModel(BeetlSpringView.java:123)
	at com.jeesite.common.shiro.realms.RE.final(iga:49)
	at com.jeesite.common.shiro.realms.RE.renderMergedTemplateModel(iga:146)
	at org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:179)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: NULL
	at org.beetl.core.statement.optimal.VarRefOptimal.evaluate(VarRefOptimal.java:62)
	at org.beetl.core.statement.TernaryExpression.evaluate(TernaryExpression.java:56)
	at org.beetl.core.statement.FunctionExpression.evaluate(FunctionExpression.java:79)
	at org.beetl.core.statement.PlaceholderST.execute(PlaceholderST.java:30)
	at org.beetl.core.statement.BlockStatement.execute(BlockStatement.java:58)
	at org.beetl.core.tag.Tag.doBodyRender(Tag.java:73)
	at org.beetl.core.tag.Tag.getBodyContent(Tag.java:85)
	at org.beetl.ext.tag.LayoutTag.render(LayoutTag.java:98)
	at org.beetl.core.statement.TagStatement.runTag(TagStatement.java:95)
	at org.beetl.core.statement.TagStatement.execute(TagStatement.java:78)
	at org.beetl.core.statement.Program.run(Program.java:69)
	at org.beetl.core.statement.Program.execute(Program.java:61)
	at org.beetl.core.Template.renderTo(Template.java:153)
	... 64 more
(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 31(Long)
2021-01-08 20:55:56.769 DEBUG 26564 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:56:08.428 DEBUG 26564 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:56:08.428  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2021-01-08 20:56:08.515 INFO  26564 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2021-01-08 20:56:08.576 DEBUG 26564 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:56:08.569  用时: 141毫秒  URI: /js/a/gen/genTable/list  总内存: 617MB  已用内存: 267.267MB
2021-01-08 20:56:08.596 DEBUG 26564 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:56:08.598 DEBUG 26564 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:56:08.599 DEBUG 26564 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:56:08.601 DEBUG 26564 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347527508677603328(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:56:08.576(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 141(Long)
2021-01-08 20:56:08.617 DEBUG 26564 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:56:08.825 DEBUG 26564 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:56:08.825  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 20:56:08.931 DEBUG 26564 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 20:56:08.932 DEBUG 26564 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:56:09.085 DEBUG 26564 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 20:56:09.086 DEBUG 26564 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:56:09.092 DEBUG 26564 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 20:56:09.093 DEBUG 26564 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:56:09.096 DEBUG 26564 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 20:56:09.165 DEBUG 26564 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:56:09.163  用时: 338毫秒  URI: /js/a/gen/genTable/listData  总内存: 617MB  已用内存: 295.914MB
2021-01-08 20:56:09.173 DEBUG 26564 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 4毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:56:09.175 DEBUG 26564 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:56:09.175 DEBUG 26564 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:56:09.177 DEBUG 26564 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347527511148048384(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:56:09.165(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 338(Long)
2021-01-08 20:56:09.178 DEBUG 26564 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:56:11.974 DEBUG 26564 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:56:11.974  URI: /js/a/gen/genTable/delete  IP: 127.0.0.1
2021-01-08 20:56:11.977 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:56:11.977 DEBUG 26564 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:56:11.982 DEBUG 26564 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:56:11.983 DEBUG 26564 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_admin(String)
2021-01-08 20:56:11.984 DEBUG 26564 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 20:56:11.988 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 20:56:11.994 DEBUG 26564 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 20:56:11.995 DEBUG 26564 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_admin(String)
2021-01-08 20:56:11.998 DEBUG 26564 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 3
2021-01-08 20:56:12.009 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: DELETE FROM `js_gen_table` WHERE `table_name` = #{tableName}
2021-01-08 20:56:12.010 DEBUG 26564 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:56:12.012 DEBUG 26564 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.delete ] - ==>  Preparing: DELETE FROM `js_gen_table` WHERE `table_name` = ?
2021-01-08 20:56:12.013 DEBUG 26564 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.delete ] - ==> Parameters: t_admin(String)
2021-01-08 20:56:12.015 DEBUG 26564 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.delete ] - <==    Updates: 1
2021-01-08 20:56:12.019 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 3毫秒: DELETE FROM `js_gen_table_column` WHERE `table_name` = #{sqlMap.where#table_name#EQ1}
2021-01-08 20:56:12.020 DEBUG 26564 [nio-8980-exec-1] [c.j.m.g.d.G.deleteByEntity             ] - ==>  Preparing: DELETE FROM `js_gen_table_column` WHERE `table_name` = ?
2021-01-08 20:56:12.021 DEBUG 26564 [nio-8980-exec-1] [c.j.m.g.d.G.deleteByEntity             ] - ==> Parameters: t_admin(String)
2021-01-08 20:56:12.024 DEBUG 26564 [nio-8980-exec-1] [c.j.m.g.d.G.deleteByEntity             ] - <==    Updates: 3
2021-01-08 20:56:12.031 DEBUG 26564 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:56:12.030  用时: 56毫秒  URI: /js/a/gen/genTable/delete  总内存: 617MB  已用内存: 298.757MB
2021-01-08 20:56:12.036 DEBUG 26564 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:56:12.040 DEBUG 26564 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:56:12.041 DEBUG 26564 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:56:12.042 DEBUG 26564 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347527523168923648(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:56:12.031(Timestamp), /js/a/gen/genTable/delete(String), POST(String), tableName=t_admin(String), t_admin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 56(Long)
2021-01-08 20:56:12.043 DEBUG 26564 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:56:12.056 DEBUG 26564 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:56:12.056  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 20:56:12.095 DEBUG 26564 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 20:56:12.097 DEBUG 26564 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:56:12.111 DEBUG 26564 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 20:56:12.112 DEBUG 26564 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:56:12.114 DEBUG 26564 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 20:56:12.114 DEBUG 26564 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 20:56:12.116 DEBUG 26564 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 2
2021-01-08 20:56:12.127 DEBUG 26564 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:56:12.125  用时: 69毫秒  URI: /js/a/gen/genTable/listData  总内存: 617MB  已用内存: 301.214MB
2021-01-08 20:56:12.133 DEBUG 26564 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:56:12.133 DEBUG 26564 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:56:12.134 DEBUG 26564 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:56:12.135 DEBUG 26564 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347527523567382528(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:56:12.126(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 69(Long)
2021-01-08 20:56:12.139 DEBUG 26564 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:56:21.278 DEBUG 26564 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:56:21.278  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 20:56:21.458 DEBUG 26564 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:56:21.460 DEBUG 26564 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will not be managed by Spring
2021-01-08 20:56:21.464 DEBUG 26564 [nio-8980-exec-5] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:56:21.465 DEBUG 26564 [nio-8980-exec-5] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 20:56:21.473 DEBUG 26564 [nio-8980-exec-5] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 20:56:21.477 DEBUG 26564 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:56:21.482 DEBUG 26564 [nio-8980-exec-5] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 20:56:21.482 DEBUG 26564 [nio-8980-exec-5] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 20:56:21.491 DEBUG 26564 [nio-8980-exec-5] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 20:56:21.493 INFO  26564 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableFormSelect <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 20:56:21.626 DEBUG 26564 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:56:21.619  用时: 341毫秒  URI: /js/a/gen/genTable/form  总内存: 617MB  已用内存: 329.042MB
2021-01-08 20:56:21.632 DEBUG 26564 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:56:21.633 DEBUG 26564 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:56:21.634 DEBUG 26564 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:56:21.639 DEBUG 26564 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347527563413270528(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:56:21.626(Timestamp), /js/a/gen/genTable/form(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 341(Long)
2021-01-08 20:56:21.643 DEBUG 26564 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:57:11.431 DEBUG 26564 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:57:11.431  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 20:57:11.434 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:57:11.435 DEBUG 26564 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:57:11.439 DEBUG 26564 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:57:11.439 DEBUG 26564 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: jeesite(String)
2021-01-08 20:57:11.440 DEBUG 26564 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2021-01-08 20:57:11.445 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:57:11.446 DEBUG 26564 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:57:11.451 DEBUG 26564 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:57:11.452 DEBUG 26564 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: jeesite(String)
2021-01-08 20:57:11.454 DEBUG 26564 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2021-01-08 20:57:11.458 DEBUG 26564 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:57:11.463 DEBUG 26564 [nio-8980-exec-1] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 20:57:11.464 DEBUG 26564 [nio-8980-exec-1] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: jeesite(String), jeesite(String)
2021-01-08 20:57:11.468 DEBUG 26564 [nio-8980-exec-1] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 20:57:11.475 DEBUG 26564 [nio-8980-exec-1] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 20:57:11.475 DEBUG 26564 [nio-8980-exec-1] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: jeesite(String)
2021-01-08 20:57:11.478 DEBUG 26564 [nio-8980-exec-1] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 1
2021-01-08 20:57:11.483 DEBUG 26564 [nio-8980-exec-1] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 20:57:11.484 DEBUG 26564 [nio-8980-exec-1] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: jeesite(String)
2021-01-08 20:57:11.487 DEBUG 26564 [nio-8980-exec-1] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 1
2021-01-08 20:57:11.497 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:57:11.497 DEBUG 26564 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will not be managed by Spring
2021-01-08 20:57:11.502 DEBUG 26564 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:57:11.502 DEBUG 26564 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 20:57:11.506 DEBUG 26564 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 20:57:11.508 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 20:57:11.508 DEBUG 26564 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will not be managed by Spring
2021-01-08 20:57:11.512 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 20:57:11.513 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 20:57:11.515 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 20:57:11.519 DEBUG 26564 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:57:11.524 DEBUG 26564 [nio-8980-exec-1] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 20:57:11.527 DEBUG 26564 [nio-8980-exec-1] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 20:57:11.529 DEBUG 26564 [nio-8980-exec-1] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 1
2021-01-08 20:57:11.536 INFO  26564 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 20:57:11.592 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:57:11.593 DEBUG 26564 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:57:11.599 DEBUG 26564 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 20:57:11.600 DEBUG 26564 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_yes_no(String), 1(String), 0(String)
2021-01-08 20:57:11.605 DEBUG 26564 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 20:57:11.751 DEBUG 26564 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:57:11.750  用时: 319毫秒  URI: /js/a/gen/genTable/form  总内存: 617MB  已用内存: 357.304MB
2021-01-08 20:57:11.754 DEBUG 26564 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:57:11.755 DEBUG 26564 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:57:11.755 DEBUG 26564 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:57:11.756 DEBUG 26564 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347527773652758528(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:57:11.751(Timestamp), /js/a/gen/genTable/form(String), POST(String), isNewRecord=true&tableName=jeesite(String), jeesite(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 319(Long)
2021-01-08 20:57:11.757 DEBUG 26564 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:57:15.373 DEBUG 26564 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:57:15.373  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 20:57:15.384 DEBUG 26564 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:57:15.384 DEBUG 26564 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will not be managed by Spring
2021-01-08 20:57:15.390 DEBUG 26564 [nio-8980-exec-3] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:57:15.391 DEBUG 26564 [nio-8980-exec-3] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 20:57:15.393 DEBUG 26564 [nio-8980-exec-3] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 20:57:15.398 DEBUG 26564 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:57:15.402 DEBUG 26564 [nio-8980-exec-3] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 20:57:15.403 DEBUG 26564 [nio-8980-exec-3] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 20:57:15.407 DEBUG 26564 [nio-8980-exec-3] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 20:57:15.408 INFO  26564 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableFormSelect <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 20:57:15.415 DEBUG 26564 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:57:15.414  用时: 41毫秒  URI: /js/a/gen/genTable/form  总内存: 617MB  已用内存: 359.761MB
2021-01-08 20:57:15.419 DEBUG 26564 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:57:15.420 DEBUG 26564 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:57:15.421 DEBUG 26564 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:57:15.422 DEBUG 26564 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347527789016494080(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:57:15.414(Timestamp), /js/a/gen/genTable/form(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 41(Long)
2021-01-08 20:57:15.424 DEBUG 26564 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 20:57:26.253 DEBUG 26564 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:57:26.253  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 20:57:26.255 DEBUG 26564 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:57:26.255 DEBUG 26564 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:57:26.260 DEBUG 26564 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:57:26.261 DEBUG 26564 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 20:57:26.262 DEBUG 26564 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2021-01-08 20:57:26.265 DEBUG 26564 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 20:57:26.266 DEBUG 26564 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:57:26.270 DEBUG 26564 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 20:57:26.270 DEBUG 26564 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 20:57:26.271 DEBUG 26564 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2021-01-08 20:57:26.273 DEBUG 26564 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:57:26.276 DEBUG 26564 [io-8980-exec-10] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 20:57:26.276 DEBUG 26564 [io-8980-exec-10] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_yuangong(String), t_yuangong(String)
2021-01-08 20:57:26.278 DEBUG 26564 [io-8980-exec-10] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 20:57:26.282 DEBUG 26564 [io-8980-exec-10] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 20:57:26.282 DEBUG 26564 [io-8980-exec-10] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_yuangong(String)
2021-01-08 20:57:26.285 DEBUG 26564 [io-8980-exec-10] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 11
2021-01-08 20:57:26.291 DEBUG 26564 [io-8980-exec-10] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 20:57:26.291 DEBUG 26564 [io-8980-exec-10] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_yuangong(String)
2021-01-08 20:57:26.294 DEBUG 26564 [io-8980-exec-10] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 1
2021-01-08 20:57:26.302 DEBUG 26564 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:57:26.302 DEBUG 26564 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will not be managed by Spring
2021-01-08 20:57:26.306 DEBUG 26564 [io-8980-exec-10] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 20:57:26.307 DEBUG 26564 [io-8980-exec-10] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 20:57:26.310 DEBUG 26564 [io-8980-exec-10] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 20:57:26.311 DEBUG 26564 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 20:57:26.312 DEBUG 26564 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will not be managed by Spring
2021-01-08 20:57:26.316 DEBUG 26564 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 20:57:26.316 DEBUG 26564 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 20:57:26.318 DEBUG 26564 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 20:57:26.320 DEBUG 26564 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:57:26.325 DEBUG 26564 [io-8980-exec-10] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 20:57:26.326 DEBUG 26564 [io-8980-exec-10] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 20:57:26.328 DEBUG 26564 [io-8980-exec-10] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 1
2021-01-08 20:57:26.333 INFO  26564 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 20:57:26.383 DEBUG 26564 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:57:26.363  用时: 110毫秒  URI: /js/a/gen/genTable/form  总内存: 617MB  已用内存: 365.464MB
2021-01-08 20:57:26.384 DEBUG 26564 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 20:57:26.385 DEBUG 26564 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 20:57:26.385 DEBUG 26564 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 20:57:26.387 DEBUG 26564 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347527835007037440(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 20:57:26.379(Timestamp), /js/a/gen/genTable/form(String), POST(String), isNewRecord=true&tableName=t_yuangong(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 110(Long)
2021-01-08 20:57:26.388 DEBUG 26564 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:14:47.918 DEBUG 26564 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:14:47.918  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2021-01-08 21:14:47.921 INFO  26564 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2021-01-08 21:14:47.928 DEBUG 26564 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:14:47.926  用时: 8毫秒  URI: /js/a/gen/genTable/list  总内存: 617MB  已用内存: 373.907MB
2021-01-08 21:14:47.944 DEBUG 26564 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:14:47.945 DEBUG 26564 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:14:47.945 DEBUG 26564 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:14:47.947 DEBUG 26564 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347532203575980032(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:14:47.927(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 8(Long)
2021-01-08 21:14:47.948 DEBUG 26564 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:14:48.152 DEBUG 26564 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:14:48.152  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:14:48.157 DEBUG 26564 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:14:48.157 DEBUG 26564 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:14:48.170 DEBUG 26564 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:14:48.171 DEBUG 26564 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:14:48.173 DEBUG 26564 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:14:48.174 DEBUG 26564 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:14:48.181 DEBUG 26564 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 2
2021-01-08 21:14:48.187 DEBUG 26564 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:14:48.186  用时: 34毫秒  URI: /js/a/gen/genTable/listData  总内存: 617MB  已用内存: 375.419MB
2021-01-08 21:14:48.190 DEBUG 26564 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:14:48.190 DEBUG 26564 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:14:48.191 DEBUG 26564 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:14:48.192 DEBUG 26564 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347532204666499072(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:14:48.187(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 34(Long)
2021-01-08 21:14:48.196 DEBUG 26564 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:14:48.638 DEBUG 26564 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:14:48.638  URI: /js/a/t/tadmin/list  IP: 127.0.0.1
2021-01-08 21:14:48.641 INFO  26564 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/t/tadminList <<<<<<<<< /js/a/t/tadmin/list >>>>>>>>> com.jeesite.modules.t.web.TadminController#list(Tadmin, Model)
2021-01-08 21:14:48.691 DEBUG 26564 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:14:48.653  用时: 15毫秒  URI: /js/a/t/tadmin/list  总内存: 617MB  已用内存: 377.877MB
2021-01-08 21:14:48.700 DEBUG 26564 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:14:48.701 DEBUG 26564 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:14:48.701 DEBUG 26564 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:14:48.703 DEBUG 26564 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347532206780428288(String), access(String), 管理用户(String), system(String), 超级管理员(String), 2021-01-08 21:14:48.691(Timestamp), /js/a/t/tadmin/list(String), GET(String), (String), (String), Tadmin(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 15(Long)
2021-01-08 21:14:48.706 DEBUG 26564 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:14:48.891 DEBUG 26564 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:14:48.891  URI: /js/a/t/tadmin/listData  IP: 127.0.0.1
2021-01-08 21:14:48.896 DEBUG 26564 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:14:48.895  用时: 4毫秒  URI: /js/a/t/tadmin/listData  总内存: 617MB  已用内存: 378.633MB
2021-01-08 21:14:48.897 ERROR 26564 [nio-8980-exec-3] [o.a.c.c.C.[.[.[/js].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [/js] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause

java.lang.NullPointerException: null
	at com.jeesite.modules.t.web.TadminController.listData(TadminController.java:62)
	at com.jeesite.modules.t.web.TadminController$$FastClassBySpringCGLIB$$b5e561c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.t.web.TadminController$$EnhancerBySpringCGLIB$$d0bb99f1.listData(<generated>)
	at com.jeesite.modules.t.web.TadminController$$FastClassBySpringCGLIB$$b5e561c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.t.web.TadminController$$EnhancerBySpringCGLIB$$4eaedf77.listData(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)

2021-01-08 21:14:48.899 DEBUG 26564 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:14:48.900 DEBUG 26564 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:14:48.901 DEBUG 26564 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:14:48.902 ERROR 26564 [nio-8980-exec-3] [error/500                              ] - 

java.lang.NullPointerException: null
	at com.jeesite.modules.t.web.TadminController.listData(TadminController.java:62)
	at com.jeesite.modules.t.web.TadminController$$FastClassBySpringCGLIB$$b5e561c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.t.web.TadminController$$EnhancerBySpringCGLIB$$d0bb99f1.listData(<generated>)
	at com.jeesite.modules.t.web.TadminController$$FastClassBySpringCGLIB$$b5e561c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.t.web.TadminController$$EnhancerBySpringCGLIB$$4eaedf77.listData(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)

2021-01-08 21:14:48.902 DEBUG 26564 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347532207640260608(String), access(String), 管理用户(String), system(String), 超级管理员(String), 2021-01-08 21:14:48.896(Timestamp), /js/a/t/tadmin/listData(String), POST(String), username=&userpw=&pageNo=&pageSize=&orderBy=(String), (String), Tadmin(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 1(String), java.lang.NullPointerException
	at com.jeesite.modules.t.web.TadminController.listData(TadminController.java:62)
	at com.jeesite.modules.t.web.TadminController$$FastClassBySpringCGLIB$$b5e561c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.t.web.TadminController$$EnhancerBySpringCGLIB$$d0bb99f1.listData(<generated>)
	at com.jeesite.modules.t.web.TadminController$$FastClassBySpringCGLIB$$b5e561c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.t.web.TadminController$$EnhancerBySpringCGLIB$$4eaedf77.listData(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.j.final(qh:115)
	at com.jeesite.common.shiro.web.j.doFilterInternal(qh:95)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
(String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 4(Long)
2021-01-08 21:14:48.904 DEBUG 26564 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:14:57.253 DEBUG 26564 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:14:57.253  URI: /js/a/sys/menu/list  IP: 127.0.0.1
2021-01-08 21:14:57.282 INFO  26564 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/menuList <<<<<<<<< /js/a/sys/menu/list >>>>>>>>> com.jeesite.modules.sys.web.MenuController#list(Menu, Model)
2021-01-08 21:14:57.305 DEBUG 26564 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:14:57.305 DEBUG 26564 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:14:57.314 DEBUG 26564 [nio-8980-exec-5] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:14:57.315 DEBUG 26564 [nio-8980-exec-5] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_type(String), 1(String), 0(String)
2021-01-08 21:14:57.317 DEBUG 26564 [nio-8980-exec-5] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 21:14:57.327 DEBUG 26564 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:14:57.328 DEBUG 26564 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:14:57.334 DEBUG 26564 [nio-8980-exec-5] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:14:57.340 DEBUG 26564 [nio-8980-exec-5] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_show_hide(String), 1(String), 0(String)
2021-01-08 21:14:57.343 DEBUG 26564 [nio-8980-exec-5] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 21:14:57.347 DEBUG 26564 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:14:57.348 DEBUG 26564 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:14:57.352 DEBUG 26564 [nio-8980-exec-5] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:14:57.353 DEBUG 26564 [nio-8980-exec-5] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_weight(String), 1(String), 0(String)
2021-01-08 21:14:57.356 DEBUG 26564 [nio-8980-exec-5] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 4
2021-01-08 21:14:57.362 DEBUG 26564 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:14:57.361  用时: 108毫秒  URI: /js/a/sys/menu/list  总内存: 617MB  已用内存: 392.489MB
2021-01-08 21:14:57.369 DEBUG 26564 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:14:57.370 DEBUG 26564 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:14:57.370 DEBUG 26564 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:14:57.372 DEBUG 26564 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347532243145043968(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 21:14:57.361(Timestamp), /js/a/sys/menu/list(String), GET(String), (String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 108(Long)
2021-01-08 21:14:57.373 DEBUG 26564 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:14:57.462 DEBUG 26564 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:14:57.462  URI: /js/a/sys/menu/listData  IP: 127.0.0.1
2021-01-08 21:14:57.516 DEBUG 26564 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:14:57.517 DEBUG 26564 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:14:57.531 DEBUG 26564 [io-8980-exec-10] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? AND a.`sys_code` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:14:57.532 DEBUG 26564 [io-8980-exec-10] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String), default(String)
2021-01-08 21:14:57.537 DEBUG 26564 [io-8980-exec-10] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2021-01-08 21:14:57.583 DEBUG 26564 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:14:57.582  用时: 120毫秒  URI: /js/a/sys/menu/listData  总内存: 617MB  已用内存: 399.862MB
2021-01-08 21:14:57.590 DEBUG 26564 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:14:57.594 DEBUG 26564 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:14:57.597 DEBUG 26564 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:14:57.598 DEBUG 26564 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347532244076179456(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 21:14:57.583(Timestamp), /js/a/sys/menu/listData(String), POST(String), moduleCodes=&sysCode=default&menuNameOrig=&pageNo=&pageSize=&orderBy=(String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 120(Long)
2021-01-08 21:14:57.600 DEBUG 26564 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:15:01.231 DEBUG 26564 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:15:01.231  URI: /js/a/sys/menu/delete  IP: 127.0.0.1
2021-01-08 21:15:01.233 DEBUG 26564 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`menu_code` = #{menuCode}
2021-01-08 21:15:01.233 DEBUG 26564 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will not be managed by Spring
2021-01-08 21:15:01.235 DEBUG 26564 [nio-8980-exec-8] [com.jeesite.modules.sys.dao.MenuDao.get] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`menu_code` = ?
2021-01-08 21:15:01.236 DEBUG 26564 [nio-8980-exec-8] [com.jeesite.modules.sys.dao.MenuDao.get] - ==> Parameters: 1347526107413602304(String)
2021-01-08 21:15:01.238 DEBUG 26564 [nio-8980-exec-8] [com.jeesite.modules.sys.dao.MenuDao.get] - <==      Total: 1
2021-01-08 21:15:01.269 DEBUG 26564 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE `js_sys_menu` SET `status` = #{status}, `update_by` = #{updateBy}, `update_date` = #{updateDate} WHERE `status` != #{STATUS_DELETE} AND ( `menu_code` = #{sqlMap.where._menu_code_#EQ1.val} OR parent_codes LIKE #{sqlMap.where.parent_codes#LIKE1.val} )
2021-01-08 21:15:01.270 DEBUG 26564 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:15:01.270 DEBUG 26564 [nio-8980-exec-8] [c.j.m.sys.dao.MenuDao.deleteByEntity   ] - ==>  Preparing: UPDATE `js_sys_menu` SET `status` = ?, `update_by` = ?, `update_date` = ? WHERE `status` != ? AND ( `menu_code` = ? OR parent_codes LIKE ? )
2021-01-08 21:15:01.271 DEBUG 26564 [nio-8980-exec-8] [c.j.m.sys.dao.MenuDao.deleteByEntity   ] - ==> Parameters: 1(String), system(String), 2021-01-08 21:15:01.269(Timestamp), 1(String), 1347526107413602304(String), %,1347526107413602304,%(String)
2021-01-08 21:15:01.272 DEBUG 26564 [nio-8980-exec-8] [c.j.m.sys.dao.MenuDao.deleteByEntity   ] - <==    Updates: 1
2021-01-08 21:15:01.280 INFO  26564 [nio-8980-exec-8] [com.jeesite.common.cache.CacheUtils    ] - removeByKeyPrefix: userCache_system => [menuList_default_null_0__tree, menuList_default_null_0_]
2021-01-08 21:15:01.287 DEBUG 26564 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:15:01.286  用时: 55毫秒  URI: /js/a/sys/menu/delete  总内存: 617MB  已用内存: 407.108MB
2021-01-08 21:15:01.291 DEBUG 26564 [  log-save-10-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:15:01.293 DEBUG 26564 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:15:01.293 DEBUG 26564 [  log-save-10-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:15:01.294 DEBUG 26564 [  log-save-10-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 21:15:01.318 DEBUG 26564 [  log-save-10-3] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 73
2021-01-08 21:15:01.321 DEBUG 26564 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:15:01.329 DEBUG 26564 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:15:01.329 DEBUG 26564 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:15:01.330 DEBUG 26564 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347532259611881472(String), update(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 21:15:01.287(Timestamp), /js/a/sys/menu/delete(String), POST(String), menuCode=1347526107413602304(String), 1347526107413602304(String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 55(Long)
2021-01-08 21:15:01.331 DEBUG 26564 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:15:04.272 DEBUG 26564 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:15:04.272 DEBUG 26564 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:15:04.280 DEBUG 26564 [nio-8980-exec-9] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:15:04.281 DEBUG 26564 [nio-8980-exec-9] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2021-01-08 21:15:04.296 DEBUG 26564 [nio-8980-exec-9] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 73
2021-01-08 21:15:04.483 DEBUG 26564 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:15:04.483  URI: /js/a/sys/menu/list  IP: 127.0.0.1
2021-01-08 21:15:04.494 INFO  26564 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/menuList <<<<<<<<< /js/a/sys/menu/list >>>>>>>>> com.jeesite.modules.sys.web.MenuController#list(Menu, Model)
2021-01-08 21:15:04.505 DEBUG 26564 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:15:04.503  用时: 20毫秒  URI: /js/a/sys/menu/list  总内存: 617MB  已用内存: 417.507MB
2021-01-08 21:15:04.509 DEBUG 26564 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:15:04.510 DEBUG 26564 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:15:04.510 DEBUG 26564 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:15:04.511 DEBUG 26564 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347532273104957440(String), access(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 21:15:04.504(Timestamp), /js/a/sys/menu/list(String), GET(String), (String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 20(Long)
2021-01-08 21:15:04.513 DEBUG 26564 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:15:04.610 DEBUG 26564 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:15:04.610  URI: /js/a/sys/menu/listData  IP: 127.0.0.1
2021-01-08 21:15:04.614 DEBUG 26564 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:15:04.615 DEBUG 26564 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:15:04.620 DEBUG 26564 [io-8980-exec-10] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? AND a.`sys_code` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:15:04.620 DEBUG 26564 [io-8980-exec-10] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String), default(String)
2021-01-08 21:15:04.622 DEBUG 26564 [io-8980-exec-10] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 2
2021-01-08 21:15:04.631 DEBUG 26564 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:15:04.629  用时: 19毫秒  URI: /js/a/sys/menu/listData  总内存: 617MB  已用内存: 417.507MB
2021-01-08 21:15:04.633 DEBUG 26564 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:15:04.634 DEBUG 26564 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:15:04.634 DEBUG 26564 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:15:04.635 DEBUG 26564 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347532273637634048(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 21:15:04.631(Timestamp), /js/a/sys/menu/listData(String), POST(String), moduleCodes=&sysCode=default&menuNameOrig=&pageNo=&pageSize=&orderBy=(String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 19(Long)
2021-01-08 21:15:04.637 DEBUG 26564 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:15:09.843 DEBUG 26564 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:15:09.843  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2021-01-08 21:15:09.847 INFO  26564 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2021-01-08 21:15:09.859 DEBUG 26564 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:15:09.858  用时: 15毫秒  URI: /js/a/gen/genTable/list  总内存: 617MB  已用内存: 421.458MB
2021-01-08 21:15:09.865 DEBUG 26564 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:15:09.865 DEBUG 26564 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:15:09.866 DEBUG 26564 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:15:09.867 DEBUG 26564 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347532295565455360(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:15:09.859(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 15(Long)
2021-01-08 21:15:09.871 DEBUG 26564 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:15:09.942 DEBUG 26564 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:15:09.939  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:15:09.947 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:15:09.949 DEBUG 26564 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:15:09.965 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:15:09.965 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:15:09.967 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:15:09.968 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:15:09.977 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 2
2021-01-08 21:15:09.986 DEBUG 26564 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:15:09.984  用时: 45毫秒  URI: /js/a/gen/genTable/listData  总内存: 617MB  已用内存: 422.215MB
2021-01-08 21:15:09.991 DEBUG 26564 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 3毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:15:09.991 DEBUG 26564 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:15:09.993 DEBUG 26564 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:15:09.994 DEBUG 26564 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347532296093937664(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:15:09.985(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 45(Long)
2021-01-08 21:15:09.997 DEBUG 26564 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:15:12.066 DEBUG 26564 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:15:12.066  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:15:12.077 DEBUG 26564 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:15:12.077 DEBUG 26564 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will not be managed by Spring
2021-01-08 21:15:12.080 DEBUG 26564 [nio-8980-exec-4] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:15:12.080 DEBUG 26564 [nio-8980-exec-4] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 21:15:12.082 DEBUG 26564 [nio-8980-exec-4] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 21:15:12.083 DEBUG 26564 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:15:12.086 DEBUG 26564 [nio-8980-exec-4] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 21:15:12.086 DEBUG 26564 [nio-8980-exec-4] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 21:15:12.095 DEBUG 26564 [nio-8980-exec-4] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 21:15:12.096 INFO  26564 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableFormSelect <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:15:12.101 DEBUG 26564 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:15:12.101  用时: 35毫秒  URI: /js/a/gen/genTable/form  总内存: 617MB  已用内存: 427.130MB
2021-01-08 21:15:12.106 DEBUG 26564 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:15:12.108 DEBUG 26564 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:15:12.109 DEBUG 26564 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:15:12.110 DEBUG 26564 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347532304969084928(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:15:12.101(Timestamp), /js/a/gen/genTable/form(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 35(Long)
2021-01-08 21:15:12.111 DEBUG 26564 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:15:40.814 DEBUG 26564 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:15:40.813  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:15:40.815 DEBUG 26564 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:15:40.816 DEBUG 26564 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:15:40.824 DEBUG 26564 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:15:40.825 DEBUG 26564 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: js_sys_employee(String)
2021-01-08 21:15:40.826 DEBUG 26564 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2021-01-08 21:15:40.831 DEBUG 26564 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:15:40.832 DEBUG 26564 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:15:40.834 DEBUG 26564 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:15:40.835 DEBUG 26564 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: js_sys_employee(String)
2021-01-08 21:15:40.836 DEBUG 26564 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2021-01-08 21:15:40.838 DEBUG 26564 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:15:40.840 DEBUG 26564 [nio-8980-exec-6] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 21:15:40.841 DEBUG 26564 [nio-8980-exec-6] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: js_sys_employee(String), js_sys_employee(String)
2021-01-08 21:15:40.842 DEBUG 26564 [nio-8980-exec-6] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 21:15:40.846 DEBUG 26564 [nio-8980-exec-6] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 21:15:40.846 DEBUG 26564 [nio-8980-exec-6] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: js_sys_employee(String)
2021-01-08 21:15:40.849 DEBUG 26564 [nio-8980-exec-6] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 16
2021-01-08 21:15:40.853 DEBUG 26564 [nio-8980-exec-6] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 21:15:40.853 DEBUG 26564 [nio-8980-exec-6] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: js_sys_employee(String)
2021-01-08 21:15:40.854 DEBUG 26564 [nio-8980-exec-6] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 1
2021-01-08 21:15:40.860 DEBUG 26564 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:15:40.860 DEBUG 26564 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will not be managed by Spring
2021-01-08 21:15:40.865 DEBUG 26564 [nio-8980-exec-6] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:15:40.865 DEBUG 26564 [nio-8980-exec-6] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 21:15:40.867 DEBUG 26564 [nio-8980-exec-6] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 21:15:40.869 DEBUG 26564 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:15:40.869 DEBUG 26564 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will not be managed by Spring
2021-01-08 21:15:40.873 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:15:40.874 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 21:15:40.875 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:15:40.877 DEBUG 26564 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:15:40.882 DEBUG 26564 [nio-8980-exec-6] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 21:15:40.882 DEBUG 26564 [nio-8980-exec-6] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 21:15:40.883 DEBUG 26564 [nio-8980-exec-6] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 1
2021-01-08 21:15:40.888 INFO  26564 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:15:40.913 DEBUG 26564 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:15:40.912  用时: 99毫秒  URI: /js/a/gen/genTable/form  总内存: 617MB  已用内存: 432.833MB
2021-01-08 21:15:40.940 DEBUG 26564 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:15:40.940 DEBUG 26564 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:15:40.941 DEBUG 26564 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:15:40.941 DEBUG 26564 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347532425815371776(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:15:40.913(Timestamp), /js/a/gen/genTable/form(String), POST(String), isNewRecord=true&tableName=js_sys_employee(String), js_sys_employee(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 99(Long)
2021-01-08 21:15:40.948 DEBUG 26564 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:15:48.539 DEBUG 26564 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:15:48.538  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:15:48.547 DEBUG 26564 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:15:48.548 DEBUG 26564 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will not be managed by Spring
2021-01-08 21:15:48.552 DEBUG 26564 [nio-8980-exec-5] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:15:48.553 DEBUG 26564 [nio-8980-exec-5] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 21:15:48.555 DEBUG 26564 [nio-8980-exec-5] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 21:15:48.558 DEBUG 26564 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:15:48.561 DEBUG 26564 [nio-8980-exec-5] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 21:15:48.561 DEBUG 26564 [nio-8980-exec-5] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 21:15:48.565 DEBUG 26564 [nio-8980-exec-5] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 21:15:48.567 INFO  26564 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableFormSelect <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:15:48.575 DEBUG 26564 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:15:48.574  用时: 36毫秒  URI: /js/a/gen/genTable/form  总内存: 617MB  已用内存: 436.078MB
2021-01-08 21:15:48.578 DEBUG 26564 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:15:48.578 DEBUG 26564 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:15:48.579 DEBUG 26564 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:15:48.580 DEBUG 26564 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347532457952129024(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:15:48.575(Timestamp), /js/a/gen/genTable/form(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 36(Long)
2021-01-08 21:15:48.581 DEBUG 26564 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:15:51.781 DEBUG 26564 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:15:51.781  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:15:51.782 DEBUG 26564 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:15:51.783 DEBUG 26564 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:15:51.787 DEBUG 26564 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:15:51.788 DEBUG 26564 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:15:51.789 DEBUG 26564 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2021-01-08 21:15:51.792 DEBUG 26564 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:15:51.792 DEBUG 26564 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:15:51.797 DEBUG 26564 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:15:51.797 DEBUG 26564 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:15:51.798 DEBUG 26564 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2021-01-08 21:15:51.800 DEBUG 26564 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:15:51.804 DEBUG 26564 [io-8980-exec-10] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 21:15:51.805 DEBUG 26564 [io-8980-exec-10] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_yuangong(String), t_yuangong(String)
2021-01-08 21:15:51.806 DEBUG 26564 [io-8980-exec-10] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 21:15:51.811 DEBUG 26564 [io-8980-exec-10] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 21:15:51.811 DEBUG 26564 [io-8980-exec-10] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:15:51.813 DEBUG 26564 [io-8980-exec-10] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 11
2021-01-08 21:15:51.819 DEBUG 26564 [io-8980-exec-10] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 21:15:51.819 DEBUG 26564 [io-8980-exec-10] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:15:51.821 DEBUG 26564 [io-8980-exec-10] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 2
2021-01-08 21:15:51.826 DEBUG 26564 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:15:51.827 DEBUG 26564 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will not be managed by Spring
2021-01-08 21:15:51.829 DEBUG 26564 [io-8980-exec-10] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:15:51.830 DEBUG 26564 [io-8980-exec-10] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 21:15:51.832 DEBUG 26564 [io-8980-exec-10] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 21:15:51.833 DEBUG 26564 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:15:51.833 DEBUG 26564 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will not be managed by Spring
2021-01-08 21:15:51.837 DEBUG 26564 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:15:51.838 DEBUG 26564 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 21:15:51.839 DEBUG 26564 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:15:51.841 DEBUG 26564 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:15:51.845 DEBUG 26564 [io-8980-exec-10] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 21:15:51.845 DEBUG 26564 [io-8980-exec-10] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 21:15:51.846 DEBUG 26564 [io-8980-exec-10] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 1
2021-01-08 21:15:51.848 INFO  26564 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:15:51.863 DEBUG 26564 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:15:51.862  用时: 81毫秒  URI: /js/a/gen/genTable/form  总内存: 617MB  已用内存: 443.451MB
2021-01-08 21:15:51.868 DEBUG 26564 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:15:51.868 DEBUG 26564 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:15:51.868 DEBUG 26564 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:15:51.869 DEBUG 26564 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347532471743000576(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:15:51.863(Timestamp), /js/a/gen/genTable/form(String), POST(String), isNewRecord=true&tableName=t_yuangong(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 81(Long)
2021-01-08 21:15:51.870 DEBUG 26564 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:16:17.885 DEBUG 26564 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:16:17.885  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 21:16:17.887 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:16:17.888 DEBUG 26564 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:16:17.892 DEBUG 26564 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:16:17.893 DEBUG 26564 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:16:17.893 DEBUG 26564 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2021-01-08 21:16:18.171 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_gen_table` (`table_name`, `class_name`, `comments`, `parent_table_name`, `parent_table_fk_name`, `data_source_name`, `tpl_category`, `package_name`, `module_name`, `sub_module_name`, `function_name`, `function_name_simple`, `function_author`, `gen_base_dir`, `options`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`) VALUES (#{tableName}, #{className}, #{comments}, #{parentTableName}, #{parentTableFkName}, #{dataSourceName}, #{tplCategory}, #{packageName}, #{moduleName}, #{subModuleName}, #{functionName}, #{functionNameSimple}, #{functionAuthor}, #{genBaseDir}, #{options}, #{createBy}, #{createDate}, #{updateBy}, #{updateDate}, #{remarks})
2021-01-08 21:16:18.171 DEBUG 26564 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:16:18.174 DEBUG 26564 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table` (`table_name`, `class_name`, `comments`, `parent_table_name`, `parent_table_fk_name`, `data_source_name`, `tpl_category`, `package_name`, `module_name`, `sub_module_name`, `function_name`, `function_name_simple`, `function_author`, `gen_base_dir`, `options`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:16:18.176 DEBUG 26564 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.insert ] - ==> Parameters: t_yuangong(String), Tyuangong(String), t_yuangong(String), (String), eid(String), (String), (String), com.jeesite.modules(String), t(String), (String), t_yuangong(String), t_yuangong(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 21:16:18.17(Timestamp), system(String), 2021-01-08 21:16:18.17(Timestamp), (String)
2021-01-08 21:16:18.178 DEBUG 26564 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.insert ] - <==    Updates: 1
2021-01-08 21:16:18.182 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 3毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:16:18.187 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:16:18.189 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347532582120304640(String), t_yuangong(String), id(String), 10(Integer), int(String), id(String), id(String), id(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2021-01-08 21:16:18.195 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:16:18.205 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 9毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:16:18.206 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:16:18.208 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347532582204190720(String), t_yuangong(String), org_id(String), 20(Integer), int(String), org_id(String), org_id(String), orgId(String), Long(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"digits","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2021-01-08 21:16:18.211 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:16:18.219 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 4毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:16:18.234 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:16:18.239 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347532582275493888(String), t_yuangong(String), eid(String), 30(Integer), varchar(55)(String), eid(String), eid(String), eid(String), String(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2021-01-08 21:16:18.285 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:16:18.288 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:16:18.290 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:16:18.290 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347532582569095168(String), t_yuangong(String), name(String), 40(Integer), varchar(50)(String), name(String), name(String), name(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), LIKE(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2021-01-08 21:16:18.291 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:16:18.293 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:16:18.294 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:16:18.295 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347532582594260992(String), t_yuangong(String), sex(String), 50(Integer), varchar(50)(String), sex(String), sex(String), sex(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2021-01-08 21:16:18.295 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:16:18.297 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:16:18.298 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:16:18.298 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347532582611038208(String), t_yuangong(String), age(String), 60(Integer), varchar(50)(String), age(String), age(String), age(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2021-01-08 21:16:18.299 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:16:18.300 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:16:18.301 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:16:18.307 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347532582627815424(String), t_yuangong(String), zhiwei(String), 70(Integer), varchar(50)(String), zhiwei(String), zhiwei(String), zhiwei(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2021-01-08 21:16:18.308 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:16:18.309 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:16:18.310 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:16:18.311 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347532582661369856(String), t_yuangong(String), shifoubumenlingdao(String), 80(Integer), varchar(50)(String), shifoubumenlingdao(String), shifoubumenlingdao(String), shifoubumenlingdao(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2021-01-08 21:16:18.312 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:16:18.314 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:16:18.315 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:16:18.316 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347532582682341376(String), t_yuangong(String), loginname(String), 90(Integer), varchar(50)(String), loginname(String), loginname(String), loginname(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2021-01-08 21:16:18.317 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:16:18.319 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:16:18.320 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:16:18.321 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347532582703312896(String), t_yuangong(String), loginpw(String), 100(Integer), varchar(50)(String), loginpw(String), loginpw(String), loginpw(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2021-01-08 21:16:18.322 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:16:18.326 DEBUG 26564 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:16:18.327 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:16:18.328 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347532582732673024(String), t_yuangong(String), del(String), 110(Integer), varchar(50)(String), del(String), del(String), del(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2021-01-08 21:16:18.329 DEBUG 26564 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:16:18.341 DEBUG 26564 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:16:18.335  用时: 450毫秒  URI: /js/a/gen/genTable/save  总内存: 617MB  已用内存: 475.517MB
2021-01-08 21:16:18.344 DEBUG 26564 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:16:18.344 DEBUG 26564 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:16:18.345 DEBUG 26564 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:16:18.346 DEBUG 26564 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347532582799781888(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:16:18.341(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=true&tableName=t_yuangong&comments=t_yuangong&className=Tyuangong&functionAuthor=LX&parentTableName=&parentTableFkName=eid&remarks=&columnList[0].id=&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=id&columnList[0].columnType=int&columnList[0].attrType=Long&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=6/4/8&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=org_id&columnList[1].comments=org_id&columnList[1].columnType=int&columnList[1].attrType=Long&columnList[1].fullAttrName=orgId&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=6/4/8&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[1].optionMap['fieldValid']=digits&columnList[2].id=&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=eid&columnList[2].comments=eid&columnList[2].columnType=varchar(55)&columnList[2].attrType=String&columnList[2].fullAttrName=eid&!columnList[2].isPk=&columnList[2].isPk=1&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&!columnList[2].isList=&!columnList[2].isQuery=&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].isRequired=1&columnList[2].showType=hidden&columnList[2].optionMap['gridRowCol']=6/4/8&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[2].optionMap['fieldValid']=abc&columnList[3].id=&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=name&columnList[3].comments=name&columnList[3].columnType=varchar(50)&columnList[3].attrType=String&columnList[3].fullAttrName=name&!columnList[3].isPk=&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&columnList[3].isUpdate=1&!columnList[3].isList=&columnList[3].isList=1&!columnList[3].isQuery=&columnList[3].isQuery=1&columnList[3].queryType=LIKE&!columnList[3].isEdit=&columnList[3].isEdit=1&!columnList[3].isRequired=&columnList[3].showType=input&columnList[3].optionMap['gridRowCol']=6/4/8&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[4].id=&columnList[4].status=&columnList[4].columnSort=50&columnList[4].columnName=sex&columnList[4].comments=sex&columnList[4].columnType=varchar(50)&columnList[4].attrType=String&columnList[4].fullAttrName=sex&!columnList[4].isPk=&!columnList[4].isInsert=&columnList[4].isInsert=1&!columnList[4].isUpdate=&columnList[4].isUpdate=1&!columnList[4].isList=&columnList[4].isList=1&!columnList[4].isQuery=&columnList[4].isQuery=1&columnList[4].queryType=EQ&!columnList[4].isEdit=&columnList[4].isEdit=1&!columnList[4].isRequired=&columnList[4].showType=input&columnList[4].optionMap['gridRowCol']=6/4/8&!columnList[4].optionMap['isNewLine']=&columnList[4].optionMap['dictName']=&columnList[4].optionMap['dictType']=&!columnList[4].optionMap['fieldValid']=&columnList[5].id=&columnList[5].status=&columnList[5].columnSort=60&columnList[5].columnName=age&columnList[5].comments=age&columnList[5].columnType=varchar(50)&columnList[5].attrType=String&columnList[5].fullAttrName=age&!columnList[5].isPk=&!columnList[5].isInsert=&columnList[5].isInsert=1&!columnList[5].isUpdate=&columnList[5].isUpdate=1&!columnList[5].isList=&columnList[5].isList=1&!columnList[5].isQuery=&columnList[5].isQuery=1&columnList[5].queryType=EQ&!columnList[5].isEdit=&columnList[5].isEdit=1&!columnList[5].isRequired=&columnList[5].showType=input&columnList[5].optionMap['gridRowCol']=6/4/8&!columnList[5].optionMap['isNewLine']=&columnList[5].optionMap['dictName']=&columnList[5].optionMap['dictType']=&!columnList[5].optionMap['fieldValid']=&columnList[6].id=&columnList[6].status=&columnList[6].columnSort=70&columnList[6].columnName=zhiwei&columnList[6].comments=zhiwei&columnList[6].columnType=varchar(50)&columnList[6].attrType=String&columnList[6].fullAttrName=zhiwei&!columnList[6].isPk=&!columnList[6].isInsert=&columnList[6].isInsert=1&!columnList[6].isUpdate=&columnList[6].isUpdate=1&!columnList[6].isList=&columnList[6].isList=1&!columnList[6].isQuery=&columnList[6].isQuery=1&columnList[6].queryType=EQ&!columnList[6].isEdit=&columnList[6].isEdit=1&!columnList[6].isRequired=&columnList[6].showType=input&columnList[6].optionMap['gridRowCol']=6/4/8&!columnList[6].optionMap['isNewLine']=&columnList[6].optionMap['dictName']=&columnList[6].optionMap['dictType']=&!columnList[6].optionMap['fieldValid']=&columnList[7].id=&columnList[7].status=&columnList[7].columnSort=80&columnList[7].columnName=shifoubumenlingdao&columnList[7].comments=shifoubumenlingdao&columnList[7].columnType=varchar(50)&columnList[7].attrType=String&columnList[7].fullAttrName=shifoubumenlingdao&!columnList[7].isPk=&!columnList[7].isInsert=&columnList[7].isInsert=1&!columnList[7].isUpdate=&columnList[7].isUpdate=1&!columnList[7].isList=&columnList[7].isList=1&!columnList[7].isQuery=&columnList[7].isQuery=1&columnList[7].queryType=EQ&!columnList[7].isEdit=&columnList[7].isEdit=1&!columnList[7].isRequired=&columnList[7].showType=input&columnList[7].optionMap['gridRowCol']=6/4/8&!columnList[7].optionMap['isNewLine']=&columnList[7].optionMap['dictName']=&columnList[7].optionMap['dictType']=&!columnList[7].optionMap['fieldValid']=&columnList[8].id=&columnList[8].status=&columnList[8].columnSort=90&columnList[8].columnName=loginname&columnList[8].comments=loginname&columnList[8].columnType=varchar(50)&columnList[8].attrType=String&columnList[8].fullAttrName=loginname&!columnList[8].isPk=&!columnList[8].isInsert=&columnList[8].isInsert=1&!columnList[8].isUpdate=&columnList[8].isUpdate=1&!columnList[8].isList=&columnList[8].isList=1&!columnList[8].isQuery=&columnList[8].isQuery=1&columnList[8].queryType=EQ&!columnList[8].isEdit=&columnList[8].isEdit=1&!columnList[8].isRequired=&columnList[8].showType=input&columnList[8].optionMap['gridRowCol']=6/4/8&!columnList[8].optionMap['isNewLine']=&columnList[8].optionMap['dictName']=&columnList[8].optionMap['dictType']=&!columnList[8].optionMap['fieldValid']=&columnList[9].id=&columnList[9].status=&columnList[9].columnSort=100&columnList[9].columnName=loginpw&columnList[9].comments=loginpw&columnList[9].columnType=varchar(50)&columnList[9].attrType=String&columnList[9].fullAttrName=loginpw&!columnList[9].isPk=&!columnList[9].isInsert=&columnList[9].isInsert=1&!columnList[9].isUpdate=&columnList[9].isUpdate=1&!columnList[9].isList=&columnList[9].isList=1&!columnList[9].isQuery=&columnList[9].isQuery=1&columnList[9].queryType=EQ&!columnList[9].isEdit=&columnList[9].isEdit=1&!columnList[9].isRequired=&columnList[9].showType=input&columnList[9].optionMap['gridRowCol']=6/4/8&!columnList[9].optionMap['isNewLine']=&columnList[9].optionMap['dictName']=&columnList[9].optionMap['dictType']=&!columnList[9].optionMap['fieldValid']=&columnList[10].id=&columnList[10].status=&columnList[10].columnSort=110&columnList[10].columnName=del&columnList[10].comments=del&columnList[10].columnType=varchar(50)&columnList[10].attrType=String&columnList[10].fullAttrName=del&!columnList[10].isPk=&!columnList[10].isInsert=&columnList[10].isInsert=1&!columnList[10].isUpdate=&columnList[10].isUpdate=1&!columnList[10].isList=&columnList[10].isList=1&!columnList[10].isQuery=&columnList[10].isQuery=1&columnList[10].queryType=EQ&!columnList[10].isEdit=&columnList[10].isEdit=1&!columnList[10].isRequired=&columnList[10].showType=input&columnList[10].optionMap['gridRowCol']=6/4/8&!columnList[10].optionMap['isNewLine']=&columnList[10].optionMap['dictName']=&columnList[10].optionMap['dictType']=&!columnList[10].optionMap['fieldValid']=&tplCategory=&packageName=com.jeesite.modules&moduleName=t&subModuleName=&functionName=t_yuangong&functionNameSimple=t_yuangong&genBaseDir=C:\Users\Lx\work2\web&!optionMap['isHaveDisableEnable']=&optionMap['isHaveDisableEnable']=0&!optionMap['isHaveDelete']=&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&!optionMap['isImageUpload']=&optionMap['isImageUpload']=0&!optionMap['isFileUpload']=&optionMap['isFileUpload']=0&!optionMap['isBpmForm']=&optionMap['isBpmForm']=0&optionMap['bpmFormKey']=&genFlag=0&!replaceFile=0(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 450(Long)
2021-01-08 21:16:18.348 DEBUG 26564 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:16:18.371 DEBUG 26564 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:16:18.371  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:16:18.373 DEBUG 26564 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:16:18.374 DEBUG 26564 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:16:18.380 DEBUG 26564 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:16:18.382 DEBUG 26564 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:16:18.386 DEBUG 26564 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:16:18.389 DEBUG 26564 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:16:18.394 DEBUG 26564 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:16:18.395 DEBUG 26564 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:16:18.412 DEBUG 26564 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:16:18.434 DEBUG 26564 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:16:18.438 DEBUG 26564 [nio-8980-exec-4] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 21:16:18.439 DEBUG 26564 [nio-8980-exec-4] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_yuangong(String), t_yuangong(String)
2021-01-08 21:16:18.442 DEBUG 26564 [nio-8980-exec-4] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 21:16:18.449 DEBUG 26564 [nio-8980-exec-4] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 21:16:18.450 DEBUG 26564 [nio-8980-exec-4] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:16:18.454 DEBUG 26564 [nio-8980-exec-4] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 11
2021-01-08 21:16:18.461 DEBUG 26564 [nio-8980-exec-4] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 21:16:18.462 DEBUG 26564 [nio-8980-exec-4] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:16:18.464 DEBUG 26564 [nio-8980-exec-4] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 2
2021-01-08 21:16:18.470 DEBUG 26564 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:16:18.470 DEBUG 26564 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will not be managed by Spring
2021-01-08 21:16:18.483 DEBUG 26564 [nio-8980-exec-4] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:16:18.484 DEBUG 26564 [nio-8980-exec-4] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 21:16:18.495 DEBUG 26564 [nio-8980-exec-4] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 21:16:18.500 DEBUG 26564 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:16:18.500 DEBUG 26564 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will not be managed by Spring
2021-01-08 21:16:18.508 DEBUG 26564 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:16:18.509 DEBUG 26564 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 21:16:18.513 DEBUG 26564 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 4
2021-01-08 21:16:18.517 DEBUG 26564 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:16:18.524 DEBUG 26564 [nio-8980-exec-4] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 21:16:18.525 DEBUG 26564 [nio-8980-exec-4] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 21:16:18.528 DEBUG 26564 [nio-8980-exec-4] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 21:16:18.532 INFO  26564 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:16:18.565 DEBUG 26564 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:16:18.562  用时: 191毫秒  URI: /js/a/gen/genTable/form  总内存: 617MB  已用内存: 481.245MB
2021-01-08 21:16:18.568 DEBUG 26564 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:16:18.568 DEBUG 26564 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:16:18.568 DEBUG 26564 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:16:18.569 DEBUG 26564 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347532583735111680(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:16:18.564(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=t_yuangong&op=step3(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 191(Long)
2021-01-08 21:16:18.570 DEBUG 26564 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:16:50.334 DEBUG 26564 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:16:50.334  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 21:16:50.336 DEBUG 26564 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:16:50.336 DEBUG 26564 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:16:50.341 DEBUG 26564 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:16:50.342 DEBUG 26564 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:16:50.344 DEBUG 26564 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:16:50.345 DEBUG 26564 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:16:50.348 DEBUG 26564 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:16:50.349 DEBUG 26564 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:16:50.353 DEBUG 26564 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:16:50.392 DEBUG 26564 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table` SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2021-01-08 21:16:50.394 DEBUG 26564 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:16:50.396 DEBUG 26564 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE `js_gen_table` SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ?
2021-01-08 21:16:50.397 DEBUG 26564 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: Tyuangong(String), t_yuangong(String), (String), eid(String), (String), crud(String), com.jeesite.modules(String), employee(String), (String), employee(String), employee(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 21:16:50.391(Timestamp), (String), t_yuangong(String)
2021-01-08 21:16:50.399 DEBUG 26564 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2021-01-08 21:16:50.401 DEBUG 26564 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:16:50.403 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:16:50.404 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), id(String), 10(Integer), int(String), id(String), id(String), id(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582120304640(String)
2021-01-08 21:16:50.406 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:16:50.409 DEBUG 26564 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:16:50.411 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:16:50.413 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), org_id(String), 20(Integer), int(String), org_id(String), org_id(String), orgId(String), Long(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"digits","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582204190720(String)
2021-01-08 21:16:50.416 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:16:50.417 DEBUG 26564 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:16:50.419 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:16:50.421 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), eid(String), 30(Integer), varchar(55)(String), eid(String), eid(String), eid(String), String(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582275493888(String)
2021-01-08 21:16:50.422 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:16:50.424 DEBUG 26564 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:16:50.426 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:16:50.428 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), name(String), 40(Integer), varchar(50)(String), name(String), name(String), name(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), LIKE(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582569095168(String)
2021-01-08 21:16:50.429 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:16:50.431 DEBUG 26564 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:16:50.432 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:16:50.434 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), sex(String), 50(Integer), varchar(50)(String), sex(String), sex(String), sex(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582594260992(String)
2021-01-08 21:16:50.435 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:16:50.437 DEBUG 26564 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:16:50.438 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:16:50.439 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), age(String), 60(Integer), varchar(50)(String), age(String), age(String), age(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582611038208(String)
2021-01-08 21:16:50.441 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:16:50.442 DEBUG 26564 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:16:50.443 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:16:50.444 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), zhiwei(String), 70(Integer), varchar(50)(String), zhiwei(String), zhiwei(String), zhiwei(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582627815424(String)
2021-01-08 21:16:50.454 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:16:50.455 DEBUG 26564 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:16:50.457 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:16:50.457 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), shifoubumenlingdao(String), 80(Integer), varchar(50)(String), shifoubumenlingdao(String), shifoubumenlingdao(String), shifoubumenlingdao(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582661369856(String)
2021-01-08 21:16:50.458 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:16:50.464 DEBUG 26564 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:16:50.465 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:16:50.466 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), loginname(String), 90(Integer), varchar(50)(String), loginname(String), loginname(String), loginname(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582682341376(String)
2021-01-08 21:16:50.467 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:16:50.468 DEBUG 26564 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:16:50.469 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:16:50.469 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), loginpw(String), 100(Integer), varchar(50)(String), loginpw(String), loginpw(String), loginpw(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582703312896(String)
2021-01-08 21:16:50.470 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:16:50.471 DEBUG 26564 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:16:50.472 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:16:50.473 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), del(String), 110(Integer), varchar(50)(String), del(String), del(String), del(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582732673024(String)
2021-01-08 21:16:50.473 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:16:50.489 DEBUG 26564 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:16:50.490 DEBUG 26564 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:16:50.495 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC
2021-01-08 21:16:50.495 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:16:50.497 DEBUG 26564 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 0
2021-01-08 21:16:50.502 DEBUG 26564 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TyuangongDao.xml
2021-01-08 21:16:50.505 DEBUG 26564 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.employee.dao.TyuangongDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tyuangong">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 21:16:50.506 DEBUG 26564 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TyuangongDao.xml
2021-01-08 21:16:50.507 DEBUG 26564 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tyuangong.java
2021-01-08 21:16:50.584 DEBUG 26564 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.entity;

import org.hibernate.validator.constraints.Length;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * employeeEntity
 * @author LX
 * @version 2021-01-08
 */
@Table(name="t_yuangong", alias="a", columns={
		@Column(name="id", attrName="id", label="id", isPK=true),
		@Column(name="org_id", attrName="orgId", label="org_id"),
		@Column(name="eid", attrName="eid", label="eid", isPK=true),
		@Column(name="name", attrName="name", label="name", queryType=QueryType.LIKE),
		@Column(name="sex", attrName="sex", label="sex"),
		@Column(name="age", attrName="age", label="age"),
		@Column(name="zhiwei", attrName="zhiwei", label="zhiwei"),
		@Column(name="shifoubumenlingdao", attrName="shifoubumenlingdao", label="shifoubumenlingdao"),
		@Column(name="loginname", attrName="loginname", label="loginname"),
		@Column(name="loginpw", attrName="loginpw", label="loginpw"),
		@Column(name="del", attrName="del", label="del"),
	}, orderBy="a.id DESC, a.eid DESC"
)
public class Tyuangong extends DataEntity<Tyuangong> {
	
	private static final long serialVersionUID = 1L;
	private Long orgId;		// org_id
	private String eid;		// eid
	private String name;		// name
	private String sex;		// sex
	private String age;		// age
	private String zhiwei;		// zhiwei
	private String shifoubumenlingdao;		// shifoubumenlingdao
	private String loginname;		// loginname
	private String loginpw;		// loginpw
	private String del;		// del
	
	public Tyuangong() {
		this(null, null);
	}

	public Tyuangong(Long id, String eid){
		this.id = id;
		this.eid = eid;
	}
	
	public Long getOrgId() {
		return orgId;
	}

	public void setOrgId(Long orgId) {
		this.orgId = orgId;
	}
	
	public String getEid() {
		return eid;
	}

	public void setEid(String eid) {
		this.eid = eid;
	}
	
	@Length(min=0, max=50, message="name长度不能超过 50 个字符")
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}
	
	@Length(min=0, max=50, message="sex长度不能超过 50 个字符")
	public String getSex() {
		return sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}
	
	@Length(min=0, max=50, message="age长度不能超过 50 个字符")
	public String getAge() {
		return age;
	}

	public void setAge(String age) {
		this.age = age;
	}
	
	@Length(min=0, max=50, message="zhiwei长度不能超过 50 个字符")
	public String getZhiwei() {
		return zhiwei;
	}

	public void setZhiwei(String zhiwei) {
		this.zhiwei = zhiwei;
	}
	
	@Length(min=0, max=50, message="shifoubumenlingdao长度不能超过 50 个字符")
	public String getShifoubumenlingdao() {
		return shifoubumenlingdao;
	}

	public void setShifoubumenlingdao(String shifoubumenlingdao) {
		this.shifoubumenlingdao = shifoubumenlingdao;
	}
	
	@Length(min=0, max=50, message="loginname长度不能超过 50 个字符")
	public String getLoginname() {
		return loginname;
	}

	public void setLoginname(String loginname) {
		this.loginname = loginname;
	}
	
	@Length(min=0, max=50, message="loginpw长度不能超过 50 个字符")
	public String getLoginpw() {
		return loginpw;
	}

	public void setLoginpw(String loginpw) {
		this.loginpw = loginpw;
	}
	
	@Length(min=0, max=50, message="del长度不能超过 50 个字符")
	public String getDel() {
		return del;
	}

	public void setDel(String del) {
		this.del = del;
	}
	
}
2021-01-08 21:16:50.587 DEBUG 26564 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tyuangong.java
2021-01-08 21:16:50.588 DEBUG 26564 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TyuangongDao.java
2021-01-08 21:16:50.596 DEBUG 26564 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.employee.entity.Tyuangong;

/**
 * employeeDAO接口
 * @author LX
 * @version 2021-01-08
 */
@MyBatisDao
public interface TyuangongDao extends CrudDao<Tyuangong> {
	
}
2021-01-08 21:16:50.598 DEBUG 26564 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TyuangongDao.java
2021-01-08 21:16:50.598 DEBUG 26564 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\service\TyuangongService.java
2021-01-08 21:16:50.619 DEBUG 26564 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.service;

import java.util.List;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.jeesite.common.entity.Page;
import com.jeesite.common.service.CrudService;
import com.jeesite.modules.employee.entity.Tyuangong;
import com.jeesite.modules.employee.dao.TyuangongDao;

/**
 * employeeService
 * @author LX
 * @version 2021-01-08
 */
@Service
@Transactional(readOnly=true)
public class TyuangongService extends CrudService<TyuangongDao, Tyuangong> {
	
	/**
	 * 获取单条数据
	 * @param tyuangong
	 * @return
	 */
	@Override
	public Tyuangong get(Tyuangong tyuangong) {
		return super.get(tyuangong);
	}
	
	/**
	 * 查询分页数据
	 * @param tyuangong 查询条件
	 * @param tyuangong.page 分页对象
	 * @return
	 */
	@Override
	public Page<Tyuangong> findPage(Tyuangong tyuangong) {
		return super.findPage(tyuangong);
	}
	
	/**
	 * 保存数据（插入或更新）
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void save(Tyuangong tyuangong) {
		super.save(tyuangong);
	}
	
	/**
	 * 更新状态
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void updateStatus(Tyuangong tyuangong) {
		super.updateStatus(tyuangong);
	}
	
	/**
	 * 删除数据
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void delete(Tyuangong tyuangong) {
		super.delete(tyuangong);
	}
	
}
2021-01-08 21:16:50.621 DEBUG 26564 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\service\TyuangongService.java
2021-01-08 21:16:50.622 DEBUG 26564 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\web\TyuangongController.java
2021-01-08 21:16:50.629 DEBUG 26564 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.jeesite.common.config.Global;
import com.jeesite.common.entity.Page;
import com.jeesite.common.web.BaseController;
import com.jeesite.modules.employee.entity.Tyuangong;
import com.jeesite.modules.employee.service.TyuangongService;

/**
 * employeeController
 * @author LX
 * @version 2021-01-08
 */
@Controller
@RequestMapping(value = "${adminPath}/employee/tyuangong")
public class TyuangongController extends BaseController {

	@Autowired
	private TyuangongService tyuangongService;
	
	/**
	 * 获取数据
	 */
	@ModelAttribute
	public Tyuangong get(Long id, String eid, boolean isNewRecord) {
		Tyuangong tyuangong = new Tyuangong();
		tyuangong.setId(id);
		tyuangong.setEid(eid);
		tyuangong.setIsNewRecord(isNewRecord);
		return tyuangongService.getAndValid(tyuangong);
	}
	
	/**
	 * 查询列表
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = {"list", ""})
	public String list(Tyuangong tyuangong, Model model) {
		model.addAttribute("tyuangong", tyuangong);
		return "modules/employee/tyuangongList";
	}
	
	/**
	 * 查询列表数据
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = "listData")
	@ResponseBody
	public Page<Tyuangong> listData(Tyuangong tyuangong, HttpServletRequest request, HttpServletResponse response) {
		tyuangong.setPage(new Page<>(request, response));
		Page<Tyuangong> page = tyuangongService.findPage(tyuangong);
		return page;
	}

	/**
	 * 查看编辑表单
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = "form")
	public String form(Tyuangong tyuangong, Model model) {
		model.addAttribute("tyuangong", tyuangong);
		return "modules/employee/tyuangongForm";
	}

	/**
	 * 保存数据
	 */
	@RequiresPermissions("employee:tyuangong:edit")
	@PostMapping(value = "save")
	@ResponseBody
	public String save(@Validated Tyuangong tyuangong) {
		tyuangongService.save(tyuangong);
		return renderResult(Global.TRUE, text("保存employee成功！"));
	}
	
	/**
	 * 删除数据
	 */
	@RequiresPermissions("employee:tyuangong:edit")
	@RequestMapping(value = "delete")
	@ResponseBody
	public String delete(Tyuangong tyuangong) {
		tyuangongService.delete(tyuangong);
		return renderResult(Global.TRUE, text("删除employee成功！"));
	}
	
}
2021-01-08 21:16:50.631 DEBUG 26564 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\web\TyuangongController.java
2021-01-08 21:16:50.631 DEBUG 26564 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongList.html
2021-01-08 21:16:50.653 DEBUG 26564 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: 'employee管理', libs: ['dataGrid']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header">
			<div class="box-title">
				<i class="fa icon-notebook"></i> ${text('employee管理')}
			</div>
			<div class="box-tools pull-right">
				<a href="#" class="btn btn-default" id="btnSearch" title="${text('查询')}"><i class="fa fa-filter"></i> ${text('查询')}</a>
				<% if(hasPermi('employee:tyuangong:edit')){ %>
					<a href="${ctx}/employee/tyuangong/form" class="btn btn-default btnTool" title="${text('新增employee')}"><i class="fa fa-plus"></i> ${text('新增')}</a>
				<% } %>
				<a href="#" class="btn btn-default" id="btnSetting" title="${text('设置')}"><i class="fa fa-navicon"></i></a>
			</div>
		</div>
		<div class="box-body">
			<#form:form id="searchForm" model="${tyuangong}" action="${ctx}/employee/tyuangong/listData" method="post" class="form-inline hide"
					data-page-no="${parameter.pageNo}" data-page-size="${parameter.pageSize}" data-order-by="${parameter.orderBy}">
				<div class="form-group">
					<label class="control-label">${text('org_id')}：</label>
					<div class="control-inline">
						<#form:input path="orgId" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('name')}：</label>
					<div class="control-inline">
						<#form:input path="name" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('sex')}：</label>
					<div class="control-inline">
						<#form:input path="sex" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('age')}：</label>
					<div class="control-inline">
						<#form:input path="age" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('zhiwei')}：</label>
					<div class="control-inline">
						<#form:input path="zhiwei" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('shifoubumenlingdao')}：</label>
					<div class="control-inline">
						<#form:input path="shifoubumenlingdao" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('loginname')}：</label>
					<div class="control-inline">
						<#form:input path="loginname" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('loginpw')}：</label>
					<div class="control-inline">
						<#form:input path="loginpw" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('del')}：</label>
					<div class="control-inline">
						<#form:input path="del" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<button type="submit" class="btn btn-primary btn-sm">${text('查询')}</button>
					<button type="reset" class="btn btn-default btn-sm">${text('重置')}</button>
				</div>
			</#form:form>
			<table id="dataGrid"></table>
			<div id="dataGridPage"></div>
		</div>
	</div>
</div>
<% } %>
<script>
// 初始化DataGrid对象
$('#dataGrid').dataGrid({
	searchForm: $("#searchForm"),
	columnModel: [
		{header:'${text("org_id")}', name:'orgId', index:'a.org_id', width:150, align:"left", frozen:true, formatter: function(val, obj, row, act){
			return '<a href="${ctx}/employee/tyuangong/form?id='+row.id+'&eid='+row.eid+'" class="btnList" data-title="${text("编辑employee")}">'+(val||row.id)+'</a>';
		}},
		{header:'${text("name")}', name:'name', index:'a.name', width:150, align:"left"},
		{header:'${text("sex")}', name:'sex', index:'a.sex', width:150, align:"left"},
		{header:'${text("age")}', name:'age', index:'a.age', width:150, align:"left"},
		{header:'${text("zhiwei")}', name:'zhiwei', index:'a.zhiwei', width:150, align:"left"},
		{header:'${text("shifoubumenlingdao")}', name:'shifoubumenlingdao', index:'a.shifoubumenlingdao', width:150, align:"left"},
		{header:'${text("loginname")}', name:'loginname', index:'a.loginname', width:150, align:"left"},
		{header:'${text("loginpw")}', name:'loginpw', index:'a.loginpw', width:150, align:"left"},
		{header:'${text("del")}', name:'del', index:'a.del', width:150, align:"left"},
		{header:'${text("操作")}', name:'actions', width:120, sortable:false, title:false, formatter: function(val, obj, row, act){
			var actions = [];
			<% if(hasPermi('employee:tyuangong:edit')){ %>
				actions.push('<a href="${ctx}/employee/tyuangong/form?id='+row.id+'&eid='+row.eid+'" class="btnList" title="${text("编辑employee")}"><i class="fa fa-pencil"></i></a>&nbsp;');
				actions.push('<a href="${ctx}/employee/tyuangong/delete?id='+row.id+'&eid='+row.eid+'" class="btnList" title="${text("删除employee")}" data-confirm="${text("确认要删除该employee吗？")}"><i class="fa fa-trash-o"></i></a>&nbsp;');
			<% } %>
			return actions.join('');
		}}
	],
	// 加载成功后执行事件
	ajaxSuccess: function(data){
		
	}
});
</script>
2021-01-08 21:16:50.655 DEBUG 26564 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongList.html
2021-01-08 21:16:50.655 DEBUG 26564 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongForm.html
2021-01-08 21:16:50.680 DEBUG 26564 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: 'employee管理', libs: ['validate']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header with-border">
			<div class="box-title">
				<i class="fa icon-note"></i> ${text(tyuangong.isNewRecord ? '新增employee' : '编辑employee')}
			</div>
			<div class="box-tools pull-right">
				<button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
			</div>
		</div>
		<#form:form id="inputForm" model="${tyuangong}" action="${ctx}/employee/tyuangong/save" method="post" class="form-horizontal">
			<div class="box-body">
				<div class="form-unit">${text('基本信息')}</div>
				<#form:hidden path="id"/>
				<div class="row">
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('org_id')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="orgId" class="form-control digits"/>
							</div>
						</div>
					</div>
				<#form:hidden path="eid"/>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('name')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="name" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('sex')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="sex" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('age')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="age" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('zhiwei')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="zhiwei" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('shifoubumenlingdao')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="shifoubumenlingdao" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('loginname')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="loginname" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('loginpw')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="loginpw" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('del')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="del" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="box-footer">
				<div class="row">
					<div class="col-sm-offset-2 col-sm-10">
						<% if (hasPermi('employee:tyuangong:edit')){ %>
							<button type="submit" class="btn btn-sm btn-primary" id="btnSubmit"><i class="fa fa-check"></i> ${text('保 存')}</button>&nbsp;
						<% } %>
						<button type="button" class="btn btn-sm btn-default" id="btnCancel" onclick="js.closeCurrentTabPage()"><i class="fa fa-reply-all"></i> ${text('关 闭')}</button>
					</div>
				</div>
			</div>
		</#form:form>
	</div>
</div>
<% } %>
<script>
$("#inputForm").validate({
	submitHandler: function(form){
		js.ajaxSubmitForm($(form), function(data){
			js.showMessage(data.message);
			if(data.result == Global.TRUE){
				js.closeCurrentTabPage(function(contentWindow){
					contentWindow.page();
				});
			}
		}, "json");
    }
});
</script>
2021-01-08 21:16:50.682 DEBUG 26564 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongForm.html
2021-01-08 21:16:50.691 DEBUG 26564 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:16:50.686  用时: 352毫秒  URI: /js/a/gen/genTable/save  总内存: 617MB  已用内存: 521.373MB
2021-01-08 21:16:50.692 DEBUG 26564 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:16:50.692 DEBUG 26564 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@59d7d574] will be managed by Spring
2021-01-08 21:16:50.693 DEBUG 26564 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:16:50.706 DEBUG 26564 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347532718477127680(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:16:50.689(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=t_yuangong&comments=t_yuangong&className=Tyuangong&functionAuthor=LX&parentTableName=&parentTableFkName=eid&remarks=&columnList[0].id=1347532582120304640&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=id&columnList[0].columnType=int&columnList[0].attrType=Long&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=6/4/8&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1347532582204190720&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=org_id&columnList[1].comments=org_id&columnList[1].columnType=int&columnList[1].attrType=Long&columnList[1].fullAttrName=orgId&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=6/4/8&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[1].optionMap['fieldValid']=digits&columnList[2].id=1347532582275493888&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=eid&columnList[2].comments=eid&columnList[2].columnType=varchar(55)&columnList[2].attrType=String&columnList[2].fullAttrName=eid&!columnList[2].isPk=&columnList[2].isPk=1&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&!columnList[2].isList=&!columnList[2].isQuery=&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].isRequired=1&columnList[2].showType=hidden&columnList[2].optionMap['gridRowCol']=6/4/8&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[2].optionMap['fieldValid']=abc&columnList[3].id=1347532582569095168&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=name&columnList[3].comments=name&columnList[3].columnType=varchar(50)&columnList[3].attrType=String&columnList[3].fullAttrName=name&!columnList[3].isPk=&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&columnList[3].isUpdate=1&!columnList[3].isList=&columnList[3].isList=1&!columnList[3].isQuery=&columnList[3].isQuery=1&columnList[3].queryType=LIKE&!columnList[3].isEdit=&columnList[3].isEdit=1&!columnList[3].isRequired=&columnList[3].showType=input&columnList[3].optionMap['gridRowCol']=6/4/8&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[4].id=1347532582594260992&columnList[4].status=&columnList[4].columnSort=50&columnList[4].columnName=sex&columnList[4].comments=sex&columnList[4].columnType=varchar(50)&columnList[4].attrType=String&columnList[4].fullAttrName=sex&!columnList[4].isPk=&!columnList[4].isInsert=&columnList[4].isInsert=1&!columnList[4].isUpdate=&columnList[4].isUpdate=1&!columnList[4].isList=&columnList[4].isList=1&!columnList[4].isQuery=&columnList[4].isQuery=1&columnList[4].queryType=EQ&!columnList[4].isEdit=&columnList[4].isEdit=1&!columnList[4].isRequired=&columnList[4].showType=input&columnList[4].optionMap['gridRowCol']=6/4/8&!columnList[4].optionMap['isNewLine']=&columnList[4].optionMap['dictName']=&columnList[4].optionMap['dictType']=&!columnList[4].optionMap['fieldValid']=&columnList[5].id=1347532582611038208&columnList[5].status=&columnList[5].columnSort=60&columnList[5].columnName=age&columnList[5].comments=age&columnList[5].columnType=varchar(50)&columnList[5].attrType=String&columnList[5].fullAttrName=age&!columnList[5].isPk=&!columnList[5].isInsert=&columnList[5].isInsert=1&!columnList[5].isUpdate=&columnList[5].isUpdate=1&!columnList[5].isList=&columnList[5].isList=1&!columnList[5].isQuery=&columnList[5].isQuery=1&columnList[5].queryType=EQ&!columnList[5].isEdit=&columnList[5].isEdit=1&!columnList[5].isRequired=&columnList[5].showType=input&columnList[5].optionMap['gridRowCol']=6/4/8&!columnList[5].optionMap['isNewLine']=&columnList[5].optionMap['dictName']=&columnList[5].optionMap['dictType']=&!columnList[5].optionMap['fieldValid']=&columnList[6].id=1347532582627815424&columnList[6].status=&columnList[6].columnSort=70&columnList[6].columnName=zhiwei&columnList[6].comments=zhiwei&columnList[6].columnType=varchar(50)&columnList[6].attrType=String&columnList[6].fullAttrName=zhiwei&!columnList[6].isPk=&!columnList[6].isInsert=&columnList[6].isInsert=1&!columnList[6].isUpdate=&columnList[6].isUpdate=1&!columnList[6].isList=&columnList[6].isList=1&!columnList[6].isQuery=&columnList[6].isQuery=1&columnList[6].queryType=EQ&!columnList[6].isEdit=&columnList[6].isEdit=1&!columnList[6].isRequired=&columnList[6].showType=input&columnList[6].optionMap['gridRowCol']=6/4/8&!columnList[6].optionMap['isNewLine']=&columnList[6].optionMap['dictName']=&columnList[6].optionMap['dictType']=&!columnList[6].optionMap['fieldValid']=&columnList[7].id=1347532582661369856&columnList[7].status=&columnList[7].columnSort=80&columnList[7].columnName=shifoubumenlingdao&columnList[7].comments=shifoubumenlingdao&columnList[7].columnType=varchar(50)&columnList[7].attrType=String&columnList[7].fullAttrName=shifoubumenlingdao&!columnList[7].isPk=&!columnList[7].isInsert=&columnList[7].isInsert=1&!columnList[7].isUpdate=&columnList[7].isUpdate=1&!columnList[7].isList=&columnList[7].isList=1&!columnList[7].isQuery=&columnList[7].isQuery=1&columnList[7].queryType=EQ&!columnList[7].isEdit=&columnList[7].isEdit=1&!columnList[7].isRequired=&columnList[7].showType=input&columnList[7].optionMap['gridRowCol']=6/4/8&!columnList[7].optionMap['isNewLine']=&columnList[7].optionMap['dictName']=&columnList[7].optionMap['dictType']=&!columnList[7].optionMap['fieldValid']=&columnList[8].id=1347532582682341376&columnList[8].status=&columnList[8].columnSort=90&columnList[8].columnName=loginname&columnList[8].comments=loginname&columnList[8].columnType=varchar(50)&columnList[8].attrType=String&columnList[8].fullAttrName=loginname&!columnList[8].isPk=&!columnList[8].isInsert=&columnList[8].isInsert=1&!columnList[8].isUpdate=&columnList[8].isUpdate=1&!columnList[8].isList=&columnList[8].isList=1&!columnList[8].isQuery=&columnList[8].isQuery=1&columnList[8].queryType=EQ&!columnList[8].isEdit=&columnList[8].isEdit=1&!columnList[8].isRequired=&columnList[8].showType=input&columnList[8].optionMap['gridRowCol']=6/4/8&!columnList[8].optionMap['isNewLine']=&columnList[8].optionMap['dictName']=&columnList[8].optionMap['dictType']=&!columnList[8].optionMap['fieldValid']=&columnList[9].id=1347532582703312896&columnList[9].status=&columnList[9].columnSort=100&columnList[9].columnName=loginpw&columnList[9].comments=loginpw&columnList[9].columnType=varchar(50)&columnList[9].attrType=String&columnList[9].fullAttrName=loginpw&!columnList[9].isPk=&!columnList[9].isInsert=&columnList[9].isInsert=1&!columnList[9].isUpdate=&columnList[9].isUpdate=1&!columnList[9].isList=&columnList[9].isList=1&!columnList[9].isQuery=&columnList[9].isQuery=1&columnList[9].queryType=EQ&!columnList[9].isEdit=&columnList[9].isEdit=1&!columnList[9].isRequired=&columnList[9].showType=input&columnList[9].optionMap['gridRowCol']=6/4/8&!columnList[9].optionMap['isNewLine']=&columnList[9].optionMap['dictName']=&columnList[9].optionMap['dictType']=&!columnList[9].optionMap['fieldValid']=&columnList[10].id=1347532582732673024&columnList[10].status=&columnList[10].columnSort=110&columnList[10].columnName=del&columnList[10].comments=del&columnList[10].columnType=varchar(50)&columnList[10].attrType=String&columnList[10].fullAttrName=del&!columnList[10].isPk=&!columnList[10].isInsert=&columnList[10].isInsert=1&!columnList[10].isUpdate=&columnList[10].isUpdate=1&!columnList[10].isList=&columnList[10].isList=1&!columnList[10].isQuery=&columnList[10].isQuery=1&columnList[10].queryType=EQ&!columnList[10].isEdit=&columnList[10].isEdit=1&!columnList[10].isRequired=&columnList[10].showType=input&columnList[10].optionMap['gridRowCol']=6/4/8&!columnList[10].optionMap['isNewLine']=&columnList[10].optionMap['dictName']=&columnList[10].optionMap['dictType']=&!columnList[10].optionMap['fieldValid']=&tplCategory=crud&packageName=com.jeesite.modules&moduleName=employee&subModuleName=&functionName=employee&functionNameSimple=employee&genBaseDir=C:\Users\Lx\work2\web&!optionMap['isHaveDisableEnable']=&optionMap['isHaveDisableEnable']=0&!optionMap['isHaveDelete']=&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&!optionMap['isImageUpload']=&optionMap['isImageUpload']=0&!optionMap['isFileUpload']=&optionMap['isFileUpload']=0&!optionMap['isBpmForm']=&optionMap['isBpmForm']=0&optionMap['bpmFormKey']=&genFlag=2&!replaceFile=0(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 352(Long)
2021-01-08 21:16:50.715 DEBUG 26564 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:16:50.747 DEBUG 26564 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:16:50.747  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:16:50.758 DEBUG 26564 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:16:50.759 DEBUG 26564 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@56d046c2] will be managed by Spring
2021-01-08 21:16:50.786 DEBUG 26564 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:16:50.787 DEBUG 26564 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:16:50.789 DEBUG 26564 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:16:50.790 DEBUG 26564 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:16:50.793 DEBUG 26564 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:16:50.802 DEBUG 26564 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:16:50.801  用时: 54毫秒  URI: /js/a/gen/genTable/listData  总内存: 617MB  已用内存: 525.343MB
2021-01-08 21:16:50.807 DEBUG 26564 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:16:50.807 DEBUG 26564 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@56d046c2] will be managed by Spring
2021-01-08 21:16:50.807 DEBUG 26564 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:16:50.808 DEBUG 26564 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347532718951084032(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:16:50.802(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 54(Long)
2021-01-08 21:16:50.810 DEBUG 26564 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:16:56.025 DEBUG 26564 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:16:56.025  URI: /js/a/gen/genTable/createMenu  IP: 127.0.0.1
2021-01-08 21:16:56.028 DEBUG 26564 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:16:56.028 DEBUG 26564 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@56d046c2] will be managed by Spring
2021-01-08 21:16:56.031 DEBUG 26564 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:16:56.032 DEBUG 26564 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:16:56.033 DEBUG 26564 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:16:56.034 DEBUG 26564 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:16:56.038 DEBUG 26564 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:16:56.040 DEBUG 26564 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:16:56.041 DEBUG 26564 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:16:56.052 INFO  26564 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: redirect:/a/sys/menu/form?menuName=employee&menuHref=/employee/tyuangong/list&permission=employee:tyuangong:view,employee:tyuangong:edit <<<<<<<<< /js/a/gen/genTable/createMenu >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#createMenu(GenTable, Model)
2021-01-08 21:16:56.064 DEBUG 26564 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:16:56.062  用时: 37毫秒  URI: /js/a/gen/genTable/createMenu  总内存: 617MB  已用内存: 528.558MB
2021-01-08 21:16:56.066 DEBUG 26564 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:16:56.067 DEBUG 26564 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@56d046c2] will be managed by Spring
2021-01-08 21:16:56.067 DEBUG 26564 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:16:56.068 DEBUG 26564 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347532741021511680(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:16:56.064(Timestamp), /js/a/gen/genTable/createMenu(String), GET(String), tableName=t_yuangong(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 37(Long)
2021-01-08 21:16:56.069 DEBUG 26564 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:16:56.075 DEBUG 26564 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:16:56.075  URI: /js/a/sys/menu/form  IP: 127.0.0.1
2021-01-08 21:16:56.088 DEBUG 26564 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} ORDER BY a.tree_sort DESC
2021-01-08 21:16:56.088 DEBUG 26564 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@56d046c2] will be managed by Spring
2021-01-08 21:16:56.097 DEBUG 26564 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? ORDER BY a.tree_sort DESC LIMIT 1
2021-01-08 21:16:56.097 DEBUG 26564 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String)
2021-01-08 21:16:56.099 DEBUG 26564 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 1
2021-01-08 21:16:56.102 DEBUG 26564 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:16:56.102 DEBUG 26564 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@56d046c2] will be managed by Spring
2021-01-08 21:16:56.107 DEBUG 26564 [nio-8980-exec-7] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2021-01-08 21:16:56.107 DEBUG 26564 [nio-8980-exec-7] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2021-01-08 21:16:56.111 DEBUG 26564 [nio-8980-exec-7] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2021-01-08 21:16:56.113 INFO  26564 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/menuForm <<<<<<<<< /js/a/sys/menu/form >>>>>>>>> com.jeesite.modules.sys.web.MenuController#form(Menu, Model)
2021-01-08 21:16:56.177 DEBUG 26564 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:16:56.176  用时: 101毫秒  URI: /js/a/sys/menu/form  总内存: 617MB  已用内存: 535.930MB
2021-01-08 21:16:56.182 DEBUG 26564 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:16:56.182 DEBUG 26564 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@56d046c2] will be managed by Spring
2021-01-08 21:16:56.183 DEBUG 26564 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:16:56.183 DEBUG 26564 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347532741495468032(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 21:16:56.177(Timestamp), /js/a/sys/menu/form(String), GET(String), menuName=employee&menuHref=/employee/tyuangong/list&permission=employee:tyuangong:view,employee:tyuangong:edit(String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 101(Long)
2021-01-08 21:16:56.185 DEBUG 26564 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:16:57.591 DEBUG 26564 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:16:57.591 DEBUG 26564 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@56d046c2] will be managed by Spring
2021-01-08 21:16:57.600 DEBUG 26564 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:16:57.600 DEBUG 26564 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 21:16:57.622 DEBUG 26564 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 73
2021-01-08 21:16:58.897 DEBUG 26564 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:16:58.897  URI: /js/a/sys/menu/createNextNode  IP: 127.0.0.1
2021-01-08 21:16:58.903 DEBUG 26564 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} ORDER BY a.tree_sort DESC
2021-01-08 21:16:58.904 DEBUG 26564 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@56d046c2] will be managed by Spring
2021-01-08 21:16:58.911 DEBUG 26564 [nio-8980-exec-6] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? ORDER BY a.tree_sort DESC LIMIT 1
2021-01-08 21:16:58.914 DEBUG 26564 [nio-8980-exec-6] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String)
2021-01-08 21:16:58.917 DEBUG 26564 [nio-8980-exec-6] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 1
2021-01-08 21:16:58.931 DEBUG 26564 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:16:58.927  用时: 30毫秒  URI: /js/a/sys/menu/createNextNode  总内存: 617MB  已用内存: 545.768MB
2021-01-08 21:16:58.933 DEBUG 26564 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:16:58.933 DEBUG 26564 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@56d046c2] will be managed by Spring
2021-01-08 21:16:58.934 DEBUG 26564 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:16:58.934 DEBUG 26564 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347532753042386944(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 21:16:58.93(Timestamp), /js/a/sys/menu/createNextNode(String), GET(String), parentCode=(String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 30(Long)
2021-01-08 21:16:58.936 DEBUG 26564 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:17:54.428 DEBUG 26564 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:17:54.428  URI: /js/a/sys/menu/save  IP: 127.0.0.1
2021-01-08 21:17:54.512 DEBUG 26564 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`menu_code` = #{menuCode}
2021-01-08 21:17:54.512 DEBUG 26564 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@56d046c2] will be managed by Spring
2021-01-08 21:17:54.517 DEBUG 26564 [nio-8980-exec-7] [com.jeesite.modules.sys.dao.MenuDao.get] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`menu_code` = ?
2021-01-08 21:17:54.517 DEBUG 26564 [nio-8980-exec-7] [com.jeesite.modules.sys.dao.MenuDao.get] - ==> Parameters: (String)
2021-01-08 21:17:54.519 DEBUG 26564 [nio-8980-exec-7] [com.jeesite.modules.sys.dao.MenuDao.get] - <==      Total: 0
2021-01-08 21:17:54.523 DEBUG 26564 [nio-8980-exec-7] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_menu` (`status`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`, `parent_code`, `parent_codes`, `tree_sort`, `tree_sorts`, `tree_leaf`, `tree_level`, `tree_names`, `menu_code`, `menu_name`, `menu_type`, `menu_href`, `menu_target`, `menu_icon`, `menu_color`, `menu_title`, `permission`, `weight`, `is_show`, `sys_code`, `module_codes`, `extend_s1`, `extend_s2`, `extend_s3`, `extend_s4`, `extend_s5`, `extend_s6`, `extend_s7`, `extend_s8`) VALUES (#{status}, #{createBy}, #{createDate}, #{updateBy}, #{updateDate}, #{remarks}, #{parentCode}, #{parentCodes}, #{treeSort}, #{treeSorts}, #{treeLeaf}, #{treeLevel}, #{treeNames}, #{menuCode}, #{menuNameOrig}, #{menuType}, #{menuHref}, #{menuTarget}, #{menuIcon}, #{menuColor}, #{menuTitle}, #{permission}, #{weight}, #{isShow}, #{sysCode}, #{moduleCodes}, #{extend.extendS1}, #{extend.extendS2}, #{extend.extendS3}, #{extend.extendS4}, #{extend.extendS5}, #{extend.extendS6}, #{extend.extendS7}, #{extend.extendS8})
2021-01-08 21:17:54.524 DEBUG 26564 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.insert     ] - ==>  Preparing: INSERT INTO `js_sys_menu` (`status`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`, `parent_code`, `parent_codes`, `tree_sort`, `tree_sorts`, `tree_leaf`, `tree_level`, `tree_names`, `menu_code`, `menu_name`, `menu_type`, `menu_href`, `menu_target`, `menu_icon`, `menu_color`, `menu_title`, `permission`, `weight`, `is_show`, `sys_code`, `module_codes`, `extend_s1`, `extend_s2`, `extend_s3`, `extend_s4`, `extend_s5`, `extend_s6`, `extend_s7`, `extend_s8`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:17:54.525 DEBUG 26564 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.insert     ] - ==> Parameters: 0(String), system(String), 2021-01-08 21:17:54.522(Timestamp), system(String), 2021-01-08 21:17:54.522(Timestamp), (String), 0(String), 0,(String), 9040(Integer), 0000009040,(String), 1(String), 0(Integer), 员工信息(String), 1347532986212134912(String), 员工信息(String), 1(String), /employee/tyuangong/list(String), (String), icon-people(String), (String), (String), employee:tyuangong:view,employee:tyuangong:edit(String), 40(Integer), 1(String), default(String), cms(String), (String), (String), (String), (String), (String), (String), (String), (String)
2021-01-08 21:17:54.526 DEBUG 26564 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.insert     ] - <==    Updates: 1
2021-01-08 21:17:54.527 INFO  26564 [nio-8980-exec-7] [com.jeesite.common.cache.CacheUtils    ] - removeByKeyPrefix: userCache_system => [menuList_default_null_0__tree, menuList_default_null_0_]
2021-01-08 21:17:54.534 DEBUG 26564 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:17:54.533  用时: 105毫秒  URI: /js/a/sys/menu/save  总内存: 752.5MB  已用内存: 91.220MB
2021-01-08 21:17:54.547 DEBUG 26564 [  log-save-10-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 7毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:17:54.547 DEBUG 26564 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@56d046c2] will be managed by Spring
2021-01-08 21:17:54.548 DEBUG 26564 [  log-save-10-4] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:17:54.548 DEBUG 26564 [  log-save-10-4] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 21:17:54.557 DEBUG 26564 [  log-save-10-4] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 21:17:54.560 DEBUG 26564 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:17:54.564 DEBUG 26564 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@56d046c2] will be managed by Spring
2021-01-08 21:17:54.565 DEBUG 26564 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:17:54.565 DEBUG 26564 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347532986262466560(String), update(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 21:17:54.534(Timestamp), /js/a/sys/menu/save(String), POST(String), sysCode=default&menuCode=&parent.menuNameOrig=&parent.id=&!menuType=&menuType=1&menuNameOrig=员工信息&!moduleCodes=&moduleCodes=cms&menuHref=/employee/tyuangong/list&menuTarget=&treeSort=9040&permission=employee:tyuangong:view,employee:tyuangong:edit&menuIcon=icon-people&menuColor=&menuTitle=&!isShow=&isShow=1&weight=40&remarks=&extend.extendS1=&extend.extendS2=&extend.extendS3=&extend.extendS4=&extend.extendS5=&extend.extendS6=&extend.extendS7=&extend.extendS8=&extend.extendI1=&extend.extendI2=&extend.extendI3=&extend.extendI4=&extend.extendF1=&extend.extendF2=&extend.extendF3=&extend.extendF4=&extend.extendD1=&extend.extendD2=&extend.extendD3=&extend.extendD4=(String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 105(Long)
2021-01-08 21:17:54.566 DEBUG 26564 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:17:54.581 DEBUG 26564 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:17:54.581  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:17:54.587 DEBUG 26564 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:17:54.587 DEBUG 26564 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@56d046c2] will be managed by Spring
2021-01-08 21:17:54.592 DEBUG 26564 [io-8980-exec-10] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:17:54.593 DEBUG 26564 [io-8980-exec-10] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2021-01-08 21:17:54.606 DEBUG 26564 [io-8980-exec-10] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 21:17:54.613 DEBUG 26564 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:17:54.613 DEBUG 26564 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@56d046c2] will be managed by Spring
2021-01-08 21:17:54.628 DEBUG 26564 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:17:54.628 DEBUG 26564 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:17:54.630 DEBUG 26564 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:17:54.631 DEBUG 26564 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:17:54.632 DEBUG 26564 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:17:54.640 DEBUG 26564 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:17:54.639  用时: 58毫秒  URI: /js/a/gen/genTable/listData  总内存: 752.5MB  已用内存: 98.049MB
2021-01-08 21:17:54.643 DEBUG 26564 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:17:54.644 DEBUG 26564 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@56d046c2] will be managed by Spring
2021-01-08 21:17:54.644 DEBUG 26564 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:17:54.657 DEBUG 26564 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347532986707062784(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:17:54.64(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 58(Long)
2021-01-08 21:17:54.658 DEBUG 26564 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:17:59.257 DEBUG 26564 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:17:59.256  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2021-01-08 21:17:59.259 INFO  26564 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2021-01-08 21:17:59.264 DEBUG 26564 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:17:59.263  用时: 7毫秒  URI: /js/a/gen/genTable/list  总内存: 752.5MB  已用内存: 111.867MB
2021-01-08 21:17:59.268 DEBUG 26564 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:17:59.269 DEBUG 26564 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@56d046c2] will be managed by Spring
2021-01-08 21:17:59.269 DEBUG 26564 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:17:59.270 DEBUG 26564 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347533006101524480(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:17:59.264(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 7(Long)
2021-01-08 21:17:59.272 DEBUG 26564 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:17:59.457 DEBUG 26564 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:17:59.456  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:17:59.461 DEBUG 26564 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:17:59.461 DEBUG 26564 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@56d046c2] will be managed by Spring
2021-01-08 21:17:59.477 DEBUG 26564 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:17:59.478 DEBUG 26564 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:17:59.480 DEBUG 26564 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:17:59.481 DEBUG 26564 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:17:59.483 DEBUG 26564 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:17:59.497 DEBUG 26564 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:17:59.496  用时: 40毫秒  URI: /js/a/gen/genTable/listData  总内存: 752.5MB  已用内存: 112.977MB
2021-01-08 21:17:59.500 DEBUG 26564 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:17:59.500 DEBUG 26564 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@56d046c2] will be managed by Spring
2021-01-08 21:17:59.501 DEBUG 26564 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:17:59.503 DEBUG 26564 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347533007078797312(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:17:59.497(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 40(Long)
2021-01-08 21:17:59.506 DEBUG 26564 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:23:31.334 INFO  5364 [           main] [com.jeesite.modules.Application        ] - Starting Application on DESKTOP-0IUV8EB with PID 5364 (C:\Users\Lx\work2\web\src\main\webapp\WEB-INF\classes started by Lx in C:\Users\Lx\work2\web)
2021-01-08 21:23:31.344 DEBUG 5364 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2021-01-08 21:23:31.345 INFO  5364 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2021-01-08 21:24:38.831 INFO  24980 [           main] [com.jeesite.modules.Application        ] - Starting Application on DESKTOP-0IUV8EB with PID 24980 (C:\Users\Lx\work2\web\src\main\webapp\WEB-INF\classes started by Lx in C:\Users\Lx\work2\web)
2021-01-08 21:24:38.846 DEBUG 24980 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2021-01-08 21:24:38.848 INFO  24980 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2021-01-08 21:24:43.485 INFO  24980 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2021-01-08 21:24:43.488 INFO  24980 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2021-01-08 21:24:46.268 INFO  24980 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/Lx
2021-01-08 21:24:46.270 INFO  24980 [           main] [com.jeesite.common.config.Global       ] - user.dir: C:/Users/Lx/work2/web
2021-01-08 21:24:46.272 INFO  24980 [           main] [com.jeesite.common.config.Global       ] - logPath: C:/Users/Lx/work2/web/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.2 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：adfb80499b32e1492729a84d62f8cd98
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2021-01-08 21:24:46.283 WARN  24980 [           main] [com.jeesite.common.config.Global       ] - 

===================================================================

    类型: mysql
    驱动: com.mysql.cj.jdbc.Driver
    地址: jdbc:mysql://127.0.0.1:3306/jeesite?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    用户: root

===================================================================

注意：以上信息是初始化数据库的连接信息，请认真对照。

本操作主要用于首次安装 JeeSite 或后安装 Module 的数据表初始化，若模块已安装会自动忽略。
在 v4.2 版本以后，官方初始化数据库是比较安全的，官方代码中不会包含任何删除数据表及数据的脚本。

如果你是升级到 v4.2 的版本，无法排除你是否升级完整，为安全期间，还是建议先备份数据库后再操作。

系统为您提供 20 秒的考虑时间，若不初始化数据库，请停止服务启动......

2021-01-08 21:25:07.473 DEBUG 24980 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2021-01-08 21:25:08.567 INFO  24980 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2021-01-08 21:25:10.884 INFO  24980 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2021-01-08 21:25:16.755 INFO  24980 [           main] [com.jeesite.modules.sys.db.InitCoreData] - ===== InitData Started ============
2021-01-08 21:25:16.863 DEBUG 24980 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will not be managed by Spring
2021-01-08 21:25:17.395 DEBUG 24980 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 21:25:17.423 DEBUG 24980 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 21:25:17.443 DEBUG 24980 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 21:25:17.448 INFO  24980 [           main] [com.jeesite.modules.sys.db.InitCoreData] - ===== InitData Completed ========== 耗时：692毫秒
2021-01-08 21:25:17.448 INFO  24980 [           main] [c.jeesite.modules.test.db.InitTestData ] - ===== InitData Started ============
2021-01-08 21:25:17.449 INFO  24980 [           main] [c.jeesite.modules.test.db.InitTestData ] - ===== InitData Completed ========== 耗时：1毫秒
2021-01-08 21:25:17.498 DEBUG 24980 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:25:17.501 DEBUG 24980 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:25:17.502 DEBUG 24980 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2021-01-08 21:25:17.503 DEBUG 24980 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2021-01-08 21:25:17.515 DEBUG 24980 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2021-01-08 21:25:17.589 INFO  24980 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2021-01-08 21:25:19.498 INFO  24980 [           main] [com.jeesite.modules.Application        ] - Started Application in 42.075 seconds (JVM running for 43.669)
2021-01-08 21:25:32.125 DEBUG 24980 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = #{userCode}
2021-01-08 21:25:32.131 DEBUG 24980 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:25:32.151 DEBUG 24980 [nio-8980-exec-4] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = ?
2021-01-08 21:25:32.156 DEBUG 24980 [nio-8980-exec-4] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2021-01-08 21:25:32.213 DEBUG 24980 [nio-8980-exec-4] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2021-01-08 21:25:32.677 DEBUG 24980 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2021-01-08 21:25:32.679 DEBUG 24980 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:25:32.703 DEBUG 24980 [nio-8980-exec-4] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2021-01-08 21:25:32.704 DEBUG 24980 [nio-8980-exec-4] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2021-01-08 21:25:32.747 DEBUG 24980 [nio-8980-exec-4] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2021-01-08 21:25:32.799 DEBUG 24980 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 9毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:25:32.806 DEBUG 24980 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:25:32.819 DEBUG 24980 [nio-8980-exec-4] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:25:32.822 DEBUG 24980 [nio-8980-exec-4] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2021-01-08 21:25:32.985 DEBUG 24980 [nio-8980-exec-4] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 21:25:34.498 DEBUG 24980 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:25:34.507 DEBUG 24980 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:25:34.515 DEBUG 24980 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:25:34.517 DEBUG 24980 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_sys_code(String), 1(String), 0(String)
2021-01-08 21:25:34.523 DEBUG 24980 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2021-01-08 21:25:38.465 DEBUG 24980 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:25:38.462  URI: /js/a/employee/tyuangong/list  IP: 127.0.0.1
2021-01-08 21:25:38.571 INFO  24980 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/employee/tyuangongList <<<<<<<<< /js/a/employee/tyuangong/list >>>>>>>>> com.jeesite.modules.employee.web.TyuangongController#list(Tyuangong, Model)
2021-01-08 21:25:38.944 DEBUG 24980 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:25:38.743  用时: 281毫秒  URI: /js/a/employee/tyuangong/list  总内存: 646MB  已用内存: 159.897MB
2021-01-08 21:25:38.956 DEBUG 24980 [  log-save-10-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:25:38.957 DEBUG 24980 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:25:38.960 DEBUG 24980 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:25:38.961 DEBUG 24980 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 21:25:38.978 DEBUG 24980 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 21:25:38.995 DEBUG 24980 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:25:38.997 DEBUG 24980 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:25:38.998 DEBUG 24980 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:25:39.005 DEBUG 24980 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347534933766152192(String), access(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:25:38.857(Timestamp), /js/a/employee/tyuangong/list(String), GET(String), (String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 281(Long)
2021-01-08 21:25:39.025 DEBUG 24980 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:25:39.135 DEBUG 24980 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:25:39.134  URI: /js/a/employee/tyuangong/listData  IP: 127.0.0.1
2021-01-08 21:25:39.348 DEBUG 24980 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.id DESC, a.eid DESC
2021-01-08 21:25:39.349 DEBUG 24980 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:25:39.514 DEBUG 24980 [nio-8980-exec-7] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT count(0) FROM `t_yuangong` a
2021-01-08 21:25:39.515 DEBUG 24980 [nio-8980-exec-7] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:25:39.523 DEBUG 24980 [nio-8980-exec-7] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.id DESC, a.eid DESC LIMIT 20
2021-01-08 21:25:39.524 DEBUG 24980 [nio-8980-exec-7] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:25:39.533 DEBUG 24980 [nio-8980-exec-7] [c.j.m.e.dao.TyuangongDao.findList      ] - <==      Total: 8
2021-01-08 21:25:39.652 DEBUG 24980 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:25:39.637  用时: 503毫秒  URI: /js/a/employee/tyuangong/listData  总内存: 646MB  已用内存: 190.688MB
2021-01-08 21:25:39.688 DEBUG 24980 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:25:39.689 DEBUG 24980 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:25:39.690 DEBUG 24980 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:25:39.708 DEBUG 24980 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347534937104818176(String), select(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:25:39.652(Timestamp), /js/a/employee/tyuangong/listData(String), POST(String), orgId=&name=&sex=&age=&zhiwei=&shifoubumenlingdao=&loginname=&loginpw=&del=&pageNo=&pageSize=&orderBy=(String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 503(Long)
2021-01-08 21:25:39.723 DEBUG 24980 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:25:46.464 DEBUG 24980 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:25:46.464  URI: /js/a/employee/tyuangong/form  IP: 127.0.0.1
2021-01-08 21:25:46.466 DEBUG 24980 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a WHERE a.`id` = #{id} AND a.`eid` = #{eid}
2021-01-08 21:25:46.467 DEBUG 24980 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will not be managed by Spring
2021-01-08 21:25:46.471 DEBUG 24980 [nio-8980-exec-6] [c.j.m.employee.dao.TyuangongDao.get    ] - ==>  Preparing: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a WHERE a.`id` = ? AND a.`eid` = ?
2021-01-08 21:25:46.472 DEBUG 24980 [nio-8980-exec-6] [c.j.m.employee.dao.TyuangongDao.get    ] - ==> Parameters: 28(String), 25(String)
2021-01-08 21:25:46.475 DEBUG 24980 [nio-8980-exec-6] [c.j.m.employee.dao.TyuangongDao.get    ] - <==      Total: 1
2021-01-08 21:25:46.506 INFO  24980 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/employee/tyuangongForm <<<<<<<<< /js/a/employee/tyuangong/form >>>>>>>>> com.jeesite.modules.employee.web.TyuangongController#form(Tyuangong, Model)
2021-01-08 21:25:46.577 DEBUG 24980 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:25:46.571  用时: 107毫秒  URI: /js/a/employee/tyuangong/form  总内存: 646MB  已用内存: 201.054MB
2021-01-08 21:25:46.608 DEBUG 24980 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:25:46.609 DEBUG 24980 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:25:46.610 DEBUG 24980 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:25:46.612 DEBUG 24980 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347534966154567680(String), select(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:25:46.577(Timestamp), /js/a/employee/tyuangong/form(String), GET(String), id=28&eid=25(String), 25(String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 107(Long)
2021-01-08 21:25:46.614 DEBUG 24980 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:26:03.528 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:26:03.528  URI: /js/a/sys/role/list  IP: 127.0.0.1
2021-01-08 21:26:03.597 INFO  24980 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/roleList <<<<<<<<< /js/a/sys/role/list >>>>>>>>> com.jeesite.modules.sys.web.RoleController#list(Role, Model)
2021-01-08 21:26:03.685 DEBUG 24980 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:26:03.685 DEBUG 24980 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:03.692 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:26:03.692 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_user_type(String), 1(String), 0(String)
2021-01-08 21:26:03.698 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2021-01-08 21:26:03.740 DEBUG 24980 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:26:03.741 DEBUG 24980 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:03.747 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:26:03.748 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_yes_no(String), 1(String), 0(String)
2021-01-08 21:26:03.751 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 21:26:03.758 DEBUG 24980 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:26:03.759 DEBUG 24980 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:03.764 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:26:03.766 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_search_status(String), 1(String), 0(String)
2021-01-08 21:26:03.769 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 21:26:03.780 DEBUG 24980 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:26:03.781 DEBUG 24980 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:03.786 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:26:03.788 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_role_type(String), 1(String), 0(String)
2021-01-08 21:26:03.794 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 4
2021-01-08 21:26:03.805 DEBUG 24980 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:26:03.806 DEBUG 24980 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:03.812 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:26:03.814 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_role_data_scope(String), 1(String), 0(String)
2021-01-08 21:26:03.821 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 6
2021-01-08 21:26:03.829 DEBUG 24980 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:26:03.830 DEBUG 24980 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:03.834 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:26:03.836 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_role_biz_scope(String), 1(String), 0(String)
2021-01-08 21:26:03.841 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2021-01-08 21:26:03.847 DEBUG 24980 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:26:03.848 DEBUG 24980 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:03.858 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:26:03.867 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_status(String), 1(String), 0(String)
2021-01-08 21:26:03.889 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 7
2021-01-08 21:26:03.909 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:26:03.905  用时: 377毫秒  URI: /js/a/sys/role/list  总内存: 646MB  已用内存: 237.009MB
2021-01-08 21:26:03.960 DEBUG 24980 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 5毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:26:03.965 DEBUG 24980 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:03.966 DEBUG 24980 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:26:03.993 DEBUG 24980 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535038846050304(String), select(String), 系统管理/权限管理/角色管理(String), system(String), 超级管理员(String), 2021-01-08 21:26:03.908(Timestamp), /js/a/sys/role/list(String), GET(String), (String), (String), Role(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 377(Long)
2021-01-08 21:26:04.001 DEBUG 24980 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:26:04.216 DEBUG 24980 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:26:04.216  URI: /js/a/sys/role/listData  IP: 127.0.0.1
2021-01-08 21:26:04.299 DEBUG 24980 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`role_code` AS "roleCode", a.`role_name` AS "roleName", a.`role_type` AS "roleType", a.`role_sort` AS "roleSort", a.`is_sys` AS "isSys", a.`user_type` AS "userType", a.`data_scope` AS "dataScope", a.`biz_scope` AS "bizScope", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_role` a WHERE a.`status` != #{STATUS_DELETE} ORDER BY a.role_sort ASC
2021-01-08 21:26:04.302 DEBUG 24980 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:04.421 DEBUG 24980 [nio-8980-exec-4] [c.j.modules.sys.dao.RoleDao.findList   ] - ==>  Preparing: SELECT count(0) FROM `js_sys_role` a WHERE a.`status` != ?
2021-01-08 21:26:04.428 DEBUG 24980 [nio-8980-exec-4] [c.j.modules.sys.dao.RoleDao.findList   ] - ==> Parameters: 1(String)
2021-01-08 21:26:04.435 DEBUG 24980 [nio-8980-exec-4] [c.j.modules.sys.dao.RoleDao.findList   ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`role_code` AS "roleCode", a.`role_name` AS "roleName", a.`role_type` AS "roleType", a.`role_sort` AS "roleSort", a.`is_sys` AS "isSys", a.`user_type` AS "userType", a.`data_scope` AS "dataScope", a.`biz_scope` AS "bizScope", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_role` a WHERE a.`status` != ? ORDER BY a.role_sort ASC LIMIT 20
2021-01-08 21:26:04.437 DEBUG 24980 [nio-8980-exec-4] [c.j.modules.sys.dao.RoleDao.findList   ] - ==> Parameters: 1(String)
2021-01-08 21:26:04.449 DEBUG 24980 [nio-8980-exec-4] [c.j.modules.sys.dao.RoleDao.findList   ] - <==      Total: 4
2021-01-08 21:26:04.490 DEBUG 24980 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:26:04.483  用时: 267毫秒  URI: /js/a/sys/role/listData  总内存: 646MB  已用内存: 242.887MB
2021-01-08 21:26:04.534 DEBUG 24980 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:26:04.534 DEBUG 24980 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:04.535 DEBUG 24980 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:26:04.536 DEBUG 24980 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535041261969408(String), select(String), 系统管理/权限管理/角色管理(String), system(String), 超级管理员(String), 2021-01-08 21:26:04.484(Timestamp), /js/a/sys/role/listData(String), POST(String), ctrlPermi=2&roleName_like=&roleCode_like=&userType=&isSys=&status=&pageNo=&pageSize=&orderBy=(String), (String), Role(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 267(Long)
2021-01-08 21:26:04.585 DEBUG 24980 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:26:09.458 DEBUG 24980 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:26:09.458  URI: /js/a/sys/role/form  IP: 127.0.0.1
2021-01-08 21:26:09.468 DEBUG 24980 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`role_code` AS "roleCode", a.`role_name` AS "roleName", a.`role_type` AS "roleType", a.`role_sort` AS "roleSort", a.`is_sys` AS "isSys", a.`user_type` AS "userType", a.`data_scope` AS "dataScope", a.`biz_scope` AS "bizScope", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_role` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.role_sort ASC
2021-01-08 21:26:09.469 DEBUG 24980 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will not be managed by Spring
2021-01-08 21:26:09.480 DEBUG 24980 [nio-8980-exec-9] [c.j.modules.sys.dao.RoleDao.findCount  ] - ==>  Preparing: SELECT count(0) FROM `js_sys_role` a WHERE a.`status` = ?
2021-01-08 21:26:09.480 DEBUG 24980 [nio-8980-exec-9] [c.j.modules.sys.dao.RoleDao.findCount  ] - ==> Parameters: 0(String)
2021-01-08 21:26:09.481 DEBUG 24980 [nio-8980-exec-9] [c.j.modules.sys.dao.RoleDao.findCount  ] - <==      Total: 1
2021-01-08 21:26:09.482 INFO  24980 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/roleForm <<<<<<<<< /js/a/sys/role/form >>>>>>>>> com.jeesite.modules.sys.web.RoleController#form(Role, String, Model)
2021-01-08 21:26:09.560 DEBUG 24980 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:26:09.557  用时: 99毫秒  URI: /js/a/sys/role/form  总内存: 646MB  已用内存: 255.611MB
2021-01-08 21:26:09.564 DEBUG 24980 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:26:09.565 DEBUG 24980 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:09.566 DEBUG 24980 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:26:09.567 DEBUG 24980 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535062552256512(String), select(String), 系统管理/权限管理/角色管理(String), system(String), 超级管理员(String), 2021-01-08 21:26:09.56(Timestamp), /js/a/sys/role/form(String), GET(String), op=add(String), (String), Role(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 99(Long)
2021-01-08 21:26:09.570 DEBUG 24980 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:26:09.886 DEBUG 24980 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:26:09.886  URI: /js/a/sys/role/menuTreeData  IP: 127.0.0.1
2021-01-08 21:26:09.954 DEBUG 24980 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.weight < #{sqlMap.where.weight#LT1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:26:09.956 DEBUG 24980 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:09.961 DEBUG 24980 [io-8980-exec-10] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.weight < ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:26:09.962 DEBUG 24980 [io-8980-exec-10] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 80(Integer)
2021-01-08 21:26:09.973 DEBUG 24980 [io-8980-exec-10] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 41
2021-01-08 21:26:09.996 DEBUG 24980 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:10.001 DEBUG 24980 [io-8980-exec-10] [c.j.m.sys.dao.MenuDao.findByRoleCode   ] - ==>  Preparing: SELECT DISTINCT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM js_sys_menu a JOIN js_sys_role_menu rm ON rm.menu_code = a.menu_code WHERE a.status = ? AND a.weight < ? AND rm.role_code = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:26:10.002 DEBUG 24980 [io-8980-exec-10] [c.j.m.sys.dao.MenuDao.findByRoleCode   ] - ==> Parameters: 0(String), 80(Integer), (String)
2021-01-08 21:26:10.007 DEBUG 24980 [io-8980-exec-10] [c.j.m.sys.dao.MenuDao.findByRoleCode   ] - <==      Total: 0
2021-01-08 21:26:10.025 DEBUG 24980 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:26:10.024  用时: 138毫秒  URI: /js/a/sys/role/menuTreeData  总内存: 646MB  已用内存: 263.141MB
2021-01-08 21:26:10.031 DEBUG 24980 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:26:10.032 DEBUG 24980 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:10.033 DEBUG 24980 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:26:10.033 DEBUG 24980 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535064502607872(String), select(String), 系统管理/权限管理/角色管理(String), system(String), 超级管理员(String), 2021-01-08 21:26:10.025(Timestamp), /js/a/sys/role/menuTreeData(String), POST(String), ___t=1610112369851&roleCode=(String), (String), Role(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 138(Long)
2021-01-08 21:26:10.035 DEBUG 24980 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:26:15.569 DEBUG 24980 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:26:15.569  URI: /js/a/sys/secAdmin/list  IP: 127.0.0.1
2021-01-08 21:26:15.620 INFO  24980 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/user/secAdminList <<<<<<<<< /js/a/sys/secAdmin/list >>>>>>>>> com.jeesite.modules.sys.web.user.SecAdminController#list(User, Model)
2021-01-08 21:26:15.646 DEBUG 24980 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:26:15.647 DEBUG 24980 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:15.651 DEBUG 24980 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:26:15.652 DEBUG 24980 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_user_status(String), 1(String), 0(String)
2021-01-08 21:26:15.660 DEBUG 24980 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 3
2021-01-08 21:26:15.683 DEBUG 24980 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:26:15.682  用时: 113毫秒  URI: /js/a/sys/secAdmin/list  总内存: 646MB  已用内存: 277.569MB
2021-01-08 21:26:15.688 DEBUG 24980 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:26:15.689 DEBUG 24980 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:15.689 DEBUG 24980 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:26:15.696 DEBUG 24980 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535088233979904(String), select(String), 系统管理/权限管理/二级管理员(String), system(String), 超级管理员(String), 2021-01-08 21:26:15.683(Timestamp), /js/a/sys/secAdmin/list(String), GET(String), (String), (String), User(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 113(Long)
2021-01-08 21:26:15.701 DEBUG 24980 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:26:15.805 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:26:15.805  URI: /js/a/sys/secAdmin/listData  IP: 127.0.0.1
2021-01-08 21:26:15.840 DEBUG 24980 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:15.897 DEBUG 24980 [nio-8980-exec-3] [c.j.modules.sys.dao.UserDao.findList   ] - ==>  Preparing: SELECT count(0) FROM `js_sys_user` a WHERE a.`status` != ? AND a.`mgr_type` = ?
2021-01-08 21:26:15.898 DEBUG 24980 [nio-8980-exec-3] [c.j.modules.sys.dao.UserDao.findList   ] - ==> Parameters: 1(String), 2(String)
2021-01-08 21:26:15.900 DEBUG 24980 [nio-8980-exec-3] [c.j.modules.sys.dao.UserDao.findList   ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`status` != ? AND a.`mgr_type` = ? ORDER BY a.user_weight DESC, a.update_date DESC LIMIT 20
2021-01-08 21:26:15.901 DEBUG 24980 [nio-8980-exec-3] [c.j.modules.sys.dao.UserDao.findList   ] - ==> Parameters: 1(String), 2(String)
2021-01-08 21:26:15.903 DEBUG 24980 [nio-8980-exec-3] [c.j.modules.sys.dao.UserDao.findList   ] - <==      Total: 0
2021-01-08 21:26:15.934 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:26:15.920  用时: 115毫秒  URI: /js/a/sys/secAdmin/listData  总内存: 646MB  已用内存: 281.477MB
2021-01-08 21:26:15.949 DEBUG 24980 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 5毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:26:15.950 DEBUG 24980 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:15.951 DEBUG 24980 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:26:15.959 DEBUG 24980 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535089286750208(String), select(String), 系统管理/权限管理/二级管理员(String), system(String), 超级管理员(String), 2021-01-08 21:26:15.934(Timestamp), /js/a/sys/secAdmin/listData(String), POST(String), loginCode=&userName=&email=&mobile=&phone=&status=&pageNo=&pageSize=&orderBy=(String), (String), User(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 115(Long)
2021-01-08 21:26:15.962 DEBUG 24980 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:26:19.740 DEBUG 24980 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:26:19.740  URI: /js/a/sys/audit/list  IP: 127.0.0.1
2021-01-08 21:26:19.787 INFO  24980 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/auditList <<<<<<<<< /js/a/sys/audit/list >>>>>>>>> com.jeesite.modules.sys.web.AuditController#auditList(Audit, Model)
2021-01-08 21:26:19.833 DEBUG 24980 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:26:19.826  用时: 86毫秒  URI: /js/a/sys/audit/list  总内存: 646MB  已用内存: 294.204MB
2021-01-08 21:26:19.844 DEBUG 24980 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:26:19.844 DEBUG 24980 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:19.845 DEBUG 24980 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:26:19.846 DEBUG 24980 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535105640341504(String), access(String), 系统管理/权限管理/安全审计(String), system(String), 超级管理员(String), 2021-01-08 21:26:19.833(Timestamp), /js/a/sys/audit/list(String), GET(String), (String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 86(Long)
2021-01-08 21:26:19.847 DEBUG 24980 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:26:19.974 DEBUG 24980 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:26:19.974  URI: /js/a/sys/audit/listData  IP: 127.0.0.1
2021-01-08 21:26:20.031 DEBUG 24980 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:20.050 DEBUG 24980 [nio-8980-exec-9] [c.j.m.sys.dao.AuditDao.findAuditList   ] - ==>  Preparing: SELECT count(0) FROM js_sys_user u LEFT JOIN js_sys_employee e ON e.emp_code = u.ref_code AND u.user_type = 'employee' LEFT JOIN js_sys_office o ON o.office_code = e.office_code WHERE u.status = ? AND (u.pwd_security_level IN ('0', '1', '2') OR (u.pwd_update_date IS NULL OR u.pwd_update_date < ?) OR (u.last_login_date IS NULL OR u.last_login_date < ?) OR u.pwd_quest_update_date IS NULL)
2021-01-08 21:26:20.051 DEBUG 24980 [nio-8980-exec-9] [c.j.m.sys.dao.AuditDao.findAuditList   ] - ==> Parameters: 0(String), 2020-12-09 21:26:20.023(Timestamp), 2020-12-09 21:26:20.023(Timestamp)
2021-01-08 21:26:20.059 DEBUG 24980 [nio-8980-exec-9] [c.j.m.sys.dao.AuditDao.findAuditList   ] - ==>  Preparing: SELECT u.user_code AS "userCode", u.login_code AS "loginCode", u.user_name AS "userName", o.office_code AS "officeCode", o.office_name AS "officeName", u.pwd_security_level AS "pwdSecurityLevel", u.pwd_update_date AS "pwdUpdateDate", u.pwd_quest_update_date AS "pwdQuestUpdateDate", u.last_login_date AS "lastLoginDate", u.create_date AS "createDate", u.update_date AS "updateDate", u.user_type AS "userType", u.status AS "status" FROM js_sys_user u LEFT JOIN js_sys_employee e ON e.emp_code = u.ref_code AND u.user_type = 'employee' LEFT JOIN js_sys_office o ON o.office_code = e.office_code WHERE u.status = ? AND ( u.pwd_security_level in ('0', '1', '2') OR (u.pwd_update_date is null OR u.pwd_update_date < ?) OR (u.last_login_date is null OR u.last_login_date < ?) OR u.pwd_quest_update_date is null ) ORDER BY u.update_date LIMIT 20
2021-01-08 21:26:20.060 DEBUG 24980 [nio-8980-exec-9] [c.j.m.sys.dao.AuditDao.findAuditList   ] - ==> Parameters: 0(String), 2020-12-09 21:26:20.023(Timestamp), 2020-12-09 21:26:20.023(Timestamp)
2021-01-08 21:26:20.062 DEBUG 24980 [nio-8980-exec-9] [c.j.m.sys.dao.AuditDao.findAuditList   ] - <==      Total: 2
2021-01-08 21:26:20.069 DEBUG 24980 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:26:20.068  用时: 94毫秒  URI: /js/a/sys/audit/listData  总内存: 646MB  已用内存: 300.217MB
2021-01-08 21:26:20.076 DEBUG 24980 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:26:20.077 DEBUG 24980 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:20.079 DEBUG 24980 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:26:20.081 DEBUG 24980 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535106630197248(String), select(String), 系统管理/权限管理/安全审计(String), system(String), 超级管理员(String), 2021-01-08 21:26:20.069(Timestamp), /js/a/sys/audit/listData(String), POST(String), auditType=&loginCode=&userName=&employee.office.officeName=&officeCode=&pageNo=&pageSize=&orderBy=(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 94(Long)
2021-01-08 21:26:20.082 DEBUG 24980 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:26:25.541 DEBUG 24980 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:26:25.541  URI: /js/a/sys/corpAdmin/list  IP: 127.0.0.1
2021-01-08 21:26:25.567 INFO  24980 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/user/corpAdminList <<<<<<<<< /js/a/sys/corpAdmin/list >>>>>>>>> com.jeesite.modules.sys.web.user.CorpAdminController#list(User, Model)
2021-01-08 21:26:25.602 DEBUG 24980 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:26:25.601  用时: 60毫秒  URI: /js/a/sys/corpAdmin/list  总内存: 646MB  已用内存: 308.433MB
2021-01-08 21:26:25.609 DEBUG 24980 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:26:25.610 DEBUG 24980 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:25.610 DEBUG 24980 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:26:25.612 DEBUG 24980 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535129833086976(String), access(String), 系统管理/权限管理/系统管理员(String), system(String), 超级管理员(String), 2021-01-08 21:26:25.601(Timestamp), /js/a/sys/corpAdmin/list(String), GET(String), (String), (String), User(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 60(Long)
2021-01-08 21:26:25.614 DEBUG 24980 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:26:25.699 DEBUG 24980 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:26:25.699  URI: /js/a/sys/corpAdmin/listData  IP: 127.0.0.1
2021-01-08 21:26:25.795 DEBUG 24980 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:25.832 DEBUG 24980 [nio-8980-exec-8] [c.j.modules.sys.dao.UserDao.findList   ] - ==>  Preparing: SELECT count(0) FROM `js_sys_user` a WHERE a.`status` != ? AND a.`mgr_type` = ?
2021-01-08 21:26:25.833 DEBUG 24980 [nio-8980-exec-8] [c.j.modules.sys.dao.UserDao.findList   ] - ==> Parameters: 1(String), 1(String)
2021-01-08 21:26:25.835 DEBUG 24980 [nio-8980-exec-8] [c.j.modules.sys.dao.UserDao.findList   ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`status` != ? AND a.`mgr_type` = ? ORDER BY a.user_weight DESC, a.update_date DESC LIMIT 20
2021-01-08 21:26:25.839 DEBUG 24980 [nio-8980-exec-8] [c.j.modules.sys.dao.UserDao.findList   ] - ==> Parameters: 1(String), 1(String)
2021-01-08 21:26:25.844 DEBUG 24980 [nio-8980-exec-8] [c.j.modules.sys.dao.UserDao.findList   ] - <==      Total: 1
2021-01-08 21:26:25.864 DEBUG 24980 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:26:25.862  用时: 163毫秒  URI: /js/a/sys/corpAdmin/listData  总内存: 646MB  已用内存: 312.140MB
2021-01-08 21:26:25.915 DEBUG 24980 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:26:25.915 DEBUG 24980 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:25.916 DEBUG 24980 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:26:25.918 DEBUG 24980 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535130931994624(String), select(String), 系统管理/权限管理/系统管理员(String), system(String), 超级管理员(String), 2021-01-08 21:26:25.863(Timestamp), /js/a/sys/corpAdmin/listData(String), POST(String), loginCode=&userName=&corpCode_=&corpName_=&status=&pageNo=&pageSize=&orderBy=(String), (String), User(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 163(Long)
2021-01-08 21:26:25.926 DEBUG 24980 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:26:27.803 DEBUG 24980 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:26:27.803  URI: /js/a/sys/secAdmin/list  IP: 127.0.0.1
2021-01-08 21:26:27.808 INFO  24980 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/user/secAdminList <<<<<<<<< /js/a/sys/secAdmin/list >>>>>>>>> com.jeesite.modules.sys.web.user.SecAdminController#list(User, Model)
2021-01-08 21:26:27.834 DEBUG 24980 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:26:27.829  用时: 26毫秒  URI: /js/a/sys/secAdmin/list  总内存: 646MB  已用内存: 314.345MB
2021-01-08 21:26:27.839 DEBUG 24980 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:26:27.839 DEBUG 24980 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:27.840 DEBUG 24980 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:26:27.841 DEBUG 24980 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535139194773504(String), access(String), 系统管理/权限管理/二级管理员(String), system(String), 超级管理员(String), 2021-01-08 21:26:27.833(Timestamp), /js/a/sys/secAdmin/list(String), GET(String), (String), (String), User(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 26(Long)
2021-01-08 21:26:27.843 DEBUG 24980 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:26:27.977 DEBUG 24980 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:26:27.977  URI: /js/a/sys/secAdmin/listData  IP: 127.0.0.1
2021-01-08 21:26:28.063 DEBUG 24980 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:28.099 DEBUG 24980 [nio-8980-exec-2] [c.j.modules.sys.dao.UserDao.findList   ] - ==>  Preparing: SELECT count(0) FROM `js_sys_user` a WHERE a.`status` != ? AND a.`mgr_type` = ?
2021-01-08 21:26:28.100 DEBUG 24980 [nio-8980-exec-2] [c.j.modules.sys.dao.UserDao.findList   ] - ==> Parameters: 1(String), 2(String)
2021-01-08 21:26:28.102 DEBUG 24980 [nio-8980-exec-2] [c.j.modules.sys.dao.UserDao.findList   ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`status` != ? AND a.`mgr_type` = ? ORDER BY a.user_weight DESC, a.update_date DESC LIMIT 20
2021-01-08 21:26:28.106 DEBUG 24980 [nio-8980-exec-2] [c.j.modules.sys.dao.UserDao.findList   ] - ==> Parameters: 1(String), 2(String)
2021-01-08 21:26:28.107 DEBUG 24980 [nio-8980-exec-2] [c.j.modules.sys.dao.UserDao.findList   ] - <==      Total: 0
2021-01-08 21:26:28.114 DEBUG 24980 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:26:28.112  用时: 135毫秒  URI: /js/a/sys/secAdmin/listData  总内存: 646MB  已用内存: 318.072MB
2021-01-08 21:26:28.123 DEBUG 24980 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 4毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:26:28.124 DEBUG 24980 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:28.125 DEBUG 24980 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:26:28.126 DEBUG 24980 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535140369178624(String), select(String), 系统管理/权限管理/二级管理员(String), system(String), 超级管理员(String), 2021-01-08 21:26:28.113(Timestamp), /js/a/sys/secAdmin/listData(String), POST(String), loginCode=&userName=&email=&mobile=&phone=&status=&pageNo=&pageSize=&orderBy=(String), (String), User(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 135(Long)
2021-01-08 21:26:28.130 DEBUG 24980 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:26:50.486 DEBUG 24980 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:26:50.486  URI: /js/a/employee/tyuangong/listData  IP: 127.0.0.1
2021-01-08 21:26:50.490 DEBUG 24980 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.loginname asc
2021-01-08 21:26:50.491 DEBUG 24980 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:50.498 DEBUG 24980 [nio-8980-exec-9] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT count(0) FROM `t_yuangong` a
2021-01-08 21:26:50.498 DEBUG 24980 [nio-8980-exec-9] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:26:50.501 DEBUG 24980 [nio-8980-exec-9] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.loginname asc LIMIT 20
2021-01-08 21:26:50.502 DEBUG 24980 [nio-8980-exec-9] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:26:50.505 DEBUG 24980 [nio-8980-exec-9] [c.j.m.e.dao.TyuangongDao.findList      ] - <==      Total: 8
2021-01-08 21:26:50.514 DEBUG 24980 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:26:50.512  用时: 26毫秒  URI: /js/a/employee/tyuangong/listData  总内存: 646MB  已用内存: 321.009MB
2021-01-08 21:26:50.519 DEBUG 24980 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:26:50.520 DEBUG 24980 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:50.520 DEBUG 24980 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:26:50.522 DEBUG 24980 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535234321588224(String), select(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:26:50.513(Timestamp), /js/a/employee/tyuangong/listData(String), POST(String), orgId=&name=&sex=&age=&zhiwei=&shifoubumenlingdao=&loginname=&loginpw=&del=&pageNo=&pageSize=&orderBy=a.loginname asc(String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 26(Long)
2021-01-08 21:26:50.523 DEBUG 24980 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:26:51.412 DEBUG 24980 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:26:51.412  URI: /js/a/employee/tyuangong/listData  IP: 127.0.0.1
2021-01-08 21:26:51.414 DEBUG 24980 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.loginname desc
2021-01-08 21:26:51.414 DEBUG 24980 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:51.421 DEBUG 24980 [nio-8980-exec-7] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT count(0) FROM `t_yuangong` a
2021-01-08 21:26:51.421 DEBUG 24980 [nio-8980-exec-7] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:26:51.423 DEBUG 24980 [nio-8980-exec-7] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.loginname desc LIMIT 20
2021-01-08 21:26:51.424 DEBUG 24980 [nio-8980-exec-7] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:26:51.425 DEBUG 24980 [nio-8980-exec-7] [c.j.m.e.dao.TyuangongDao.findList      ] - <==      Total: 8
2021-01-08 21:26:51.430 DEBUG 24980 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:26:51.429  用时: 17毫秒  URI: /js/a/employee/tyuangong/listData  总内存: 646MB  已用内存: 321.009MB
2021-01-08 21:26:51.433 DEBUG 24980 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:26:51.434 DEBUG 24980 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:51.434 DEBUG 24980 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:26:51.435 DEBUG 24980 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535238167764992(String), select(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:26:51.43(Timestamp), /js/a/employee/tyuangong/listData(String), POST(String), orgId=&name=&sex=&age=&zhiwei=&shifoubumenlingdao=&loginname=&loginpw=&del=&pageNo=&pageSize=&orderBy=a.loginname desc(String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 17(Long)
2021-01-08 21:26:51.436 DEBUG 24980 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:26:52.188 DEBUG 24980 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:26:52.188  URI: /js/a/employee/tyuangong/listData  IP: 127.0.0.1
2021-01-08 21:26:52.192 DEBUG 24980 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.loginpw asc
2021-01-08 21:26:52.193 DEBUG 24980 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:52.197 DEBUG 24980 [nio-8980-exec-6] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT count(0) FROM `t_yuangong` a
2021-01-08 21:26:52.197 DEBUG 24980 [nio-8980-exec-6] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:26:52.199 DEBUG 24980 [nio-8980-exec-6] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.loginpw asc LIMIT 20
2021-01-08 21:26:52.200 DEBUG 24980 [nio-8980-exec-6] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:26:52.201 DEBUG 24980 [nio-8980-exec-6] [c.j.m.e.dao.TyuangongDao.findList      ] - <==      Total: 8
2021-01-08 21:26:52.206 DEBUG 24980 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:26:52.204  用时: 16毫秒  URI: /js/a/employee/tyuangong/listData  总内存: 646MB  已用内存: 324.014MB
2021-01-08 21:26:52.210 DEBUG 24980 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:26:52.211 DEBUG 24980 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:52.211 DEBUG 24980 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:26:52.212 DEBUG 24980 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535241418350592(String), select(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:26:52.205(Timestamp), /js/a/employee/tyuangong/listData(String), POST(String), orgId=&name=&sex=&age=&zhiwei=&shifoubumenlingdao=&loginname=&loginpw=&del=&pageNo=&pageSize=&orderBy=a.loginpw asc(String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 16(Long)
2021-01-08 21:26:52.213 DEBUG 24980 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:26:52.717 DEBUG 24980 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:26:52.717  URI: /js/a/employee/tyuangong/listData  IP: 127.0.0.1
2021-01-08 21:26:52.724 DEBUG 24980 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.loginpw desc
2021-01-08 21:26:52.725 DEBUG 24980 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:52.731 DEBUG 24980 [nio-8980-exec-8] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT count(0) FROM `t_yuangong` a
2021-01-08 21:26:52.732 DEBUG 24980 [nio-8980-exec-8] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:26:52.741 DEBUG 24980 [nio-8980-exec-8] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.loginpw desc LIMIT 20
2021-01-08 21:26:52.741 DEBUG 24980 [nio-8980-exec-8] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:26:52.743 DEBUG 24980 [nio-8980-exec-8] [c.j.m.e.dao.TyuangongDao.findList      ] - <==      Total: 8
2021-01-08 21:26:52.749 DEBUG 24980 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:26:52.747  用时: 30毫秒  URI: /js/a/employee/tyuangong/listData  总内存: 646MB  已用内存: 325.517MB
2021-01-08 21:26:52.753 DEBUG 24980 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:26:52.753 DEBUG 24980 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:52.754 DEBUG 24980 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:26:52.755 DEBUG 24980 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535243695857664(String), select(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:26:52.748(Timestamp), /js/a/employee/tyuangong/listData(String), POST(String), orgId=&name=&sex=&age=&zhiwei=&shifoubumenlingdao=&loginname=&loginpw=&del=&pageNo=&pageSize=&orderBy=a.loginpw desc(String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 30(Long)
2021-01-08 21:26:52.756 DEBUG 24980 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:26:57.779 DEBUG 24980 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:26:57.779  URI: /js/a/employee/tyuangong/listData  IP: 127.0.0.1
2021-01-08 21:26:57.787 DEBUG 24980 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.del asc
2021-01-08 21:26:57.787 DEBUG 24980 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:57.794 DEBUG 24980 [io-8980-exec-10] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT count(0) FROM `t_yuangong` a
2021-01-08 21:26:57.794 DEBUG 24980 [io-8980-exec-10] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:26:57.796 DEBUG 24980 [io-8980-exec-10] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.del asc LIMIT 20
2021-01-08 21:26:57.797 DEBUG 24980 [io-8980-exec-10] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:26:57.798 DEBUG 24980 [io-8980-exec-10] [c.j.m.e.dao.TyuangongDao.findList      ] - <==      Total: 8
2021-01-08 21:26:57.803 DEBUG 24980 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:26:57.802  用时: 23毫秒  URI: /js/a/employee/tyuangong/listData  总内存: 646MB  已用内存: 327.773MB
2021-01-08 21:26:57.805 DEBUG 24980 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:26:57.806 DEBUG 24980 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:57.807 DEBUG 24980 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:26:57.807 DEBUG 24980 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535264898064384(String), select(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:26:57.803(Timestamp), /js/a/employee/tyuangong/listData(String), POST(String), orgId=&name=&sex=&age=&zhiwei=&shifoubumenlingdao=&loginname=&loginpw=&del=&pageNo=&pageSize=&orderBy=a.del asc(String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 23(Long)
2021-01-08 21:26:57.808 DEBUG 24980 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:26:58.437 DEBUG 24980 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:26:58.436  URI: /js/a/employee/tyuangong/listData  IP: 127.0.0.1
2021-01-08 21:26:58.442 DEBUG 24980 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.del desc
2021-01-08 21:26:58.442 DEBUG 24980 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:58.449 DEBUG 24980 [nio-8980-exec-1] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT count(0) FROM `t_yuangong` a
2021-01-08 21:26:58.449 DEBUG 24980 [nio-8980-exec-1] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:26:58.459 DEBUG 24980 [nio-8980-exec-1] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.del desc LIMIT 20
2021-01-08 21:26:58.460 DEBUG 24980 [nio-8980-exec-1] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:26:58.461 DEBUG 24980 [nio-8980-exec-1] [c.j.m.e.dao.TyuangongDao.findList      ] - <==      Total: 8
2021-01-08 21:26:58.465 DEBUG 24980 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:26:58.464  用时: 28毫秒  URI: /js/a/employee/tyuangong/listData  总内存: 646MB  已用内存: 328.675MB
2021-01-08 21:26:58.469 DEBUG 24980 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:26:58.469 DEBUG 24980 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:26:58.470 DEBUG 24980 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:26:58.471 DEBUG 24980 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535267674693632(String), select(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:26:58.465(Timestamp), /js/a/employee/tyuangong/listData(String), POST(String), orgId=&name=&sex=&age=&zhiwei=&shifoubumenlingdao=&loginname=&loginpw=&del=&pageNo=&pageSize=&orderBy=a.del desc(String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 28(Long)
2021-01-08 21:26:58.472 DEBUG 24980 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:27:13.171 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:27:13.170  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2021-01-08 21:27:13.191 INFO  24980 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2021-01-08 21:27:13.212 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:27:13.211  用时: 41毫秒  URI: /js/a/gen/genTable/list  总内存: 646MB  已用内存: 336.451MB
2021-01-08 21:27:13.219 DEBUG 24980 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:27:13.219 DEBUG 24980 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:27:13.220 DEBUG 24980 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:27:13.221 DEBUG 24980 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535329528094720(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:27:13.212(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 41(Long)
2021-01-08 21:27:13.222 DEBUG 24980 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:27:13.316 DEBUG 24980 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:27:13.315  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:27:13.361 DEBUG 24980 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:27:13.362 DEBUG 24980 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:27:13.387 DEBUG 24980 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:27:13.388 DEBUG 24980 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:27:13.393 DEBUG 24980 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:27:13.394 DEBUG 24980 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:27:13.405 DEBUG 24980 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:27:13.437 DEBUG 24980 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:27:13.430  用时: 115毫秒  URI: /js/a/gen/genTable/listData  总内存: 646MB  已用内存: 346.186MB
2021-01-08 21:27:13.443 DEBUG 24980 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:27:13.444 DEBUG 24980 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:27:13.444 DEBUG 24980 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:27:13.445 DEBUG 24980 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535330455035904(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:27:13.433(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 115(Long)
2021-01-08 21:27:13.457 DEBUG 24980 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:27:14.853 DEBUG 24980 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:27:14.853  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:27:14.855 DEBUG 24980 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:27:14.856 DEBUG 24980 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:27:14.860 DEBUG 24980 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:27:14.861 DEBUG 24980 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:27:14.863 DEBUG 24980 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:27:14.867 DEBUG 24980 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:27:14.871 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:27:14.871 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:27:14.874 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:27:14.894 DEBUG 24980 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:27:14.900 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 21:27:14.901 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_yuangong(String), t_yuangong(String)
2021-01-08 21:27:14.904 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 21:27:14.909 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 21:27:14.910 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:27:14.917 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 11
2021-01-08 21:27:14.923 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 21:27:14.923 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:27:14.926 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 2
2021-01-08 21:27:15.157 DEBUG 24980 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:27:15.159 DEBUG 24980 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will not be managed by Spring
2021-01-08 21:27:15.168 DEBUG 24980 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:27:15.170 DEBUG 24980 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 21:27:15.175 DEBUG 24980 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 21:27:15.177 DEBUG 24980 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:27:15.178 DEBUG 24980 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will not be managed by Spring
2021-01-08 21:27:15.185 DEBUG 24980 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:27:15.185 DEBUG 24980 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 21:27:15.187 DEBUG 24980 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 4
2021-01-08 21:27:15.189 DEBUG 24980 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:27:15.195 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 21:27:15.195 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 21:27:15.197 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 21:27:15.198 INFO  24980 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:27:15.273 DEBUG 24980 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:27:15.271  用时: 418毫秒  URI: /js/a/gen/genTable/form  总内存: 646MB  已用内存: 373.957MB
2021-01-08 21:27:15.277 DEBUG 24980 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:27:15.277 DEBUG 24980 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:27:15.278 DEBUG 24980 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:27:15.280 DEBUG 24980 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535338168360960(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:27:15.272(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=t_yuangong&op=step2(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 418(Long)
2021-01-08 21:27:15.282 DEBUG 24980 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:29:24.311 DEBUG 24980 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:29:24.311  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 21:29:24.328 DEBUG 24980 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:29:24.328 DEBUG 24980 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:29:24.333 DEBUG 24980 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:29:24.334 DEBUG 24980 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:29:24.335 DEBUG 24980 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:29:24.336 DEBUG 24980 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:29:24.343 DEBUG 24980 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:29:24.344 DEBUG 24980 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:29:24.351 DEBUG 24980 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:29:24.712 DEBUG 24980 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE `js_gen_table` SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2021-01-08 21:29:24.713 DEBUG 24980 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:29:24.713 DEBUG 24980 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE `js_gen_table` SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ?
2021-01-08 21:29:24.721 DEBUG 24980 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: Tyuangong(String), t_yuangong(String), (String), eid(String), (String), crud(String), com.jeesite.modules(String), employee(String), (String), employee(String), employee(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 21:29:24.711(Timestamp), (String), t_yuangong(String)
2021-01-08 21:29:24.722 DEBUG 24980 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2021-01-08 21:29:24.724 DEBUG 24980 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:29:24.725 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:29:24.726 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), id(String), 10(Integer), int(String), id(String), id(String), id(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582120304640(String)
2021-01-08 21:29:24.727 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:29:24.731 DEBUG 24980 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 4毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:29:24.731 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:29:24.732 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), org_id(String), 20(Integer), int(String), 部门(String), 部门(String), orgId(String), Long(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"digits","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582204190720(String)
2021-01-08 21:29:24.745 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:29:24.747 DEBUG 24980 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:29:24.748 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:29:24.749 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), eid(String), 30(Integer), varchar(55)(String), 工号(String), 工号(String), eid(String), String(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582275493888(String)
2021-01-08 21:29:24.750 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:29:24.751 DEBUG 24980 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:29:24.752 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:29:24.753 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), name(String), 40(Integer), varchar(50)(String), 姓名(String), 姓名(String), name(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), LIKE(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582569095168(String)
2021-01-08 21:29:24.754 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:29:24.755 DEBUG 24980 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:29:24.756 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:29:24.757 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), sex(String), 50(Integer), varchar(50)(String), 性别(String), 性别(String), sex(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582594260992(String)
2021-01-08 21:29:24.758 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:29:24.759 DEBUG 24980 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:29:24.760 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:29:24.761 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), age(String), 60(Integer), varchar(50)(String), 年龄(String), 年龄(String), age(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582611038208(String)
2021-01-08 21:29:24.762 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:29:24.764 DEBUG 24980 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:29:24.765 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:29:24.766 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), zhiwei(String), 70(Integer), varchar(50)(String), 职位(String), 职位(String), zhiwei(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582627815424(String)
2021-01-08 21:29:24.768 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:29:24.769 DEBUG 24980 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:29:24.770 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:29:24.771 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), shifoubumenlingdao(String), 80(Integer), varchar(50)(String), 是否为领导(String), 是否为领导(String), shifoubumenlingdao(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582661369856(String)
2021-01-08 21:29:24.772 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:29:24.773 DEBUG 24980 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:29:24.774 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:29:24.775 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), loginname(String), 90(Integer), varchar(50)(String), 账户名(String), 账户名(String), loginname(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582682341376(String)
2021-01-08 21:29:24.777 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:29:24.778 DEBUG 24980 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:29:24.779 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:29:24.779 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), loginpw(String), 100(Integer), varchar(50)(String), 密码(String), 密码(String), loginpw(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582703312896(String)
2021-01-08 21:29:24.781 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:29:24.782 DEBUG 24980 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:29:24.783 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:29:24.783 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), del(String), 110(Integer), varchar(50)(String), del(String), del(String), del(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582732673024(String)
2021-01-08 21:29:24.785 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:29:24.809 DEBUG 24980 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:29:24.810 DEBUG 24980 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:29:24.817 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC
2021-01-08 21:29:24.817 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:29:24.819 DEBUG 24980 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 0
2021-01-08 21:29:24.826 DEBUG 24980 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TyuangongDao.xml
2021-01-08 21:29:24.827 DEBUG 24980 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.employee.dao.TyuangongDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tyuangong">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 21:29:24.828 DEBUG 24980 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - File Extents ==> C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TyuangongDao.xml
2021-01-08 21:29:24.828 DEBUG 24980 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tyuangong.java
2021-01-08 21:29:24.908 DEBUG 24980 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.entity;

import org.hibernate.validator.constraints.Length;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * employeeEntity
 * @author LX
 * @version 2021-01-08
 */
@Table(name="t_yuangong", alias="a", columns={
		@Column(name="id", attrName="id", label="id", isPK=true),
		@Column(name="org_id", attrName="orgId", label="部门"),
		@Column(name="eid", attrName="eid", label="工号", isPK=true),
		@Column(name="name", attrName="name", label="姓名", queryType=QueryType.LIKE),
		@Column(name="sex", attrName="sex", label="性别"),
		@Column(name="age", attrName="age", label="年龄"),
		@Column(name="zhiwei", attrName="zhiwei", label="职位"),
		@Column(name="shifoubumenlingdao", attrName="shifoubumenlingdao", label="是否为领导"),
		@Column(name="loginname", attrName="loginname", label="账户名"),
		@Column(name="loginpw", attrName="loginpw", label="密码"),
		@Column(name="del", attrName="del", label="del"),
	}, orderBy="a.id DESC, a.eid DESC"
)
public class Tyuangong extends DataEntity<Tyuangong> {
	
	private static final long serialVersionUID = 1L;
	private Long orgId;		// 部门
	private String eid;		// 工号
	private String name;		// 姓名
	private String sex;		// 性别
	private String age;		// 年龄
	private String zhiwei;		// 职位
	private String shifoubumenlingdao;		// 是否为领导
	private String loginname;		// 账户名
	private String loginpw;		// 密码
	private String del;		// del
	
	public Tyuangong() {
		this(null, null);
	}

	public Tyuangong(Long id, String eid){
		this.id = id;
		this.eid = eid;
	}
	
	public Long getOrgId() {
		return orgId;
	}

	public void setOrgId(Long orgId) {
		this.orgId = orgId;
	}
	
	public String getEid() {
		return eid;
	}

	public void setEid(String eid) {
		this.eid = eid;
	}
	
	@Length(min=0, max=50, message="姓名长度不能超过 50 个字符")
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}
	
	@Length(min=0, max=50, message="性别长度不能超过 50 个字符")
	public String getSex() {
		return sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}
	
	@Length(min=0, max=50, message="年龄长度不能超过 50 个字符")
	public String getAge() {
		return age;
	}

	public void setAge(String age) {
		this.age = age;
	}
	
	@Length(min=0, max=50, message="职位长度不能超过 50 个字符")
	public String getZhiwei() {
		return zhiwei;
	}

	public void setZhiwei(String zhiwei) {
		this.zhiwei = zhiwei;
	}
	
	@Length(min=0, max=50, message="是否为领导长度不能超过 50 个字符")
	public String getShifoubumenlingdao() {
		return shifoubumenlingdao;
	}

	public void setShifoubumenlingdao(String shifoubumenlingdao) {
		this.shifoubumenlingdao = shifoubumenlingdao;
	}
	
	@Length(min=0, max=50, message="账户名长度不能超过 50 个字符")
	public String getLoginname() {
		return loginname;
	}

	public void setLoginname(String loginname) {
		this.loginname = loginname;
	}
	
	@Length(min=0, max=50, message="密码长度不能超过 50 个字符")
	public String getLoginpw() {
		return loginpw;
	}

	public void setLoginpw(String loginpw) {
		this.loginpw = loginpw;
	}
	
	@Length(min=0, max=50, message="del长度不能超过 50 个字符")
	public String getDel() {
		return del;
	}

	public void setDel(String del) {
		this.del = del;
	}
	
}
2021-01-08 21:29:24.908 DEBUG 24980 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - File Extents ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tyuangong.java
2021-01-08 21:29:24.909 DEBUG 24980 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TyuangongDao.java
2021-01-08 21:29:24.911 DEBUG 24980 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.employee.entity.Tyuangong;

/**
 * employeeDAO接口
 * @author LX
 * @version 2021-01-08
 */
@MyBatisDao
public interface TyuangongDao extends CrudDao<Tyuangong> {
	
}
2021-01-08 21:29:24.912 DEBUG 24980 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - File Extents ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TyuangongDao.java
2021-01-08 21:29:24.912 DEBUG 24980 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\service\TyuangongService.java
2021-01-08 21:29:24.926 DEBUG 24980 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.service;

import java.util.List;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.jeesite.common.entity.Page;
import com.jeesite.common.service.CrudService;
import com.jeesite.modules.employee.entity.Tyuangong;
import com.jeesite.modules.employee.dao.TyuangongDao;

/**
 * employeeService
 * @author LX
 * @version 2021-01-08
 */
@Service
@Transactional(readOnly=true)
public class TyuangongService extends CrudService<TyuangongDao, Tyuangong> {
	
	/**
	 * 获取单条数据
	 * @param tyuangong
	 * @return
	 */
	@Override
	public Tyuangong get(Tyuangong tyuangong) {
		return super.get(tyuangong);
	}
	
	/**
	 * 查询分页数据
	 * @param tyuangong 查询条件
	 * @param tyuangong.page 分页对象
	 * @return
	 */
	@Override
	public Page<Tyuangong> findPage(Tyuangong tyuangong) {
		return super.findPage(tyuangong);
	}
	
	/**
	 * 保存数据（插入或更新）
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void save(Tyuangong tyuangong) {
		super.save(tyuangong);
	}
	
	/**
	 * 更新状态
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void updateStatus(Tyuangong tyuangong) {
		super.updateStatus(tyuangong);
	}
	
	/**
	 * 删除数据
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void delete(Tyuangong tyuangong) {
		super.delete(tyuangong);
	}
	
}
2021-01-08 21:29:24.926 DEBUG 24980 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - File Extents ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\service\TyuangongService.java
2021-01-08 21:29:24.928 DEBUG 24980 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\web\TyuangongController.java
2021-01-08 21:29:24.941 DEBUG 24980 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.jeesite.common.config.Global;
import com.jeesite.common.entity.Page;
import com.jeesite.common.web.BaseController;
import com.jeesite.modules.employee.entity.Tyuangong;
import com.jeesite.modules.employee.service.TyuangongService;

/**
 * employeeController
 * @author LX
 * @version 2021-01-08
 */
@Controller
@RequestMapping(value = "${adminPath}/employee/tyuangong")
public class TyuangongController extends BaseController {

	@Autowired
	private TyuangongService tyuangongService;
	
	/**
	 * 获取数据
	 */
	@ModelAttribute
	public Tyuangong get(Long id, String eid, boolean isNewRecord) {
		Tyuangong tyuangong = new Tyuangong();
		tyuangong.setId(id);
		tyuangong.setEid(eid);
		tyuangong.setIsNewRecord(isNewRecord);
		return tyuangongService.getAndValid(tyuangong);
	}
	
	/**
	 * 查询列表
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = {"list", ""})
	public String list(Tyuangong tyuangong, Model model) {
		model.addAttribute("tyuangong", tyuangong);
		return "modules/employee/tyuangongList";
	}
	
	/**
	 * 查询列表数据
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = "listData")
	@ResponseBody
	public Page<Tyuangong> listData(Tyuangong tyuangong, HttpServletRequest request, HttpServletResponse response) {
		tyuangong.setPage(new Page<>(request, response));
		Page<Tyuangong> page = tyuangongService.findPage(tyuangong);
		return page;
	}

	/**
	 * 查看编辑表单
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = "form")
	public String form(Tyuangong tyuangong, Model model) {
		model.addAttribute("tyuangong", tyuangong);
		return "modules/employee/tyuangongForm";
	}

	/**
	 * 保存数据
	 */
	@RequiresPermissions("employee:tyuangong:edit")
	@PostMapping(value = "save")
	@ResponseBody
	public String save(@Validated Tyuangong tyuangong) {
		tyuangongService.save(tyuangong);
		return renderResult(Global.TRUE, text("保存employee成功！"));
	}
	
	/**
	 * 删除数据
	 */
	@RequiresPermissions("employee:tyuangong:edit")
	@RequestMapping(value = "delete")
	@ResponseBody
	public String delete(Tyuangong tyuangong) {
		tyuangongService.delete(tyuangong);
		return renderResult(Global.TRUE, text("删除employee成功！"));
	}
	
}
2021-01-08 21:29:24.942 DEBUG 24980 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - File Extents ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\web\TyuangongController.java
2021-01-08 21:29:24.942 DEBUG 24980 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongList.html
2021-01-08 21:29:24.978 DEBUG 24980 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: 'employee管理', libs: ['dataGrid']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header">
			<div class="box-title">
				<i class="fa icon-notebook"></i> ${text('employee管理')}
			</div>
			<div class="box-tools pull-right">
				<a href="#" class="btn btn-default" id="btnSearch" title="${text('查询')}"><i class="fa fa-filter"></i> ${text('查询')}</a>
				<% if(hasPermi('employee:tyuangong:edit')){ %>
					<a href="${ctx}/employee/tyuangong/form" class="btn btn-default btnTool" title="${text('新增employee')}"><i class="fa fa-plus"></i> ${text('新增')}</a>
				<% } %>
				<a href="#" class="btn btn-default" id="btnSetting" title="${text('设置')}"><i class="fa fa-navicon"></i></a>
			</div>
		</div>
		<div class="box-body">
			<#form:form id="searchForm" model="${tyuangong}" action="${ctx}/employee/tyuangong/listData" method="post" class="form-inline hide"
					data-page-no="${parameter.pageNo}" data-page-size="${parameter.pageSize}" data-order-by="${parameter.orderBy}">
				<div class="form-group">
					<label class="control-label">${text('部门')}：</label>
					<div class="control-inline">
						<#form:input path="orgId" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('姓名')}：</label>
					<div class="control-inline">
						<#form:input path="name" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('性别')}：</label>
					<div class="control-inline">
						<#form:input path="sex" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('年龄')}：</label>
					<div class="control-inline">
						<#form:input path="age" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('职位')}：</label>
					<div class="control-inline">
						<#form:input path="zhiwei" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('是否为领导')}：</label>
					<div class="control-inline">
						<#form:input path="shifoubumenlingdao" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('账户名')}：</label>
					<div class="control-inline">
						<#form:input path="loginname" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('密码')}：</label>
					<div class="control-inline">
						<#form:input path="loginpw" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('del')}：</label>
					<div class="control-inline">
						<#form:input path="del" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<button type="submit" class="btn btn-primary btn-sm">${text('查询')}</button>
					<button type="reset" class="btn btn-default btn-sm">${text('重置')}</button>
				</div>
			</#form:form>
			<table id="dataGrid"></table>
			<div id="dataGridPage"></div>
		</div>
	</div>
</div>
<% } %>
<script>
// 初始化DataGrid对象
$('#dataGrid').dataGrid({
	searchForm: $("#searchForm"),
	columnModel: [
		{header:'${text("部门")}', name:'orgId', index:'a.org_id', width:150, align:"left", frozen:true, formatter: function(val, obj, row, act){
			return '<a href="${ctx}/employee/tyuangong/form?id='+row.id+'&eid='+row.eid+'" class="btnList" data-title="${text("编辑employee")}">'+(val||row.id)+'</a>';
		}},
		{header:'${text("姓名")}', name:'name', index:'a.name', width:150, align:"left"},
		{header:'${text("性别")}', name:'sex', index:'a.sex', width:150, align:"left"},
		{header:'${text("年龄")}', name:'age', index:'a.age', width:150, align:"left"},
		{header:'${text("职位")}', name:'zhiwei', index:'a.zhiwei', width:150, align:"left"},
		{header:'${text("是否为领导")}', name:'shifoubumenlingdao', index:'a.shifoubumenlingdao', width:150, align:"left"},
		{header:'${text("账户名")}', name:'loginname', index:'a.loginname', width:150, align:"left"},
		{header:'${text("密码")}', name:'loginpw', index:'a.loginpw', width:150, align:"left"},
		{header:'${text("del")}', name:'del', index:'a.del', width:150, align:"left"},
		{header:'${text("操作")}', name:'actions', width:120, sortable:false, title:false, formatter: function(val, obj, row, act){
			var actions = [];
			<% if(hasPermi('employee:tyuangong:edit')){ %>
				actions.push('<a href="${ctx}/employee/tyuangong/form?id='+row.id+'&eid='+row.eid+'" class="btnList" title="${text("编辑employee")}"><i class="fa fa-pencil"></i></a>&nbsp;');
				actions.push('<a href="${ctx}/employee/tyuangong/delete?id='+row.id+'&eid='+row.eid+'" class="btnList" title="${text("删除employee")}" data-confirm="${text("确认要删除该employee吗？")}"><i class="fa fa-trash-o"></i></a>&nbsp;');
			<% } %>
			return actions.join('');
		}}
	],
	// 加载成功后执行事件
	ajaxSuccess: function(data){
		
	}
});
</script>
2021-01-08 21:29:24.978 DEBUG 24980 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - File Extents ==> C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongList.html
2021-01-08 21:29:24.979 DEBUG 24980 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongForm.html
2021-01-08 21:29:25.024 DEBUG 24980 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: 'employee管理', libs: ['validate']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header with-border">
			<div class="box-title">
				<i class="fa icon-note"></i> ${text(tyuangong.isNewRecord ? '新增employee' : '编辑employee')}
			</div>
			<div class="box-tools pull-right">
				<button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
			</div>
		</div>
		<#form:form id="inputForm" model="${tyuangong}" action="${ctx}/employee/tyuangong/save" method="post" class="form-horizontal">
			<div class="box-body">
				<div class="form-unit">${text('基本信息')}</div>
				<#form:hidden path="id"/>
				<div class="row">
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('部门')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="orgId" class="form-control digits"/>
							</div>
						</div>
					</div>
				<#form:hidden path="eid"/>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('姓名')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="name" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('性别')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="sex" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('年龄')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="age" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('职位')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="zhiwei" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('是否为领导')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="shifoubumenlingdao" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('账户名')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="loginname" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('密码')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="loginpw" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('del')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="del" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="box-footer">
				<div class="row">
					<div class="col-sm-offset-2 col-sm-10">
						<% if (hasPermi('employee:tyuangong:edit')){ %>
							<button type="submit" class="btn btn-sm btn-primary" id="btnSubmit"><i class="fa fa-check"></i> ${text('保 存')}</button>&nbsp;
						<% } %>
						<button type="button" class="btn btn-sm btn-default" id="btnCancel" onclick="js.closeCurrentTabPage()"><i class="fa fa-reply-all"></i> ${text('关 闭')}</button>
					</div>
				</div>
			</div>
		</#form:form>
	</div>
</div>
<% } %>
<script>
$("#inputForm").validate({
	submitHandler: function(form){
		js.ajaxSubmitForm($(form), function(data){
			js.showMessage(data.message);
			if(data.result == Global.TRUE){
				js.closeCurrentTabPage(function(contentWindow){
					contentWindow.page();
				});
			}
		}, "json");
    }
});
</script>
2021-01-08 21:29:25.025 DEBUG 24980 [nio-8980-exec-4] [com.jeesite.modules.gen.utils.GenUtils ] - File Extents ==> C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongForm.html
2021-01-08 21:29:25.052 DEBUG 24980 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:29:25.035  用时: 724毫秒  URI: /js/a/gen/genTable/save  总内存: 646MB  已用内存: 439.228MB
2021-01-08 21:29:25.057 DEBUG 24980 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:29:25.057 DEBUG 24980 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:29:25.058 DEBUG 24980 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:29:25.059 DEBUG 24980 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535882500939776(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:29:25.051(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=t_yuangong&comments=t_yuangong&className=Tyuangong&functionAuthor=LX&parentTableName=&parentTableFkName=eid&remarks=&columnList[0].id=1347532582120304640&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=id&columnList[0].columnType=int&columnList[0].attrType=Long&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=6/4/8&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1347532582204190720&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=org_id&columnList[1].comments=部门&columnList[1].columnType=int&columnList[1].attrType=Long&columnList[1].fullAttrName=orgId&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=6/4/8&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[1].optionMap['fieldValid']=digits&columnList[2].id=1347532582275493888&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=eid&columnList[2].comments=工号&columnList[2].columnType=varchar(55)&columnList[2].attrType=String&columnList[2].fullAttrName=eid&!columnList[2].isPk=&columnList[2].isPk=1&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&!columnList[2].isList=&!columnList[2].isQuery=&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].isRequired=1&columnList[2].showType=hidden&columnList[2].optionMap['gridRowCol']=6/4/8&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[2].optionMap['fieldValid']=abc&columnList[3].id=1347532582569095168&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=name&columnList[3].comments=姓名&columnList[3].columnType=varchar(50)&columnList[3].attrType=String&columnList[3].fullAttrName=name&!columnList[3].isPk=&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&columnList[3].isUpdate=1&!columnList[3].isList=&columnList[3].isList=1&!columnList[3].isQuery=&columnList[3].isQuery=1&columnList[3].queryType=LIKE&!columnList[3].isEdit=&columnList[3].isEdit=1&!columnList[3].isRequired=&columnList[3].showType=input&columnList[3].optionMap['gridRowCol']=6/4/8&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[4].id=1347532582594260992&columnList[4].status=&columnList[4].columnSort=50&columnList[4].columnName=sex&columnList[4].comments=性别&columnList[4].columnType=varchar(50)&columnList[4].attrType=String&columnList[4].fullAttrName=sex&!columnList[4].isPk=&!columnList[4].isInsert=&columnList[4].isInsert=1&!columnList[4].isUpdate=&columnList[4].isUpdate=1&!columnList[4].isList=&columnList[4].isList=1&!columnList[4].isQuery=&columnList[4].isQuery=1&columnList[4].queryType=EQ&!columnList[4].isEdit=&columnList[4].isEdit=1&!columnList[4].isRequired=&columnList[4].showType=input&columnList[4].optionMap['gridRowCol']=6/4/8&!columnList[4].optionMap['isNewLine']=&columnList[4].optionMap['dictName']=&columnList[4].optionMap['dictType']=&!columnList[4].optionMap['fieldValid']=&columnList[5].id=1347532582611038208&columnList[5].status=&columnList[5].columnSort=60&columnList[5].columnName=age&columnList[5].comments=年龄&columnList[5].columnType=varchar(50)&columnList[5].attrType=String&columnList[5].fullAttrName=age&!columnList[5].isPk=&!columnList[5].isInsert=&columnList[5].isInsert=1&!columnList[5].isUpdate=&columnList[5].isUpdate=1&!columnList[5].isList=&columnList[5].isList=1&!columnList[5].isQuery=&columnList[5].isQuery=1&columnList[5].queryType=EQ&!columnList[5].isEdit=&columnList[5].isEdit=1&!columnList[5].isRequired=&columnList[5].showType=input&columnList[5].optionMap['gridRowCol']=6/4/8&!columnList[5].optionMap['isNewLine']=&columnList[5].optionMap['dictName']=&columnList[5].optionMap['dictType']=&!columnList[5].optionMap['fieldValid']=&columnList[6].id=1347532582627815424&columnList[6].status=&columnList[6].columnSort=70&columnList[6].columnName=zhiwei&columnList[6].comments=职位&columnList[6].columnType=varchar(50)&columnList[6].attrType=String&columnList[6].fullAttrName=zhiwei&!columnList[6].isPk=&!columnList[6].isInsert=&columnList[6].isInsert=1&!columnList[6].isUpdate=&columnList[6].isUpdate=1&!columnList[6].isList=&columnList[6].isList=1&!columnList[6].isQuery=&columnList[6].isQuery=1&columnList[6].queryType=EQ&!columnList[6].isEdit=&columnList[6].isEdit=1&!columnList[6].isRequired=&columnList[6].showType=input&columnList[6].optionMap['gridRowCol']=6/4/8&!columnList[6].optionMap['isNewLine']=&columnList[6].optionMap['dictName']=&columnList[6].optionMap['dictType']=&!columnList[6].optionMap['fieldValid']=&columnList[7].id=1347532582661369856&columnList[7].status=&columnList[7].columnSort=80&columnList[7].columnName=shifoubumenlingdao&columnList[7].comments=是否为领导&columnList[7].columnType=varchar(50)&columnList[7].attrType=String&columnList[7].fullAttrName=shifoubumenlingdao&!columnList[7].isPk=&!columnList[7].isInsert=&columnList[7].isInsert=1&!columnList[7].isUpdate=&columnList[7].isUpdate=1&!columnList[7].isList=&columnList[7].isList=1&!columnList[7].isQuery=&columnList[7].isQuery=1&columnList[7].queryType=EQ&!columnList[7].isEdit=&columnList[7].isEdit=1&!columnList[7].isRequired=&columnList[7].showType=input&columnList[7].optionMap['gridRowCol']=6/4/8&!columnList[7].optionMap['isNewLine']=&columnList[7].optionMap['dictName']=&columnList[7].optionMap['dictType']=&!columnList[7].optionMap['fieldValid']=&columnList[8].id=1347532582682341376&columnList[8].status=&columnList[8].columnSort=90&columnList[8].columnName=loginname&columnList[8].comments=账户名&columnList[8].columnType=varchar(50)&columnList[8].attrType=String&columnList[8].fullAttrName=loginname&!columnList[8].isPk=&!columnList[8].isInsert=&columnList[8].isInsert=1&!columnList[8].isUpdate=&columnList[8].isUpdate=1&!columnList[8].isList=&columnList[8].isList=1&!columnList[8].isQuery=&columnList[8].isQuery=1&columnList[8].queryType=EQ&!columnList[8].isEdit=&columnList[8].isEdit=1&!columnList[8].isRequired=&columnList[8].showType=input&columnList[8].optionMap['gridRowCol']=6/4/8&!columnList[8].optionMap['isNewLine']=&columnList[8].optionMap['dictName']=&columnList[8].optionMap['dictType']=&!columnList[8].optionMap['fieldValid']=&columnList[9].id=1347532582703312896&columnList[9].status=&columnList[9].columnSort=100&columnList[9].columnName=loginpw&columnList[9].comments=密码&columnList[9].columnType=varchar(50)&columnList[9].attrType=String&columnList[9].fullAttrName=loginpw&!columnList[9].isPk=&!columnList[9].isInsert=&columnList[9].isInsert=1&!columnList[9].isUpdate=&columnList[9].isUpdate=1&!columnList[9].isList=&columnList[9].isList=1&!columnList[9].isQuery=&columnList[9].isQuery=1&columnList[9].queryType=EQ&!columnList[9].isEdit=&columnList[9].isEdit=1&!columnList[9].isRequired=&columnList[9].showType=input&columnList[9].optionMap['gridRowCol']=6/4/8&!columnList[9].optionMap['isNewLine']=&columnList[9].optionMap['dictName']=&columnList[9].optionMap['dictType']=&!columnList[9].optionMap['fieldValid']=&columnList[10].id=1347532582732673024&columnList[10].status=&columnList[10].columnSort=110&columnList[10].columnName=del&columnList[10].comments=del&columnList[10].columnType=varchar(50)&columnList[10].attrType=String&columnList[10].fullAttrName=del&!columnList[10].isPk=&!columnList[10].isInsert=&columnList[10].isInsert=1&!columnList[10].isUpdate=&columnList[10].isUpdate=1&!columnList[10].isList=&columnList[10].isList=1&!columnList[10].isQuery=&columnList[10].isQuery=1&columnList[10].queryType=EQ&!columnList[10].isEdit=&columnList[10].isEdit=1&!columnList[10].isRequired=&columnList[10].showType=input&columnList[10].optionMap['gridRowCol']=6/4/8&!columnList[10].optionMap['isNewLine']=&columnList[10].optionMap['dictName']=&columnList[10].optionMap['dictType']=&!columnList[10].optionMap['fieldValid']=&tplCategory=crud&packageName=com.jeesite.modules&moduleName=employee&subModuleName=&functionName=employee&functionNameSimple=employee&genBaseDir=C:\Users\Lx\work2\web&!optionMap['isHaveDisableEnable']=&optionMap['isHaveDisableEnable']=0&!optionMap['isHaveDelete']=&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&!optionMap['isImageUpload']=&optionMap['isImageUpload']=0&!optionMap['isFileUpload']=&optionMap['isFileUpload']=0&!optionMap['isBpmForm']=&optionMap['isBpmForm']=0&optionMap['bpmFormKey']=&genFlag=2&!replaceFile=0(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 724(Long)
2021-01-08 21:29:25.061 DEBUG 24980 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:29:25.085 DEBUG 24980 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:29:25.085  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:29:25.089 DEBUG 24980 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:29:25.090 DEBUG 24980 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:29:25.102 DEBUG 24980 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:29:25.102 DEBUG 24980 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:29:25.106 DEBUG 24980 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:29:25.107 DEBUG 24980 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:29:25.109 DEBUG 24980 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:29:25.115 DEBUG 24980 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:29:25.114  用时: 29毫秒  URI: /js/a/gen/genTable/listData  总内存: 646MB  已用内存: 441.453MB
2021-01-08 21:29:25.119 DEBUG 24980 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:29:25.119 DEBUG 24980 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:29:25.120 DEBUG 24980 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:29:25.122 DEBUG 24980 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535882769375232(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:29:25.115(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 29(Long)
2021-01-08 21:29:25.123 DEBUG 24980 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:29:30.647 DEBUG 24980 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:29:30.646  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:29:30.649 DEBUG 24980 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:29:30.650 DEBUG 24980 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:29:30.654 DEBUG 24980 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:29:30.655 DEBUG 24980 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:29:30.658 DEBUG 24980 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:29:30.660 DEBUG 24980 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:29:30.666 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:29:30.667 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:29:30.670 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:29:30.676 DEBUG 24980 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:29:30.685 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 21:29:30.685 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_yuangong(String), t_yuangong(String)
2021-01-08 21:29:30.688 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 21:29:30.694 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 21:29:30.695 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:29:30.699 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 11
2021-01-08 21:29:30.705 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 21:29:30.706 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:29:30.709 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 2
2021-01-08 21:29:30.723 DEBUG 24980 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:29:30.723 DEBUG 24980 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will not be managed by Spring
2021-01-08 21:29:30.729 DEBUG 24980 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:29:30.730 DEBUG 24980 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 21:29:30.733 DEBUG 24980 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 21:29:30.745 DEBUG 24980 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:29:30.746 DEBUG 24980 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will not be managed by Spring
2021-01-08 21:29:30.752 DEBUG 24980 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:29:30.754 DEBUG 24980 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 21:29:30.759 DEBUG 24980 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 4
2021-01-08 21:29:30.761 DEBUG 24980 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:29:30.767 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 21:29:30.767 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 21:29:30.769 DEBUG 24980 [nio-8980-exec-7] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 21:29:30.770 INFO  24980 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:29:30.885 DEBUG 24980 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:29:30.882  用时: 236毫秒  URI: /js/a/gen/genTable/form  总内存: 646MB  已用内存: 450.401MB
2021-01-08 21:29:30.887 DEBUG 24980 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:29:30.888 DEBUG 24980 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:29:30.889 DEBUG 24980 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:29:30.890 DEBUG 24980 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535906962120704(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:29:30.883(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=t_yuangong&op=step2(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 236(Long)
2021-01-08 21:29:30.892 DEBUG 24980 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:29:34.052 DEBUG 24980 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:29:34.051  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 21:29:34.053 DEBUG 24980 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:29:34.053 DEBUG 24980 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:29:34.058 DEBUG 24980 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:29:34.058 DEBUG 24980 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:29:34.060 DEBUG 24980 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:29:34.061 DEBUG 24980 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:29:34.065 DEBUG 24980 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:29:34.065 DEBUG 24980 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:29:34.068 DEBUG 24980 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:29:34.119 DEBUG 24980 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 4毫秒: UPDATE `js_gen_table` SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2021-01-08 21:29:34.119 DEBUG 24980 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:29:34.120 DEBUG 24980 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE `js_gen_table` SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ?
2021-01-08 21:29:34.121 DEBUG 24980 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: Tyuangong(String), t_yuangong(String), (String), eid(String), (String), crud(String), com.jeesite.modules(String), employee(String), (String), employee(String), employee(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 21:29:34.116(Timestamp), (String), t_yuangong(String)
2021-01-08 21:29:34.122 DEBUG 24980 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2021-01-08 21:29:34.123 DEBUG 24980 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:29:34.124 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:29:34.124 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), id(String), 10(Integer), int(String), id(String), id(String), id(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582120304640(String)
2021-01-08 21:29:34.125 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:29:34.126 DEBUG 24980 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:29:34.127 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:29:34.128 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), org_id(String), 20(Integer), int(String), 部门(String), 部门(String), orgId(String), Long(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"digits","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582204190720(String)
2021-01-08 21:29:34.169 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:29:34.171 DEBUG 24980 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:29:34.174 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:29:34.176 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), eid(String), 30(Integer), varchar(55)(String), 工号(String), 工号(String), eid(String), String(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582275493888(String)
2021-01-08 21:29:34.177 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:29:34.180 DEBUG 24980 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:29:34.182 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:29:34.183 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), name(String), 40(Integer), varchar(50)(String), 姓名(String), 姓名(String), name(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), LIKE(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582569095168(String)
2021-01-08 21:29:34.185 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:29:34.186 DEBUG 24980 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:29:34.188 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:29:34.210 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), sex(String), 50(Integer), varchar(50)(String), 性别(String), 性别(String), sex(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582594260992(String)
2021-01-08 21:29:34.212 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:29:34.214 DEBUG 24980 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:29:34.215 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:29:34.216 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), age(String), 60(Integer), varchar(50)(String), 年龄(String), 年龄(String), age(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582611038208(String)
2021-01-08 21:29:34.217 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:29:34.218 DEBUG 24980 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:29:34.219 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:29:34.220 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), zhiwei(String), 70(Integer), varchar(50)(String), 职位(String), 职位(String), zhiwei(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582627815424(String)
2021-01-08 21:29:34.221 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:29:34.222 DEBUG 24980 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:29:34.235 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:29:34.236 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), shifoubumenlingdao(String), 80(Integer), varchar(50)(String), 是否为领导(String), 是否为领导(String), shifoubumenlingdao(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582661369856(String)
2021-01-08 21:29:34.237 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:29:34.239 DEBUG 24980 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:29:34.240 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:29:34.241 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), loginname(String), 90(Integer), varchar(50)(String), 账户名(String), 账户名(String), loginname(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582682341376(String)
2021-01-08 21:29:34.242 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:29:34.244 DEBUG 24980 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:29:34.245 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:29:34.246 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), loginpw(String), 100(Integer), varchar(50)(String), 密码(String), 密码(String), loginpw(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582703312896(String)
2021-01-08 21:29:34.248 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:29:34.249 DEBUG 24980 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:29:34.250 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:29:34.252 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), del(String), 110(Integer), varchar(50)(String), del(String), del(String), del(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582732673024(String)
2021-01-08 21:29:34.253 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:29:34.283 DEBUG 24980 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:29:34.284 DEBUG 24980 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:29:34.290 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC
2021-01-08 21:29:34.292 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:29:34.293 DEBUG 24980 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 0
2021-01-08 21:29:34.294 DEBUG 24980 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TyuangongDao.xml
2021-01-08 21:29:34.294 DEBUG 24980 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.employee.dao.TyuangongDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tyuangong">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 21:29:34.296 DEBUG 24980 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TyuangongDao.xml
2021-01-08 21:29:34.297 DEBUG 24980 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tyuangong.java
2021-01-08 21:29:34.298 DEBUG 24980 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.entity;

import org.hibernate.validator.constraints.Length;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * employeeEntity
 * @author LX
 * @version 2021-01-08
 */
@Table(name="t_yuangong", alias="a", columns={
		@Column(name="id", attrName="id", label="id", isPK=true),
		@Column(name="org_id", attrName="orgId", label="部门"),
		@Column(name="eid", attrName="eid", label="工号", isPK=true),
		@Column(name="name", attrName="name", label="姓名", queryType=QueryType.LIKE),
		@Column(name="sex", attrName="sex", label="性别"),
		@Column(name="age", attrName="age", label="年龄"),
		@Column(name="zhiwei", attrName="zhiwei", label="职位"),
		@Column(name="shifoubumenlingdao", attrName="shifoubumenlingdao", label="是否为领导"),
		@Column(name="loginname", attrName="loginname", label="账户名"),
		@Column(name="loginpw", attrName="loginpw", label="密码"),
		@Column(name="del", attrName="del", label="del"),
	}, orderBy="a.id DESC, a.eid DESC"
)
public class Tyuangong extends DataEntity<Tyuangong> {
	
	private static final long serialVersionUID = 1L;
	private Long orgId;		// 部门
	private String eid;		// 工号
	private String name;		// 姓名
	private String sex;		// 性别
	private String age;		// 年龄
	private String zhiwei;		// 职位
	private String shifoubumenlingdao;		// 是否为领导
	private String loginname;		// 账户名
	private String loginpw;		// 密码
	private String del;		// del
	
	public Tyuangong() {
		this(null, null);
	}

	public Tyuangong(Long id, String eid){
		this.id = id;
		this.eid = eid;
	}
	
	public Long getOrgId() {
		return orgId;
	}

	public void setOrgId(Long orgId) {
		this.orgId = orgId;
	}
	
	public String getEid() {
		return eid;
	}

	public void setEid(String eid) {
		this.eid = eid;
	}
	
	@Length(min=0, max=50, message="姓名长度不能超过 50 个字符")
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}
	
	@Length(min=0, max=50, message="性别长度不能超过 50 个字符")
	public String getSex() {
		return sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}
	
	@Length(min=0, max=50, message="年龄长度不能超过 50 个字符")
	public String getAge() {
		return age;
	}

	public void setAge(String age) {
		this.age = age;
	}
	
	@Length(min=0, max=50, message="职位长度不能超过 50 个字符")
	public String getZhiwei() {
		return zhiwei;
	}

	public void setZhiwei(String zhiwei) {
		this.zhiwei = zhiwei;
	}
	
	@Length(min=0, max=50, message="是否为领导长度不能超过 50 个字符")
	public String getShifoubumenlingdao() {
		return shifoubumenlingdao;
	}

	public void setShifoubumenlingdao(String shifoubumenlingdao) {
		this.shifoubumenlingdao = shifoubumenlingdao;
	}
	
	@Length(min=0, max=50, message="账户名长度不能超过 50 个字符")
	public String getLoginname() {
		return loginname;
	}

	public void setLoginname(String loginname) {
		this.loginname = loginname;
	}
	
	@Length(min=0, max=50, message="密码长度不能超过 50 个字符")
	public String getLoginpw() {
		return loginpw;
	}

	public void setLoginpw(String loginpw) {
		this.loginpw = loginpw;
	}
	
	@Length(min=0, max=50, message="del长度不能超过 50 个字符")
	public String getDel() {
		return del;
	}

	public void setDel(String del) {
		this.del = del;
	}
	
}
2021-01-08 21:29:34.301 DEBUG 24980 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tyuangong.java
2021-01-08 21:29:34.303 DEBUG 24980 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TyuangongDao.java
2021-01-08 21:29:34.303 DEBUG 24980 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.employee.entity.Tyuangong;

/**
 * employeeDAO接口
 * @author LX
 * @version 2021-01-08
 */
@MyBatisDao
public interface TyuangongDao extends CrudDao<Tyuangong> {
	
}
2021-01-08 21:29:34.305 DEBUG 24980 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TyuangongDao.java
2021-01-08 21:29:34.305 DEBUG 24980 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\service\TyuangongService.java
2021-01-08 21:29:34.305 DEBUG 24980 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.service;

import java.util.List;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.jeesite.common.entity.Page;
import com.jeesite.common.service.CrudService;
import com.jeesite.modules.employee.entity.Tyuangong;
import com.jeesite.modules.employee.dao.TyuangongDao;

/**
 * employeeService
 * @author LX
 * @version 2021-01-08
 */
@Service
@Transactional(readOnly=true)
public class TyuangongService extends CrudService<TyuangongDao, Tyuangong> {
	
	/**
	 * 获取单条数据
	 * @param tyuangong
	 * @return
	 */
	@Override
	public Tyuangong get(Tyuangong tyuangong) {
		return super.get(tyuangong);
	}
	
	/**
	 * 查询分页数据
	 * @param tyuangong 查询条件
	 * @param tyuangong.page 分页对象
	 * @return
	 */
	@Override
	public Page<Tyuangong> findPage(Tyuangong tyuangong) {
		return super.findPage(tyuangong);
	}
	
	/**
	 * 保存数据（插入或更新）
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void save(Tyuangong tyuangong) {
		super.save(tyuangong);
	}
	
	/**
	 * 更新状态
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void updateStatus(Tyuangong tyuangong) {
		super.updateStatus(tyuangong);
	}
	
	/**
	 * 删除数据
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void delete(Tyuangong tyuangong) {
		super.delete(tyuangong);
	}
	
}
2021-01-08 21:29:34.307 DEBUG 24980 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\service\TyuangongService.java
2021-01-08 21:29:34.307 DEBUG 24980 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\web\TyuangongController.java
2021-01-08 21:29:34.308 DEBUG 24980 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.jeesite.common.config.Global;
import com.jeesite.common.entity.Page;
import com.jeesite.common.web.BaseController;
import com.jeesite.modules.employee.entity.Tyuangong;
import com.jeesite.modules.employee.service.TyuangongService;

/**
 * employeeController
 * @author LX
 * @version 2021-01-08
 */
@Controller
@RequestMapping(value = "${adminPath}/employee/tyuangong")
public class TyuangongController extends BaseController {

	@Autowired
	private TyuangongService tyuangongService;
	
	/**
	 * 获取数据
	 */
	@ModelAttribute
	public Tyuangong get(Long id, String eid, boolean isNewRecord) {
		Tyuangong tyuangong = new Tyuangong();
		tyuangong.setId(id);
		tyuangong.setEid(eid);
		tyuangong.setIsNewRecord(isNewRecord);
		return tyuangongService.getAndValid(tyuangong);
	}
	
	/**
	 * 查询列表
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = {"list", ""})
	public String list(Tyuangong tyuangong, Model model) {
		model.addAttribute("tyuangong", tyuangong);
		return "modules/employee/tyuangongList";
	}
	
	/**
	 * 查询列表数据
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = "listData")
	@ResponseBody
	public Page<Tyuangong> listData(Tyuangong tyuangong, HttpServletRequest request, HttpServletResponse response) {
		tyuangong.setPage(new Page<>(request, response));
		Page<Tyuangong> page = tyuangongService.findPage(tyuangong);
		return page;
	}

	/**
	 * 查看编辑表单
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = "form")
	public String form(Tyuangong tyuangong, Model model) {
		model.addAttribute("tyuangong", tyuangong);
		return "modules/employee/tyuangongForm";
	}

	/**
	 * 保存数据
	 */
	@RequiresPermissions("employee:tyuangong:edit")
	@PostMapping(value = "save")
	@ResponseBody
	public String save(@Validated Tyuangong tyuangong) {
		tyuangongService.save(tyuangong);
		return renderResult(Global.TRUE, text("保存employee成功！"));
	}
	
	/**
	 * 删除数据
	 */
	@RequiresPermissions("employee:tyuangong:edit")
	@RequestMapping(value = "delete")
	@ResponseBody
	public String delete(Tyuangong tyuangong) {
		tyuangongService.delete(tyuangong);
		return renderResult(Global.TRUE, text("删除employee成功！"));
	}
	
}
2021-01-08 21:29:34.310 DEBUG 24980 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\web\TyuangongController.java
2021-01-08 21:29:34.310 DEBUG 24980 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongList.html
2021-01-08 21:29:34.316 DEBUG 24980 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: 'employee管理', libs: ['dataGrid']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header">
			<div class="box-title">
				<i class="fa icon-notebook"></i> ${text('employee管理')}
			</div>
			<div class="box-tools pull-right">
				<a href="#" class="btn btn-default" id="btnSearch" title="${text('查询')}"><i class="fa fa-filter"></i> ${text('查询')}</a>
				<% if(hasPermi('employee:tyuangong:edit')){ %>
					<a href="${ctx}/employee/tyuangong/form" class="btn btn-default btnTool" title="${text('新增employee')}"><i class="fa fa-plus"></i> ${text('新增')}</a>
				<% } %>
				<a href="#" class="btn btn-default" id="btnSetting" title="${text('设置')}"><i class="fa fa-navicon"></i></a>
			</div>
		</div>
		<div class="box-body">
			<#form:form id="searchForm" model="${tyuangong}" action="${ctx}/employee/tyuangong/listData" method="post" class="form-inline hide"
					data-page-no="${parameter.pageNo}" data-page-size="${parameter.pageSize}" data-order-by="${parameter.orderBy}">
				<div class="form-group">
					<label class="control-label">${text('部门')}：</label>
					<div class="control-inline">
						<#form:input path="orgId" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('姓名')}：</label>
					<div class="control-inline">
						<#form:input path="name" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('性别')}：</label>
					<div class="control-inline">
						<#form:input path="sex" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('年龄')}：</label>
					<div class="control-inline">
						<#form:input path="age" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('职位')}：</label>
					<div class="control-inline">
						<#form:input path="zhiwei" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('是否为领导')}：</label>
					<div class="control-inline">
						<#form:input path="shifoubumenlingdao" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('账户名')}：</label>
					<div class="control-inline">
						<#form:input path="loginname" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('密码')}：</label>
					<div class="control-inline">
						<#form:input path="loginpw" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('del')}：</label>
					<div class="control-inline">
						<#form:input path="del" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<button type="submit" class="btn btn-primary btn-sm">${text('查询')}</button>
					<button type="reset" class="btn btn-default btn-sm">${text('重置')}</button>
				</div>
			</#form:form>
			<table id="dataGrid"></table>
			<div id="dataGridPage"></div>
		</div>
	</div>
</div>
<% } %>
<script>
// 初始化DataGrid对象
$('#dataGrid').dataGrid({
	searchForm: $("#searchForm"),
	columnModel: [
		{header:'${text("部门")}', name:'orgId', index:'a.org_id', width:150, align:"left", frozen:true, formatter: function(val, obj, row, act){
			return '<a href="${ctx}/employee/tyuangong/form?id='+row.id+'&eid='+row.eid+'" class="btnList" data-title="${text("编辑employee")}">'+(val||row.id)+'</a>';
		}},
		{header:'${text("姓名")}', name:'name', index:'a.name', width:150, align:"left"},
		{header:'${text("性别")}', name:'sex', index:'a.sex', width:150, align:"left"},
		{header:'${text("年龄")}', name:'age', index:'a.age', width:150, align:"left"},
		{header:'${text("职位")}', name:'zhiwei', index:'a.zhiwei', width:150, align:"left"},
		{header:'${text("是否为领导")}', name:'shifoubumenlingdao', index:'a.shifoubumenlingdao', width:150, align:"left"},
		{header:'${text("账户名")}', name:'loginname', index:'a.loginname', width:150, align:"left"},
		{header:'${text("密码")}', name:'loginpw', index:'a.loginpw', width:150, align:"left"},
		{header:'${text("del")}', name:'del', index:'a.del', width:150, align:"left"},
		{header:'${text("操作")}', name:'actions', width:120, sortable:false, title:false, formatter: function(val, obj, row, act){
			var actions = [];
			<% if(hasPermi('employee:tyuangong:edit')){ %>
				actions.push('<a href="${ctx}/employee/tyuangong/form?id='+row.id+'&eid='+row.eid+'" class="btnList" title="${text("编辑employee")}"><i class="fa fa-pencil"></i></a>&nbsp;');
				actions.push('<a href="${ctx}/employee/tyuangong/delete?id='+row.id+'&eid='+row.eid+'" class="btnList" title="${text("删除employee")}" data-confirm="${text("确认要删除该employee吗？")}"><i class="fa fa-trash-o"></i></a>&nbsp;');
			<% } %>
			return actions.join('');
		}}
	],
	// 加载成功后执行事件
	ajaxSuccess: function(data){
		
	}
});
</script>
2021-01-08 21:29:34.317 DEBUG 24980 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongList.html
2021-01-08 21:29:34.317 DEBUG 24980 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongForm.html
2021-01-08 21:29:34.324 DEBUG 24980 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: 'employee管理', libs: ['validate']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header with-border">
			<div class="box-title">
				<i class="fa icon-note"></i> ${text(tyuangong.isNewRecord ? '新增employee' : '编辑employee')}
			</div>
			<div class="box-tools pull-right">
				<button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
			</div>
		</div>
		<#form:form id="inputForm" model="${tyuangong}" action="${ctx}/employee/tyuangong/save" method="post" class="form-horizontal">
			<div class="box-body">
				<div class="form-unit">${text('基本信息')}</div>
				<#form:hidden path="id"/>
				<div class="row">
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('部门')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="orgId" class="form-control digits"/>
							</div>
						</div>
					</div>
				<#form:hidden path="eid"/>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('姓名')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="name" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('性别')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="sex" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('年龄')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="age" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('职位')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="zhiwei" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('是否为领导')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="shifoubumenlingdao" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('账户名')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="loginname" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('密码')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="loginpw" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('del')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="del" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="box-footer">
				<div class="row">
					<div class="col-sm-offset-2 col-sm-10">
						<% if (hasPermi('employee:tyuangong:edit')){ %>
							<button type="submit" class="btn btn-sm btn-primary" id="btnSubmit"><i class="fa fa-check"></i> ${text('保 存')}</button>&nbsp;
						<% } %>
						<button type="button" class="btn btn-sm btn-default" id="btnCancel" onclick="js.closeCurrentTabPage()"><i class="fa fa-reply-all"></i> ${text('关 闭')}</button>
					</div>
				</div>
			</div>
		</#form:form>
	</div>
</div>
<% } %>
<script>
$("#inputForm").validate({
	submitHandler: function(form){
		js.ajaxSubmitForm($(form), function(data){
			js.showMessage(data.message);
			if(data.result == Global.TRUE){
				js.closeCurrentTabPage(function(contentWindow){
					contentWindow.page();
				});
			}
		}, "json");
    }
});
</script>
2021-01-08 21:29:34.326 DEBUG 24980 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongForm.html
2021-01-08 21:29:34.333 DEBUG 24980 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:29:34.329  用时: 278毫秒  URI: /js/a/gen/genTable/save  总内存: 646MB  已用内存: 467.700MB
2021-01-08 21:29:34.340 DEBUG 24980 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:29:34.341 DEBUG 24980 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@62966c9f] will be managed by Spring
2021-01-08 21:29:34.342 DEBUG 24980 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:29:34.347 DEBUG 24980 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535921432469504(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:29:34.333(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=t_yuangong&comments=t_yuangong&className=Tyuangong&functionAuthor=LX&parentTableName=&parentTableFkName=eid&remarks=&columnList[0].id=1347532582120304640&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=id&columnList[0].columnType=int&columnList[0].attrType=Long&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=6/4/8&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1347532582204190720&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=org_id&columnList[1].comments=部门&columnList[1].columnType=int&columnList[1].attrType=Long&columnList[1].fullAttrName=orgId&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=6/4/8&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[1].optionMap['fieldValid']=digits&columnList[2].id=1347532582275493888&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=eid&columnList[2].comments=工号&columnList[2].columnType=varchar(55)&columnList[2].attrType=String&columnList[2].fullAttrName=eid&!columnList[2].isPk=&columnList[2].isPk=1&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&!columnList[2].isList=&!columnList[2].isQuery=&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].isRequired=1&columnList[2].showType=hidden&columnList[2].optionMap['gridRowCol']=6/4/8&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[2].optionMap['fieldValid']=abc&columnList[3].id=1347532582569095168&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=name&columnList[3].comments=姓名&columnList[3].columnType=varchar(50)&columnList[3].attrType=String&columnList[3].fullAttrName=name&!columnList[3].isPk=&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&columnList[3].isUpdate=1&!columnList[3].isList=&columnList[3].isList=1&!columnList[3].isQuery=&columnList[3].isQuery=1&columnList[3].queryType=LIKE&!columnList[3].isEdit=&columnList[3].isEdit=1&!columnList[3].isRequired=&columnList[3].showType=input&columnList[3].optionMap['gridRowCol']=6/4/8&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[4].id=1347532582594260992&columnList[4].status=&columnList[4].columnSort=50&columnList[4].columnName=sex&columnList[4].comments=性别&columnList[4].columnType=varchar(50)&columnList[4].attrType=String&columnList[4].fullAttrName=sex&!columnList[4].isPk=&!columnList[4].isInsert=&columnList[4].isInsert=1&!columnList[4].isUpdate=&columnList[4].isUpdate=1&!columnList[4].isList=&columnList[4].isList=1&!columnList[4].isQuery=&columnList[4].isQuery=1&columnList[4].queryType=EQ&!columnList[4].isEdit=&columnList[4].isEdit=1&!columnList[4].isRequired=&columnList[4].showType=input&columnList[4].optionMap['gridRowCol']=6/4/8&!columnList[4].optionMap['isNewLine']=&columnList[4].optionMap['dictName']=&columnList[4].optionMap['dictType']=&!columnList[4].optionMap['fieldValid']=&columnList[5].id=1347532582611038208&columnList[5].status=&columnList[5].columnSort=60&columnList[5].columnName=age&columnList[5].comments=年龄&columnList[5].columnType=varchar(50)&columnList[5].attrType=String&columnList[5].fullAttrName=age&!columnList[5].isPk=&!columnList[5].isInsert=&columnList[5].isInsert=1&!columnList[5].isUpdate=&columnList[5].isUpdate=1&!columnList[5].isList=&columnList[5].isList=1&!columnList[5].isQuery=&columnList[5].isQuery=1&columnList[5].queryType=EQ&!columnList[5].isEdit=&columnList[5].isEdit=1&!columnList[5].isRequired=&columnList[5].showType=input&columnList[5].optionMap['gridRowCol']=6/4/8&!columnList[5].optionMap['isNewLine']=&columnList[5].optionMap['dictName']=&columnList[5].optionMap['dictType']=&!columnList[5].optionMap['fieldValid']=&columnList[6].id=1347532582627815424&columnList[6].status=&columnList[6].columnSort=70&columnList[6].columnName=zhiwei&columnList[6].comments=职位&columnList[6].columnType=varchar(50)&columnList[6].attrType=String&columnList[6].fullAttrName=zhiwei&!columnList[6].isPk=&!columnList[6].isInsert=&columnList[6].isInsert=1&!columnList[6].isUpdate=&columnList[6].isUpdate=1&!columnList[6].isList=&columnList[6].isList=1&!columnList[6].isQuery=&columnList[6].isQuery=1&columnList[6].queryType=EQ&!columnList[6].isEdit=&columnList[6].isEdit=1&!columnList[6].isRequired=&columnList[6].showType=input&columnList[6].optionMap['gridRowCol']=6/4/8&!columnList[6].optionMap['isNewLine']=&columnList[6].optionMap['dictName']=&columnList[6].optionMap['dictType']=&!columnList[6].optionMap['fieldValid']=&columnList[7].id=1347532582661369856&columnList[7].status=&columnList[7].columnSort=80&columnList[7].columnName=shifoubumenlingdao&columnList[7].comments=是否为领导&columnList[7].columnType=varchar(50)&columnList[7].attrType=String&columnList[7].fullAttrName=shifoubumenlingdao&!columnList[7].isPk=&!columnList[7].isInsert=&columnList[7].isInsert=1&!columnList[7].isUpdate=&columnList[7].isUpdate=1&!columnList[7].isList=&columnList[7].isList=1&!columnList[7].isQuery=&columnList[7].isQuery=1&columnList[7].queryType=EQ&!columnList[7].isEdit=&columnList[7].isEdit=1&!columnList[7].isRequired=&columnList[7].showType=input&columnList[7].optionMap['gridRowCol']=6/4/8&!columnList[7].optionMap['isNewLine']=&columnList[7].optionMap['dictName']=&columnList[7].optionMap['dictType']=&!columnList[7].optionMap['fieldValid']=&columnList[8].id=1347532582682341376&columnList[8].status=&columnList[8].columnSort=90&columnList[8].columnName=loginname&columnList[8].comments=账户名&columnList[8].columnType=varchar(50)&columnList[8].attrType=String&columnList[8].fullAttrName=loginname&!columnList[8].isPk=&!columnList[8].isInsert=&columnList[8].isInsert=1&!columnList[8].isUpdate=&columnList[8].isUpdate=1&!columnList[8].isList=&columnList[8].isList=1&!columnList[8].isQuery=&columnList[8].isQuery=1&columnList[8].queryType=EQ&!columnList[8].isEdit=&columnList[8].isEdit=1&!columnList[8].isRequired=&columnList[8].showType=input&columnList[8].optionMap['gridRowCol']=6/4/8&!columnList[8].optionMap['isNewLine']=&columnList[8].optionMap['dictName']=&columnList[8].optionMap['dictType']=&!columnList[8].optionMap['fieldValid']=&columnList[9].id=1347532582703312896&columnList[9].status=&columnList[9].columnSort=100&columnList[9].columnName=loginpw&columnList[9].comments=密码&columnList[9].columnType=varchar(50)&columnList[9].attrType=String&columnList[9].fullAttrName=loginpw&!columnList[9].isPk=&!columnList[9].isInsert=&columnList[9].isInsert=1&!columnList[9].isUpdate=&columnList[9].isUpdate=1&!columnList[9].isList=&columnList[9].isList=1&!columnList[9].isQuery=&columnList[9].isQuery=1&columnList[9].queryType=EQ&!columnList[9].isEdit=&columnList[9].isEdit=1&!columnList[9].isRequired=&columnList[9].showType=input&columnList[9].optionMap['gridRowCol']=6/4/8&!columnList[9].optionMap['isNewLine']=&columnList[9].optionMap['dictName']=&columnList[9].optionMap['dictType']=&!columnList[9].optionMap['fieldValid']=&columnList[10].id=1347532582732673024&columnList[10].status=&columnList[10].columnSort=110&columnList[10].columnName=del&columnList[10].comments=del&columnList[10].columnType=varchar(50)&columnList[10].attrType=String&columnList[10].fullAttrName=del&!columnList[10].isPk=&!columnList[10].isInsert=&columnList[10].isInsert=1&!columnList[10].isUpdate=&columnList[10].isUpdate=1&!columnList[10].isList=&columnList[10].isList=1&!columnList[10].isQuery=&columnList[10].isQuery=1&columnList[10].queryType=EQ&!columnList[10].isEdit=&columnList[10].isEdit=1&!columnList[10].isRequired=&columnList[10].showType=input&columnList[10].optionMap['gridRowCol']=6/4/8&!columnList[10].optionMap['isNewLine']=&columnList[10].optionMap['dictName']=&columnList[10].optionMap['dictType']=&!columnList[10].optionMap['fieldValid']=&tplCategory=crud&packageName=com.jeesite.modules&moduleName=employee&subModuleName=&functionName=employee&functionNameSimple=employee&genBaseDir=C:\Users\Lx\work2\web&!optionMap['isHaveDisableEnable']=&optionMap['isHaveDisableEnable']=0&!optionMap['isHaveDelete']=&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&!optionMap['isImageUpload']=&optionMap['isImageUpload']=0&!optionMap['isFileUpload']=&optionMap['isFileUpload']=0&!optionMap['isBpmForm']=&optionMap['isBpmForm']=0&optionMap['bpmFormKey']=&genFlag=2&replaceFile=1&!replaceFile=0(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 278(Long)
2021-01-08 21:29:34.350 DEBUG 24980 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:29:34.358 DEBUG 24980 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:29:34.358  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:29:34.374 DEBUG 24980 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:29:34.374 DEBUG 24980 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@51c6c39a] will be managed by Spring
2021-01-08 21:29:34.385 DEBUG 24980 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:29:34.385 DEBUG 24980 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:29:34.388 DEBUG 24980 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:29:34.388 DEBUG 24980 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:29:34.391 DEBUG 24980 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:29:34.397 DEBUG 24980 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:29:34.397  用时: 39毫秒  URI: /js/a/gen/genTable/listData  总内存: 646MB  已用内存: 471.407MB
2021-01-08 21:29:34.401 DEBUG 24980 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:29:34.401 DEBUG 24980 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@51c6c39a] will be managed by Spring
2021-01-08 21:29:34.402 DEBUG 24980 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:29:34.406 DEBUG 24980 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535921700904960(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:29:34.397(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 39(Long)
2021-01-08 21:29:34.410 DEBUG 24980 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:29:36.765 DEBUG 24980 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:29:36.764  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:29:36.767 DEBUG 24980 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:29:36.767 DEBUG 24980 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@51c6c39a] will be managed by Spring
2021-01-08 21:29:36.771 DEBUG 24980 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:29:36.772 DEBUG 24980 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:29:36.773 DEBUG 24980 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:29:36.774 DEBUG 24980 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:29:36.781 DEBUG 24980 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:29:36.781 DEBUG 24980 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:29:36.783 DEBUG 24980 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:29:36.800 DEBUG 24980 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@51c6c39a] will be managed by Spring
2021-01-08 21:29:36.803 DEBUG 24980 [nio-8980-exec-1] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 21:29:36.804 DEBUG 24980 [nio-8980-exec-1] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_yuangong(String), t_yuangong(String)
2021-01-08 21:29:36.808 DEBUG 24980 [nio-8980-exec-1] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 21:29:36.811 DEBUG 24980 [nio-8980-exec-1] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 21:29:36.813 DEBUG 24980 [nio-8980-exec-1] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:29:36.816 DEBUG 24980 [nio-8980-exec-1] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 11
2021-01-08 21:29:36.820 DEBUG 24980 [nio-8980-exec-1] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 21:29:36.820 DEBUG 24980 [nio-8980-exec-1] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:29:36.822 DEBUG 24980 [nio-8980-exec-1] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 2
2021-01-08 21:29:36.826 DEBUG 24980 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:29:36.827 DEBUG 24980 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@51c6c39a] will not be managed by Spring
2021-01-08 21:29:36.832 DEBUG 24980 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:29:36.833 DEBUG 24980 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 21:29:36.834 DEBUG 24980 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 21:29:36.835 DEBUG 24980 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:29:36.835 DEBUG 24980 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@51c6c39a] will not be managed by Spring
2021-01-08 21:29:36.838 DEBUG 24980 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:29:36.838 DEBUG 24980 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 21:29:36.839 DEBUG 24980 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 4
2021-01-08 21:29:36.841 DEBUG 24980 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@51c6c39a] will be managed by Spring
2021-01-08 21:29:36.845 DEBUG 24980 [nio-8980-exec-1] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 21:29:36.846 DEBUG 24980 [nio-8980-exec-1] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 21:29:36.847 DEBUG 24980 [nio-8980-exec-1] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 21:29:36.848 INFO  24980 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:29:36.862 DEBUG 24980 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:29:36.860  用时: 96毫秒  URI: /js/a/gen/genTable/form  总内存: 646MB  已用内存: 477.721MB
2021-01-08 21:29:36.867 DEBUG 24980 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:29:36.867 DEBUG 24980 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@51c6c39a] will be managed by Spring
2021-01-08 21:29:36.868 DEBUG 24980 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:29:36.868 DEBUG 24980 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347535932039864320(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:29:36.862(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=t_yuangong&op=step2(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 96(Long)
2021-01-08 21:29:36.870 DEBUG 24980 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:30:04.896 DEBUG 24980 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:30:04.896  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 21:30:04.898 DEBUG 24980 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:30:04.899 DEBUG 24980 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@51c6c39a] will be managed by Spring
2021-01-08 21:30:04.903 DEBUG 24980 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:30:04.903 DEBUG 24980 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:30:04.904 DEBUG 24980 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:30:04.906 DEBUG 24980 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:30:04.910 DEBUG 24980 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:30:04.910 DEBUG 24980 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:30:04.913 DEBUG 24980 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:30:04.959 DEBUG 24980 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 11毫秒: UPDATE `js_gen_table` SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2021-01-08 21:30:04.960 DEBUG 24980 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@51c6c39a] will be managed by Spring
2021-01-08 21:30:04.961 DEBUG 24980 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE `js_gen_table` SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ?
2021-01-08 21:30:04.962 DEBUG 24980 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: Tyuangong(String), t_yuangong(String), (String), eid(String), (String), crud(String), com.jeesite.modules(String), employee(String), (String), employee(String), employee(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 21:30:04.959(Timestamp), (String), t_yuangong(String)
2021-01-08 21:30:04.964 DEBUG 24980 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2021-01-08 21:30:04.965 DEBUG 24980 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:30:04.966 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:30:04.967 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), id(String), 10(Integer), int(String), id(String), id(String), id(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582120304640(String)
2021-01-08 21:30:04.970 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:30:04.971 DEBUG 24980 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:30:04.978 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:30:04.978 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), org_id(String), 20(Integer), int(String), 部门(String), 部门(String), orgId(String), Long(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"digits","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582204190720(String)
2021-01-08 21:30:04.979 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:30:04.980 DEBUG 24980 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:30:04.981 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:30:04.982 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), eid(String), 30(Integer), varchar(55)(String), 工号(String), 工号(String), eid(String), String(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582275493888(String)
2021-01-08 21:30:04.983 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:30:04.984 DEBUG 24980 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:30:04.985 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:30:04.986 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), name(String), 40(Integer), varchar(50)(String), 姓名(String), 姓名(String), name(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), LIKE(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582569095168(String)
2021-01-08 21:30:04.987 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:30:04.989 DEBUG 24980 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:30:04.990 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:30:04.990 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), sex(String), 50(Integer), varchar(50)(String), 性别(String), 性别(String), sex(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582594260992(String)
2021-01-08 21:30:04.993 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:30:04.994 DEBUG 24980 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:30:04.995 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:30:04.996 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), age(String), 60(Integer), varchar(50)(String), 年龄(String), 年龄(String), age(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582611038208(String)
2021-01-08 21:30:04.997 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:30:04.999 DEBUG 24980 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:30:05.000 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:30:05.000 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), zhiwei(String), 70(Integer), varchar(50)(String), 职位(String), 职位(String), zhiwei(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582627815424(String)
2021-01-08 21:30:05.002 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:30:05.003 DEBUG 24980 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:30:05.004 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:30:05.005 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), shifoubumenlingdao(String), 80(Integer), varchar(50)(String), 是否为领导(String), 是否为领导(String), shifoubumenlingdao(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582661369856(String)
2021-01-08 21:30:05.006 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:30:05.009 DEBUG 24980 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:30:05.010 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:30:05.011 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), loginname(String), 90(Integer), varchar(50)(String), 账户名(String), 账户名(String), loginname(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582682341376(String)
2021-01-08 21:30:05.012 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:30:05.014 DEBUG 24980 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:30:05.015 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:30:05.016 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), loginpw(String), 100(Integer), varchar(50)(String), 密码(String), 密码(String), loginpw(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582703312896(String)
2021-01-08 21:30:05.017 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:30:05.018 DEBUG 24980 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:30:05.019 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:30:05.019 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), del(String), 110(Integer), varchar(50)(String), del(String), del(String), del(String), String(String), (String), 1(String), (String), (String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582732673024(String)
2021-01-08 21:30:05.020 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:30:05.033 DEBUG 24980 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:30:05.033 DEBUG 24980 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@51c6c39a] will be managed by Spring
2021-01-08 21:30:05.036 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC
2021-01-08 21:30:05.037 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:30:05.038 DEBUG 24980 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 0
2021-01-08 21:30:05.038 DEBUG 24980 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TyuangongDao.xml
2021-01-08 21:30:05.038 DEBUG 24980 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.employee.dao.TyuangongDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tyuangong">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 21:30:05.040 DEBUG 24980 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TyuangongDao.xml
2021-01-08 21:30:05.040 DEBUG 24980 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tyuangong.java
2021-01-08 21:30:05.043 DEBUG 24980 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.entity;

import org.hibernate.validator.constraints.Length;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * employeeEntity
 * @author LX
 * @version 2021-01-08
 */
@Table(name="t_yuangong", alias="a", columns={
		@Column(name="id", attrName="id", label="id", isPK=true),
		@Column(name="org_id", attrName="orgId", label="部门"),
		@Column(name="eid", attrName="eid", label="工号", isPK=true),
		@Column(name="name", attrName="name", label="姓名", queryType=QueryType.LIKE),
		@Column(name="sex", attrName="sex", label="性别"),
		@Column(name="age", attrName="age", label="年龄"),
		@Column(name="zhiwei", attrName="zhiwei", label="职位"),
		@Column(name="shifoubumenlingdao", attrName="shifoubumenlingdao", label="是否为领导"),
		@Column(name="loginname", attrName="loginname", label="账户名"),
		@Column(name="loginpw", attrName="loginpw", label="密码"),
		@Column(name="del", attrName="del", label="del", isInsert=false, isUpdate=false, isQuery=false),
	}, orderBy="a.id DESC, a.eid DESC"
)
public class Tyuangong extends DataEntity<Tyuangong> {
	
	private static final long serialVersionUID = 1L;
	private Long orgId;		// 部门
	private String eid;		// 工号
	private String name;		// 姓名
	private String sex;		// 性别
	private String age;		// 年龄
	private String zhiwei;		// 职位
	private String shifoubumenlingdao;		// 是否为领导
	private String loginname;		// 账户名
	private String loginpw;		// 密码
	private String del;		// del
	
	public Tyuangong() {
		this(null, null);
	}

	public Tyuangong(Long id, String eid){
		this.id = id;
		this.eid = eid;
	}
	
	public Long getOrgId() {
		return orgId;
	}

	public void setOrgId(Long orgId) {
		this.orgId = orgId;
	}
	
	public String getEid() {
		return eid;
	}

	public void setEid(String eid) {
		this.eid = eid;
	}
	
	@Length(min=0, max=50, message="姓名长度不能超过 50 个字符")
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}
	
	@Length(min=0, max=50, message="性别长度不能超过 50 个字符")
	public String getSex() {
		return sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}
	
	@Length(min=0, max=50, message="年龄长度不能超过 50 个字符")
	public String getAge() {
		return age;
	}

	public void setAge(String age) {
		this.age = age;
	}
	
	@Length(min=0, max=50, message="职位长度不能超过 50 个字符")
	public String getZhiwei() {
		return zhiwei;
	}

	public void setZhiwei(String zhiwei) {
		this.zhiwei = zhiwei;
	}
	
	@Length(min=0, max=50, message="是否为领导长度不能超过 50 个字符")
	public String getShifoubumenlingdao() {
		return shifoubumenlingdao;
	}

	public void setShifoubumenlingdao(String shifoubumenlingdao) {
		this.shifoubumenlingdao = shifoubumenlingdao;
	}
	
	@Length(min=0, max=50, message="账户名长度不能超过 50 个字符")
	public String getLoginname() {
		return loginname;
	}

	public void setLoginname(String loginname) {
		this.loginname = loginname;
	}
	
	@Length(min=0, max=50, message="密码长度不能超过 50 个字符")
	public String getLoginpw() {
		return loginpw;
	}

	public void setLoginpw(String loginpw) {
		this.loginpw = loginpw;
	}
	
	@Length(min=0, max=50, message="del长度不能超过 50 个字符")
	public String getDel() {
		return del;
	}

	public void setDel(String del) {
		this.del = del;
	}
	
}
2021-01-08 21:30:05.045 DEBUG 24980 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tyuangong.java
2021-01-08 21:30:05.045 DEBUG 24980 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TyuangongDao.java
2021-01-08 21:30:05.045 DEBUG 24980 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.employee.entity.Tyuangong;

/**
 * employeeDAO接口
 * @author LX
 * @version 2021-01-08
 */
@MyBatisDao
public interface TyuangongDao extends CrudDao<Tyuangong> {
	
}
2021-01-08 21:30:05.047 DEBUG 24980 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TyuangongDao.java
2021-01-08 21:30:05.047 DEBUG 24980 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\service\TyuangongService.java
2021-01-08 21:30:05.047 DEBUG 24980 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.service;

import java.util.List;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.jeesite.common.entity.Page;
import com.jeesite.common.service.CrudService;
import com.jeesite.modules.employee.entity.Tyuangong;
import com.jeesite.modules.employee.dao.TyuangongDao;

/**
 * employeeService
 * @author LX
 * @version 2021-01-08
 */
@Service
@Transactional(readOnly=true)
public class TyuangongService extends CrudService<TyuangongDao, Tyuangong> {
	
	/**
	 * 获取单条数据
	 * @param tyuangong
	 * @return
	 */
	@Override
	public Tyuangong get(Tyuangong tyuangong) {
		return super.get(tyuangong);
	}
	
	/**
	 * 查询分页数据
	 * @param tyuangong 查询条件
	 * @param tyuangong.page 分页对象
	 * @return
	 */
	@Override
	public Page<Tyuangong> findPage(Tyuangong tyuangong) {
		return super.findPage(tyuangong);
	}
	
	/**
	 * 保存数据（插入或更新）
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void save(Tyuangong tyuangong) {
		super.save(tyuangong);
	}
	
	/**
	 * 更新状态
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void updateStatus(Tyuangong tyuangong) {
		super.updateStatus(tyuangong);
	}
	
	/**
	 * 删除数据
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void delete(Tyuangong tyuangong) {
		super.delete(tyuangong);
	}
	
}
2021-01-08 21:30:05.048 DEBUG 24980 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\service\TyuangongService.java
2021-01-08 21:30:05.048 DEBUG 24980 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\web\TyuangongController.java
2021-01-08 21:30:05.049 DEBUG 24980 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.jeesite.common.config.Global;
import com.jeesite.common.entity.Page;
import com.jeesite.common.web.BaseController;
import com.jeesite.modules.employee.entity.Tyuangong;
import com.jeesite.modules.employee.service.TyuangongService;

/**
 * employeeController
 * @author LX
 * @version 2021-01-08
 */
@Controller
@RequestMapping(value = "${adminPath}/employee/tyuangong")
public class TyuangongController extends BaseController {

	@Autowired
	private TyuangongService tyuangongService;
	
	/**
	 * 获取数据
	 */
	@ModelAttribute
	public Tyuangong get(Long id, String eid, boolean isNewRecord) {
		Tyuangong tyuangong = new Tyuangong();
		tyuangong.setId(id);
		tyuangong.setEid(eid);
		tyuangong.setIsNewRecord(isNewRecord);
		return tyuangongService.getAndValid(tyuangong);
	}
	
	/**
	 * 查询列表
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = {"list", ""})
	public String list(Tyuangong tyuangong, Model model) {
		model.addAttribute("tyuangong", tyuangong);
		return "modules/employee/tyuangongList";
	}
	
	/**
	 * 查询列表数据
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = "listData")
	@ResponseBody
	public Page<Tyuangong> listData(Tyuangong tyuangong, HttpServletRequest request, HttpServletResponse response) {
		tyuangong.setPage(new Page<>(request, response));
		Page<Tyuangong> page = tyuangongService.findPage(tyuangong);
		return page;
	}

	/**
	 * 查看编辑表单
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = "form")
	public String form(Tyuangong tyuangong, Model model) {
		model.addAttribute("tyuangong", tyuangong);
		return "modules/employee/tyuangongForm";
	}

	/**
	 * 保存数据
	 */
	@RequiresPermissions("employee:tyuangong:edit")
	@PostMapping(value = "save")
	@ResponseBody
	public String save(@Validated Tyuangong tyuangong) {
		tyuangongService.save(tyuangong);
		return renderResult(Global.TRUE, text("保存employee成功！"));
	}
	
	/**
	 * 删除数据
	 */
	@RequiresPermissions("employee:tyuangong:edit")
	@RequestMapping(value = "delete")
	@ResponseBody
	public String delete(Tyuangong tyuangong) {
		tyuangongService.delete(tyuangong);
		return renderResult(Global.TRUE, text("删除employee成功！"));
	}
	
}
2021-01-08 21:30:05.051 DEBUG 24980 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\web\TyuangongController.java
2021-01-08 21:30:05.051 DEBUG 24980 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongList.html
2021-01-08 21:30:05.053 DEBUG 24980 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: 'employee管理', libs: ['dataGrid']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header">
			<div class="box-title">
				<i class="fa icon-notebook"></i> ${text('employee管理')}
			</div>
			<div class="box-tools pull-right">
				<a href="#" class="btn btn-default" id="btnSearch" title="${text('查询')}"><i class="fa fa-filter"></i> ${text('查询')}</a>
				<% if(hasPermi('employee:tyuangong:edit')){ %>
					<a href="${ctx}/employee/tyuangong/form" class="btn btn-default btnTool" title="${text('新增employee')}"><i class="fa fa-plus"></i> ${text('新增')}</a>
				<% } %>
				<a href="#" class="btn btn-default" id="btnSetting" title="${text('设置')}"><i class="fa fa-navicon"></i></a>
			</div>
		</div>
		<div class="box-body">
			<#form:form id="searchForm" model="${tyuangong}" action="${ctx}/employee/tyuangong/listData" method="post" class="form-inline hide"
					data-page-no="${parameter.pageNo}" data-page-size="${parameter.pageSize}" data-order-by="${parameter.orderBy}">
				<div class="form-group">
					<label class="control-label">${text('部门')}：</label>
					<div class="control-inline">
						<#form:input path="orgId" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('姓名')}：</label>
					<div class="control-inline">
						<#form:input path="name" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('性别')}：</label>
					<div class="control-inline">
						<#form:input path="sex" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('年龄')}：</label>
					<div class="control-inline">
						<#form:input path="age" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('职位')}：</label>
					<div class="control-inline">
						<#form:input path="zhiwei" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('是否为领导')}：</label>
					<div class="control-inline">
						<#form:input path="shifoubumenlingdao" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('账户名')}：</label>
					<div class="control-inline">
						<#form:input path="loginname" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('密码')}：</label>
					<div class="control-inline">
						<#form:input path="loginpw" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<button type="submit" class="btn btn-primary btn-sm">${text('查询')}</button>
					<button type="reset" class="btn btn-default btn-sm">${text('重置')}</button>
				</div>
			</#form:form>
			<table id="dataGrid"></table>
			<div id="dataGridPage"></div>
		</div>
	</div>
</div>
<% } %>
<script>
// 初始化DataGrid对象
$('#dataGrid').dataGrid({
	searchForm: $("#searchForm"),
	columnModel: [
		{header:'${text("部门")}', name:'orgId', index:'a.org_id', width:150, align:"left", frozen:true, formatter: function(val, obj, row, act){
			return '<a href="${ctx}/employee/tyuangong/form?id='+row.id+'&eid='+row.eid+'" class="btnList" data-title="${text("编辑employee")}">'+(val||row.id)+'</a>';
		}},
		{header:'${text("姓名")}', name:'name', index:'a.name', width:150, align:"left"},
		{header:'${text("性别")}', name:'sex', index:'a.sex', width:150, align:"left"},
		{header:'${text("年龄")}', name:'age', index:'a.age', width:150, align:"left"},
		{header:'${text("职位")}', name:'zhiwei', index:'a.zhiwei', width:150, align:"left"},
		{header:'${text("是否为领导")}', name:'shifoubumenlingdao', index:'a.shifoubumenlingdao', width:150, align:"left"},
		{header:'${text("账户名")}', name:'loginname', index:'a.loginname', width:150, align:"left"},
		{header:'${text("密码")}', name:'loginpw', index:'a.loginpw', width:150, align:"left"},
		{header:'${text("操作")}', name:'actions', width:120, sortable:false, title:false, formatter: function(val, obj, row, act){
			var actions = [];
			<% if(hasPermi('employee:tyuangong:edit')){ %>
				actions.push('<a href="${ctx}/employee/tyuangong/form?id='+row.id+'&eid='+row.eid+'" class="btnList" title="${text("编辑employee")}"><i class="fa fa-pencil"></i></a>&nbsp;');
				actions.push('<a href="${ctx}/employee/tyuangong/delete?id='+row.id+'&eid='+row.eid+'" class="btnList" title="${text("删除employee")}" data-confirm="${text("确认要删除该employee吗？")}"><i class="fa fa-trash-o"></i></a>&nbsp;');
			<% } %>
			return actions.join('');
		}}
	],
	// 加载成功后执行事件
	ajaxSuccess: function(data){
		
	}
});
</script>
2021-01-08 21:30:05.055 DEBUG 24980 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongList.html
2021-01-08 21:30:05.056 DEBUG 24980 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongForm.html
2021-01-08 21:30:05.060 DEBUG 24980 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: 'employee管理', libs: ['validate']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header with-border">
			<div class="box-title">
				<i class="fa icon-note"></i> ${text(tyuangong.isNewRecord ? '新增employee' : '编辑employee')}
			</div>
			<div class="box-tools pull-right">
				<button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
			</div>
		</div>
		<#form:form id="inputForm" model="${tyuangong}" action="${ctx}/employee/tyuangong/save" method="post" class="form-horizontal">
			<div class="box-body">
				<div class="form-unit">${text('基本信息')}</div>
				<#form:hidden path="id"/>
				<div class="row">
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('部门')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="orgId" class="form-control digits"/>
							</div>
						</div>
					</div>
				<#form:hidden path="eid"/>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('姓名')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="name" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('性别')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="sex" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('年龄')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="age" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('职位')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="zhiwei" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('是否为领导')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="shifoubumenlingdao" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('账户名')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="loginname" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('密码')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="loginpw" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="box-footer">
				<div class="row">
					<div class="col-sm-offset-2 col-sm-10">
						<% if (hasPermi('employee:tyuangong:edit')){ %>
							<button type="submit" class="btn btn-sm btn-primary" id="btnSubmit"><i class="fa fa-check"></i> ${text('保 存')}</button>&nbsp;
						<% } %>
						<button type="button" class="btn btn-sm btn-default" id="btnCancel" onclick="js.closeCurrentTabPage()"><i class="fa fa-reply-all"></i> ${text('关 闭')}</button>
					</div>
				</div>
			</div>
		</#form:form>
	</div>
</div>
<% } %>
<script>
$("#inputForm").validate({
	submitHandler: function(form){
		js.ajaxSubmitForm($(form), function(data){
			js.showMessage(data.message);
			if(data.result == Global.TRUE){
				js.closeCurrentTabPage(function(contentWindow){
					contentWindow.page();
				});
			}
		}, "json");
    }
});
</script>
2021-01-08 21:30:05.063 DEBUG 24980 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongForm.html
2021-01-08 21:30:05.073 DEBUG 24980 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:30:05.067  用时: 171毫秒  URI: /js/a/gen/genTable/save  总内存: 646MB  已用内存: 489.685MB
2021-01-08 21:30:05.076 DEBUG 24980 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:30:05.076 DEBUG 24980 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@51c6c39a] will be managed by Spring
2021-01-08 21:30:05.077 DEBUG 24980 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:30:05.079 DEBUG 24980 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347536050361180160(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:30:05.072(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=t_yuangong&comments=t_yuangong&className=Tyuangong&functionAuthor=LX&parentTableName=&parentTableFkName=eid&remarks=&columnList[0].id=1347532582120304640&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=id&columnList[0].columnType=int&columnList[0].attrType=Long&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=6/4/8&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1347532582204190720&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=org_id&columnList[1].comments=部门&columnList[1].columnType=int&columnList[1].attrType=Long&columnList[1].fullAttrName=orgId&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=6/4/8&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[1].optionMap['fieldValid']=digits&columnList[2].id=1347532582275493888&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=eid&columnList[2].comments=工号&columnList[2].columnType=varchar(55)&columnList[2].attrType=String&columnList[2].fullAttrName=eid&!columnList[2].isPk=&columnList[2].isPk=1&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&!columnList[2].isList=&!columnList[2].isQuery=&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].isRequired=1&columnList[2].showType=hidden&columnList[2].optionMap['gridRowCol']=6/4/8&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[2].optionMap['fieldValid']=abc&columnList[3].id=1347532582569095168&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=name&columnList[3].comments=姓名&columnList[3].columnType=varchar(50)&columnList[3].attrType=String&columnList[3].fullAttrName=name&!columnList[3].isPk=&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&columnList[3].isUpdate=1&!columnList[3].isList=&columnList[3].isList=1&!columnList[3].isQuery=&columnList[3].isQuery=1&columnList[3].queryType=LIKE&!columnList[3].isEdit=&columnList[3].isEdit=1&!columnList[3].isRequired=&columnList[3].showType=input&columnList[3].optionMap['gridRowCol']=6/4/8&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[4].id=1347532582594260992&columnList[4].status=&columnList[4].columnSort=50&columnList[4].columnName=sex&columnList[4].comments=性别&columnList[4].columnType=varchar(50)&columnList[4].attrType=String&columnList[4].fullAttrName=sex&!columnList[4].isPk=&!columnList[4].isInsert=&columnList[4].isInsert=1&!columnList[4].isUpdate=&columnList[4].isUpdate=1&!columnList[4].isList=&columnList[4].isList=1&!columnList[4].isQuery=&columnList[4].isQuery=1&columnList[4].queryType=EQ&!columnList[4].isEdit=&columnList[4].isEdit=1&!columnList[4].isRequired=&columnList[4].showType=input&columnList[4].optionMap['gridRowCol']=6/4/8&!columnList[4].optionMap['isNewLine']=&columnList[4].optionMap['dictName']=&columnList[4].optionMap['dictType']=&!columnList[4].optionMap['fieldValid']=&columnList[5].id=1347532582611038208&columnList[5].status=&columnList[5].columnSort=60&columnList[5].columnName=age&columnList[5].comments=年龄&columnList[5].columnType=varchar(50)&columnList[5].attrType=String&columnList[5].fullAttrName=age&!columnList[5].isPk=&!columnList[5].isInsert=&columnList[5].isInsert=1&!columnList[5].isUpdate=&columnList[5].isUpdate=1&!columnList[5].isList=&columnList[5].isList=1&!columnList[5].isQuery=&columnList[5].isQuery=1&columnList[5].queryType=EQ&!columnList[5].isEdit=&columnList[5].isEdit=1&!columnList[5].isRequired=&columnList[5].showType=input&columnList[5].optionMap['gridRowCol']=6/4/8&!columnList[5].optionMap['isNewLine']=&columnList[5].optionMap['dictName']=&columnList[5].optionMap['dictType']=&!columnList[5].optionMap['fieldValid']=&columnList[6].id=1347532582627815424&columnList[6].status=&columnList[6].columnSort=70&columnList[6].columnName=zhiwei&columnList[6].comments=职位&columnList[6].columnType=varchar(50)&columnList[6].attrType=String&columnList[6].fullAttrName=zhiwei&!columnList[6].isPk=&!columnList[6].isInsert=&columnList[6].isInsert=1&!columnList[6].isUpdate=&columnList[6].isUpdate=1&!columnList[6].isList=&columnList[6].isList=1&!columnList[6].isQuery=&columnList[6].isQuery=1&columnList[6].queryType=EQ&!columnList[6].isEdit=&columnList[6].isEdit=1&!columnList[6].isRequired=&columnList[6].showType=input&columnList[6].optionMap['gridRowCol']=6/4/8&!columnList[6].optionMap['isNewLine']=&columnList[6].optionMap['dictName']=&columnList[6].optionMap['dictType']=&!columnList[6].optionMap['fieldValid']=&columnList[7].id=1347532582661369856&columnList[7].status=&columnList[7].columnSort=80&columnList[7].columnName=shifoubumenlingdao&columnList[7].comments=是否为领导&columnList[7].columnType=varchar(50)&columnList[7].attrType=String&columnList[7].fullAttrName=shifoubumenlingdao&!columnList[7].isPk=&!columnList[7].isInsert=&columnList[7].isInsert=1&!columnList[7].isUpdate=&columnList[7].isUpdate=1&!columnList[7].isList=&columnList[7].isList=1&!columnList[7].isQuery=&columnList[7].isQuery=1&columnList[7].queryType=EQ&!columnList[7].isEdit=&columnList[7].isEdit=1&!columnList[7].isRequired=&columnList[7].showType=input&columnList[7].optionMap['gridRowCol']=6/4/8&!columnList[7].optionMap['isNewLine']=&columnList[7].optionMap['dictName']=&columnList[7].optionMap['dictType']=&!columnList[7].optionMap['fieldValid']=&columnList[8].id=1347532582682341376&columnList[8].status=&columnList[8].columnSort=90&columnList[8].columnName=loginname&columnList[8].comments=账户名&columnList[8].columnType=varchar(50)&columnList[8].attrType=String&columnList[8].fullAttrName=loginname&!columnList[8].isPk=&!columnList[8].isInsert=&columnList[8].isInsert=1&!columnList[8].isUpdate=&columnList[8].isUpdate=1&!columnList[8].isList=&columnList[8].isList=1&!columnList[8].isQuery=&columnList[8].isQuery=1&columnList[8].queryType=EQ&!columnList[8].isEdit=&columnList[8].isEdit=1&!columnList[8].isRequired=&columnList[8].showType=input&columnList[8].optionMap['gridRowCol']=6/4/8&!columnList[8].optionMap['isNewLine']=&columnList[8].optionMap['dictName']=&columnList[8].optionMap['dictType']=&!columnList[8].optionMap['fieldValid']=&columnList[9].id=1347532582703312896&columnList[9].status=&columnList[9].columnSort=100&columnList[9].columnName=loginpw&columnList[9].comments=密码&columnList[9].columnType=varchar(50)&columnList[9].attrType=String&columnList[9].fullAttrName=loginpw&!columnList[9].isPk=&!columnList[9].isInsert=&columnList[9].isInsert=1&!columnList[9].isUpdate=&columnList[9].isUpdate=1&!columnList[9].isList=&columnList[9].isList=1&!columnList[9].isQuery=&columnList[9].isQuery=1&columnList[9].queryType=EQ&!columnList[9].isEdit=&columnList[9].isEdit=1&!columnList[9].isRequired=&columnList[9].showType=input&columnList[9].optionMap['gridRowCol']=6/4/8&!columnList[9].optionMap['isNewLine']=&columnList[9].optionMap['dictName']=&columnList[9].optionMap['dictType']=&!columnList[9].optionMap['fieldValid']=&columnList[10].id=1347532582732673024&columnList[10].status=&columnList[10].columnSort=110&columnList[10].columnName=del&columnList[10].comments=del&columnList[10].columnType=varchar(50)&columnList[10].attrType=String&columnList[10].fullAttrName=del&!columnList[10].isPk=&!columnList[10].isInsert=&!columnList[10].isUpdate=&!columnList[10].isList=&!columnList[10].isQuery=&columnList[10].queryType=EQ&!columnList[10].isEdit=&!columnList[10].isRequired=&columnList[10].showType=input&columnList[10].optionMap['gridRowCol']=6/4/8&!columnList[10].optionMap['isNewLine']=&columnList[10].optionMap['dictName']=&columnList[10].optionMap['dictType']=&!columnList[10].optionMap['fieldValid']=&tplCategory=crud&packageName=com.jeesite.modules&moduleName=employee&subModuleName=&functionName=employee&functionNameSimple=employee&genBaseDir=C:\Users\Lx\work2\web&!optionMap['isHaveDisableEnable']=&optionMap['isHaveDisableEnable']=0&!optionMap['isHaveDelete']=&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&!optionMap['isImageUpload']=&optionMap['isImageUpload']=0&!optionMap['isFileUpload']=&optionMap['isFileUpload']=0&!optionMap['isBpmForm']=&optionMap['isBpmForm']=0&optionMap['bpmFormKey']=&genFlag=2&replaceFile=1&!replaceFile=0(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 171(Long)
2021-01-08 21:30:05.087 DEBUG 24980 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:30:05.101 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:30:05.101  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:30:05.111 DEBUG 24980 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:30:05.112 DEBUG 24980 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@51c6c39a] will be managed by Spring
2021-01-08 21:30:05.124 DEBUG 24980 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:30:05.125 DEBUG 24980 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:30:05.128 DEBUG 24980 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:30:05.129 DEBUG 24980 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:30:05.131 DEBUG 24980 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:30:05.146 DEBUG 24980 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:30:05.140  用时: 39毫秒  URI: /js/a/gen/genTable/listData  总内存: 646MB  已用内存: 492.186MB
2021-01-08 21:30:05.149 DEBUG 24980 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:30:05.150 DEBUG 24980 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@51c6c39a] will be managed by Spring
2021-01-08 21:30:05.150 DEBUG 24980 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:30:05.151 DEBUG 24980 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347536050667364352(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:30:05.145(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 39(Long)
2021-01-08 21:30:05.152 DEBUG 24980 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:30:17.289 INFO  22308 [           main] [com.jeesite.modules.Application        ] - Starting Application on DESKTOP-0IUV8EB with PID 22308 (C:\Users\Lx\work2\web\src\main\webapp\WEB-INF\classes started by Lx in C:\Users\Lx\work2\web)
2021-01-08 21:30:17.293 DEBUG 22308 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2021-01-08 21:30:17.294 INFO  22308 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2021-01-08 21:30:19.847 INFO  22308 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2021-01-08 21:30:19.849 INFO  22308 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2021-01-08 21:30:21.800 INFO  22308 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/Lx
2021-01-08 21:30:21.801 INFO  22308 [           main] [com.jeesite.common.config.Global       ] - user.dir: C:/Users/Lx/work2/web
2021-01-08 21:30:21.801 INFO  22308 [           main] [com.jeesite.common.config.Global       ] - logPath: C:/Users/Lx/work2/web/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.2 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：adfb80499b32e1492729a84d62f8cd98
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2021-01-08 21:30:21.803 WARN  22308 [           main] [com.jeesite.common.config.Global       ] - 

===================================================================

    类型: mysql
    驱动: com.mysql.cj.jdbc.Driver
    地址: jdbc:mysql://127.0.0.1:3306/jeesite?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    用户: root

===================================================================

注意：以上信息是初始化数据库的连接信息，请认真对照。

本操作主要用于首次安装 JeeSite 或后安装 Module 的数据表初始化，若模块已安装会自动忽略。
在 v4.2 版本以后，官方初始化数据库是比较安全的，官方代码中不会包含任何删除数据表及数据的脚本。

如果你是升级到 v4.2 的版本，无法排除你是否升级完整，为安全期间，还是建议先备份数据库后再操作。

系统为您提供 20 秒的考虑时间，若不初始化数据库，请停止服务启动......

2021-01-08 21:30:42.573 DEBUG 22308 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2021-01-08 21:30:43.289 INFO  22308 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2021-01-08 21:30:44.670 INFO  22308 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2021-01-08 21:30:49.106 INFO  22308 [           main] [com.jeesite.modules.sys.db.InitCoreData] - ===== InitData Started ============
2021-01-08 21:30:49.170 DEBUG 22308 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will not be managed by Spring
2021-01-08 21:30:49.758 DEBUG 22308 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 21:30:49.779 DEBUG 22308 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 21:30:49.804 DEBUG 22308 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 21:30:49.809 INFO  22308 [           main] [com.jeesite.modules.sys.db.InitCoreData] - ===== InitData Completed ========== 耗时：702毫秒
2021-01-08 21:30:49.809 INFO  22308 [           main] [c.jeesite.modules.test.db.InitTestData ] - ===== InitData Started ============
2021-01-08 21:30:49.809 INFO  22308 [           main] [c.jeesite.modules.test.db.InitTestData ] - ===== InitData Completed ========== 耗时：0毫秒
2021-01-08 21:30:49.845 DEBUG 22308 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:30:49.847 DEBUG 22308 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:30:49.848 DEBUG 22308 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2021-01-08 21:30:49.849 DEBUG 22308 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2021-01-08 21:30:49.858 DEBUG 22308 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2021-01-08 21:30:49.887 INFO  22308 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2021-01-08 21:30:51.456 INFO  22308 [           main] [com.jeesite.modules.Application        ] - Started Application in 34.972 seconds (JVM running for 35.584)
2021-01-08 21:33:11.120 DEBUG 22308 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = #{userCode}
2021-01-08 21:33:11.123 DEBUG 22308 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:33:11.128 DEBUG 22308 [nio-8980-exec-3] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = ?
2021-01-08 21:33:11.129 DEBUG 22308 [nio-8980-exec-3] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2021-01-08 21:33:11.152 DEBUG 22308 [nio-8980-exec-3] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2021-01-08 21:33:11.398 DEBUG 22308 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2021-01-08 21:33:11.402 DEBUG 22308 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:33:11.408 DEBUG 22308 [nio-8980-exec-3] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2021-01-08 21:33:11.409 DEBUG 22308 [nio-8980-exec-3] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2021-01-08 21:33:11.443 DEBUG 22308 [nio-8980-exec-3] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2021-01-08 21:33:11.497 DEBUG 22308 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 10毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:33:11.502 DEBUG 22308 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:33:11.508 DEBUG 22308 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:33:11.510 DEBUG 22308 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2021-01-08 21:33:11.616 DEBUG 22308 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 21:33:12.216 DEBUG 22308 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:33:12.219 DEBUG 22308 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:33:12.224 DEBUG 22308 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:33:12.225 DEBUG 22308 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_sys_code(String), 1(String), 0(String)
2021-01-08 21:33:12.247 DEBUG 22308 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2021-01-08 21:33:13.001 DEBUG 22308 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:33:12.998  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2021-01-08 21:33:13.044 INFO  22308 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2021-01-08 21:33:13.477 DEBUG 22308 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:33:13.415  用时: 417毫秒  URI: /js/a/gen/genTable/list  总内存: 468.5MB  已用内存: 334.725MB
2021-01-08 21:33:13.493 DEBUG 22308 [  log-save-10-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:33:13.493 DEBUG 22308 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:33:13.494 DEBUG 22308 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:33:13.495 DEBUG 22308 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 21:33:13.525 DEBUG 22308 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 21:33:13.564 DEBUG 22308 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:33:13.570 DEBUG 22308 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:33:13.573 DEBUG 22308 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:33:13.581 DEBUG 22308 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347536840576192512(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:33:13.474(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 417(Long)
2021-01-08 21:33:13.585 DEBUG 22308 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:33:14.296 DEBUG 22308 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:33:14.296  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:33:14.393 DEBUG 22308 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:33:14.394 DEBUG 22308 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:33:14.493 DEBUG 22308 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:33:14.493  URI: /js/a/employee/tyuangong/list  IP: 127.0.0.1
2021-01-08 21:33:14.611 INFO  22308 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/employee/tyuangongList <<<<<<<<< /js/a/employee/tyuangong/list >>>>>>>>> com.jeesite.modules.employee.web.TyuangongController#list(Tyuangong, Model)
2021-01-08 21:33:14.637 DEBUG 22308 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:33:14.637 DEBUG 22308 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:33:14.640 DEBUG 22308 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:33:14.641 DEBUG 22308 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:33:14.645 DEBUG 22308 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:33:14.693 DEBUG 22308 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:33:14.686  用时: 193毫秒  URI: /js/a/employee/tyuangong/list  总内存: 468.5MB  已用内存: 369.876MB
2021-01-08 21:33:14.755 DEBUG 22308 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:33:14.756 DEBUG 22308 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:33:14.758 DEBUG 22308 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:33:14.765 DEBUG 22308 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347536845684854784(String), access(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:33:14.692(Timestamp), /js/a/employee/tyuangong/list(String), GET(String), (String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 193(Long)
2021-01-08 21:33:14.768 DEBUG 22308 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:33:14.772 DEBUG 22308 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:33:14.770  用时: 474毫秒  URI: /js/a/gen/genTable/listData  总内存: 468.5MB  已用内存: 371.812MB
2021-01-08 21:33:14.786 DEBUG 22308 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 4毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:33:14.788 DEBUG 22308 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:33:14.789 DEBUG 22308 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:33:14.791 DEBUG 22308 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347536846020399104(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:33:14.772(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 474(Long)
2021-01-08 21:33:14.793 DEBUG 22308 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:33:15.022 DEBUG 22308 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:33:15.022  URI: /js/a/employee/tyuangong/listData  IP: 127.0.0.1
2021-01-08 21:33:15.059 DEBUG 22308 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.id DESC, a.eid DESC
2021-01-08 21:33:15.059 DEBUG 22308 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:33:15.065 DEBUG 22308 [nio-8980-exec-2] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT count(0) FROM `t_yuangong` a
2021-01-08 21:33:15.065 DEBUG 22308 [nio-8980-exec-2] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:33:15.073 DEBUG 22308 [nio-8980-exec-2] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.id DESC, a.eid DESC LIMIT 20
2021-01-08 21:33:15.074 DEBUG 22308 [nio-8980-exec-2] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:33:15.081 DEBUG 22308 [nio-8980-exec-2] [c.j.m.e.dao.TyuangongDao.findList      ] - <==      Total: 8
2021-01-08 21:33:15.095 DEBUG 22308 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:33:15.092  用时: 70毫秒  URI: /js/a/employee/tyuangong/listData  总内存: 468.5MB  已用内存: 378.551MB
2021-01-08 21:33:15.111 DEBUG 22308 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:33:15.111 DEBUG 22308 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:33:15.112 DEBUG 22308 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:33:15.113 DEBUG 22308 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347536847370964992(String), select(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:33:15.094(Timestamp), /js/a/employee/tyuangong/listData(String), POST(String), orgId=&name=&sex=&age=&zhiwei=&shifoubumenlingdao=&loginname=&loginpw=&del=&pageNo=&pageSize=&orderBy=(String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 70(Long)
2021-01-08 21:33:15.114 DEBUG 22308 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:33:17.429 DEBUG 22308 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:33:17.429  URI: /js/a/employee/tyuangong/listData  IP: 127.0.0.1
2021-01-08 21:33:17.433 DEBUG 22308 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.del asc
2021-01-08 21:33:17.433 DEBUG 22308 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:33:17.440 DEBUG 22308 [nio-8980-exec-6] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT count(0) FROM `t_yuangong` a
2021-01-08 21:33:17.441 DEBUG 22308 [nio-8980-exec-6] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:33:17.443 DEBUG 22308 [nio-8980-exec-6] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.del asc LIMIT 20
2021-01-08 21:33:17.444 DEBUG 22308 [nio-8980-exec-6] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:33:17.447 DEBUG 22308 [nio-8980-exec-6] [c.j.m.e.dao.TyuangongDao.findList      ] - <==      Total: 8
2021-01-08 21:33:17.465 DEBUG 22308 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:33:17.463  用时: 34毫秒  URI: /js/a/employee/tyuangong/listData  总内存: 468.5MB  已用内存: 381.217MB
2021-01-08 21:33:17.473 DEBUG 22308 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:33:17.474 DEBUG 22308 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:33:17.475 DEBUG 22308 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:33:17.477 DEBUG 22308 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347536857311465472(String), select(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:33:17.464(Timestamp), /js/a/employee/tyuangong/listData(String), POST(String), orgId=&name=&sex=&age=&zhiwei=&shifoubumenlingdao=&loginname=&loginpw=&del=&pageNo=&pageSize=&orderBy=a.del asc(String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 34(Long)
2021-01-08 21:33:17.480 DEBUG 22308 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:33:18.115 DEBUG 22308 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:33:18.114  URI: /js/a/employee/tyuangong/listData  IP: 127.0.0.1
2021-01-08 21:33:18.128 DEBUG 22308 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.del desc
2021-01-08 21:33:18.128 DEBUG 22308 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:33:18.132 DEBUG 22308 [nio-8980-exec-1] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT count(0) FROM `t_yuangong` a
2021-01-08 21:33:18.132 DEBUG 22308 [nio-8980-exec-1] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:33:18.136 DEBUG 22308 [nio-8980-exec-1] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.del desc LIMIT 20
2021-01-08 21:33:18.137 DEBUG 22308 [nio-8980-exec-1] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:33:18.139 DEBUG 22308 [nio-8980-exec-1] [c.j.m.e.dao.TyuangongDao.findList      ] - <==      Total: 8
2021-01-08 21:33:18.145 DEBUG 22308 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:33:18.143  用时: 29毫秒  URI: /js/a/employee/tyuangong/listData  总内存: 468.5MB  已用内存: 384.951MB
2021-01-08 21:33:18.147 DEBUG 22308 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:33:18.148 DEBUG 22308 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:33:18.149 DEBUG 22308 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:33:18.151 DEBUG 22308 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347536860167786496(String), select(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:33:18.145(Timestamp), /js/a/employee/tyuangong/listData(String), POST(String), orgId=&name=&sex=&age=&zhiwei=&shifoubumenlingdao=&loginname=&loginpw=&del=&pageNo=&pageSize=&orderBy=a.del desc(String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 29(Long)
2021-01-08 21:33:18.153 DEBUG 22308 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:33:36.862 DEBUG 22308 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:33:36.862  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:33:37.000 DEBUG 22308 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:33:37.002 DEBUG 22308 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will not be managed by Spring
2021-01-08 21:33:37.006 DEBUG 22308 [nio-8980-exec-3] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:33:37.007 DEBUG 22308 [nio-8980-exec-3] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 21:33:37.016 DEBUG 22308 [nio-8980-exec-3] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 21:33:37.022 DEBUG 22308 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:33:37.027 DEBUG 22308 [nio-8980-exec-3] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 21:33:37.028 DEBUG 22308 [nio-8980-exec-3] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 21:33:37.076 DEBUG 22308 [nio-8980-exec-3] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 21:33:37.084 INFO  22308 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableFormSelect <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:33:37.178 DEBUG 22308 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:33:37.177  用时: 315毫秒  URI: /js/a/gen/genTable/form  总内存: 474.5MB  已用内存: 93.959MB
2021-01-08 21:33:37.183 DEBUG 22308 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:33:37.183 DEBUG 22308 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:33:37.184 DEBUG 22308 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:33:37.185 DEBUG 22308 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347536939993780224(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:33:37.178(Timestamp), /js/a/gen/genTable/form(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 315(Long)
2021-01-08 21:33:37.187 DEBUG 22308 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:33:56.740 DEBUG 22308 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:33:56.740  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:33:56.742 DEBUG 22308 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:33:56.742 DEBUG 22308 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:33:56.745 DEBUG 22308 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:33:56.746 DEBUG 22308 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:33:56.747 DEBUG 22308 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2021-01-08 21:33:56.751 DEBUG 22308 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:33:56.752 DEBUG 22308 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:33:56.756 DEBUG 22308 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:33:56.757 DEBUG 22308 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:33:56.758 DEBUG 22308 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2021-01-08 21:33:56.761 DEBUG 22308 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:33:56.765 DEBUG 22308 [nio-8980-exec-8] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 21:33:56.765 DEBUG 22308 [nio-8980-exec-8] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_chuqin(String), t_chuqin(String)
2021-01-08 21:33:56.768 DEBUG 22308 [nio-8980-exec-8] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 21:33:56.772 DEBUG 22308 [nio-8980-exec-8] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 21:33:56.773 DEBUG 22308 [nio-8980-exec-8] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:33:56.776 DEBUG 22308 [nio-8980-exec-8] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 4
2021-01-08 21:33:56.781 DEBUG 22308 [nio-8980-exec-8] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 21:33:56.781 DEBUG 22308 [nio-8980-exec-8] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:33:56.783 DEBUG 22308 [nio-8980-exec-8] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 2
2021-01-08 21:33:56.790 DEBUG 22308 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:33:56.790 DEBUG 22308 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will not be managed by Spring
2021-01-08 21:33:56.793 DEBUG 22308 [nio-8980-exec-8] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:33:56.793 DEBUG 22308 [nio-8980-exec-8] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 21:33:56.799 DEBUG 22308 [nio-8980-exec-8] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 21:33:56.801 DEBUG 22308 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:33:56.803 DEBUG 22308 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will not be managed by Spring
2021-01-08 21:33:56.807 DEBUG 22308 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:33:56.807 DEBUG 22308 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 21:33:56.808 DEBUG 22308 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 4
2021-01-08 21:33:56.810 DEBUG 22308 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:33:56.814 DEBUG 22308 [nio-8980-exec-8] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 21:33:56.814 DEBUG 22308 [nio-8980-exec-8] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 21:33:56.815 DEBUG 22308 [nio-8980-exec-8] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 21:33:56.819 INFO  22308 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:33:56.869 DEBUG 22308 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:33:56.870 DEBUG 22308 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:33:56.876 DEBUG 22308 [nio-8980-exec-8] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:33:56.877 DEBUG 22308 [nio-8980-exec-8] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_yes_no(String), 1(String), 0(String)
2021-01-08 21:33:56.882 DEBUG 22308 [nio-8980-exec-8] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 21:33:57.018 DEBUG 22308 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:33:57.017  用时: 277毫秒  URI: /js/a/gen/genTable/form  总内存: 474.5MB  已用内存: 123.836MB
2021-01-08 21:33:57.022 DEBUG 22308 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:33:57.023 DEBUG 22308 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:33:57.023 DEBUG 22308 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:33:57.026 DEBUG 22308 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347537023212965888(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:33:57.018(Timestamp), /js/a/gen/genTable/form(String), POST(String), isNewRecord=true&tableName=t_chuqin(String), t_chuqin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 277(Long)
2021-01-08 21:33:57.029 DEBUG 22308 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:34:32.454 DEBUG 22308 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:34:32.454  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 21:34:32.457 DEBUG 22308 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:34:32.457 DEBUG 22308 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:34:32.462 DEBUG 22308 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:34:32.463 DEBUG 22308 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:34:32.464 DEBUG 22308 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2021-01-08 21:34:32.792 DEBUG 22308 [io-8980-exec-10] [c.j.c.m.m.provider.InsertSqlProvider   ] - 5毫秒: INSERT INTO `js_gen_table` (`table_name`, `class_name`, `comments`, `parent_table_name`, `parent_table_fk_name`, `data_source_name`, `tpl_category`, `package_name`, `module_name`, `sub_module_name`, `function_name`, `function_name_simple`, `function_author`, `gen_base_dir`, `options`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`) VALUES (#{tableName}, #{className}, #{comments}, #{parentTableName}, #{parentTableFkName}, #{dataSourceName}, #{tplCategory}, #{packageName}, #{moduleName}, #{subModuleName}, #{functionName}, #{functionNameSimple}, #{functionAuthor}, #{genBaseDir}, #{options}, #{createBy}, #{createDate}, #{updateBy}, #{updateDate}, #{remarks})
2021-01-08 21:34:32.793 DEBUG 22308 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:34:32.794 DEBUG 22308 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table` (`table_name`, `class_name`, `comments`, `parent_table_name`, `parent_table_fk_name`, `data_source_name`, `tpl_category`, `package_name`, `module_name`, `sub_module_name`, `function_name`, `function_name_simple`, `function_author`, `gen_base_dir`, `options`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:34:32.797 DEBUG 22308 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.insert ] - ==> Parameters: t_chuqin(String), Tchuqin(String), t_chuqin(String), t_yuangong(String), e_id(String), (String), (String), com.jeesite.modules(String), t(String), (String), t_chuqin(String), t_chuqin(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 21:34:32.791(Timestamp), system(String), 2021-01-08 21:34:32.791(Timestamp), (String)
2021-01-08 21:34:32.799 DEBUG 22308 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.insert ] - <==    Updates: 1
2021-01-08 21:34:32.801 DEBUG 22308 [io-8980-exec-10] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:34:32.804 DEBUG 22308 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:34:32.805 DEBUG 22308 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347537173293551616(String), t_chuqin(String), id(String), 10(Integer), int(String), id(String), id(String), id(String), String(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"1","fieldValid":"abc","dictName":"","gridRowCol":"12/2/5","dictType":""}(String)
2021-01-08 21:34:32.807 DEBUG 22308 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:34:32.808 DEBUG 22308 [io-8980-exec-10] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:34:32.809 DEBUG 22308 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:34:32.814 DEBUG 22308 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347537173322911744(String), t_chuqin(String), yuefen(String), 20(Integer), varchar(55)(String), yuefen(String), yuefen(String), yuefen(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String)
2021-01-08 21:34:32.816 DEBUG 22308 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:34:32.818 DEBUG 22308 [io-8980-exec-10] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:34:32.822 DEBUG 22308 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:34:32.823 DEBUG 22308 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347537173364854784(String), t_chuqin(String), tianshu(String), 30(Integer), int(String), tianshu(String), tianshu(String), tianshu(String), Long(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"digits","dictName":"","gridRowCol":"12/2/5","dictType":""}(String)
2021-01-08 21:34:32.826 DEBUG 22308 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:34:32.831 DEBUG 22308 [io-8980-exec-10] [c.j.c.m.m.provider.InsertSqlProvider   ] - 4毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:34:32.832 DEBUG 22308 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:34:32.834 DEBUG 22308 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347537173406797824(String), t_chuqin(String), e_id(String), 40(Integer), varchar(55)(String), e_id(String), e_id(String), eid(String), String(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"1","fieldValid":"abc","dictName":"","gridRowCol":"12/2/5","dictType":""}(String)
2021-01-08 21:34:32.835 DEBUG 22308 [io-8980-exec-10] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:34:32.851 DEBUG 22308 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:34:32.846  用时: 392毫秒  URI: /js/a/gen/genTable/save  总内存: 474.5MB  已用内存: 150.197MB
2021-01-08 21:34:32.864 DEBUG 22308 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:34:32.865 DEBUG 22308 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:34:32.866 DEBUG 22308 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:34:32.867 DEBUG 22308 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347537173503266816(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:34:32.85(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=true&tableName=t_chuqin&comments=t_chuqin&className=Tchuqin&functionAuthor=LX&parentTableName=t_yuangong&parentTableFkName=e_id&remarks=&columnList[0].id=&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=id&columnList[0].columnType=int&columnList[0].attrType=String&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=12/2/5&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['isNewLine']=1&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=yuefen&columnList[1].comments=yuefen&columnList[1].columnType=varchar(55)&columnList[1].attrType=String&columnList[1].fullAttrName=yuefen&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=12/2/5&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['isNewLine']=1&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[2].id=&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=tianshu&columnList[2].comments=tianshu&columnList[2].columnType=int&columnList[2].attrType=Long&columnList[2].fullAttrName=tianshu&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&columnList[2].isUpdate=1&!columnList[2].isList=&columnList[2].isList=1&!columnList[2].isQuery=&columnList[2].isQuery=1&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=12/2/5&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['isNewLine']=1&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[2].optionMap['fieldValid']=digits&columnList[3].id=&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=e_id&columnList[3].comments=e_id&columnList[3].columnType=varchar(55)&columnList[3].attrType=String&columnList[3].fullAttrName=eid&!columnList[3].isPk=&columnList[3].isPk=1&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&!columnList[3].isList=&!columnList[3].isQuery=&columnList[3].queryType=EQ&!columnList[3].isEdit=&columnList[3].isEdit=1&!columnList[3].isRequired=&columnList[3].isRequired=1&columnList[3].showType=hidden&columnList[3].optionMap['gridRowCol']=12/2/5&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['isNewLine']=1&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[3].optionMap['fieldValid']=abc&tplCategory=&packageName=com.jeesite.modules&moduleName=t&subModuleName=&functionName=t_chuqin&functionNameSimple=t_chuqin&genBaseDir=C:\Users\Lx\work2\web&!optionMap['isHaveDisableEnable']=&optionMap['isHaveDisableEnable']=0&!optionMap['isHaveDelete']=&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&!optionMap['isImageUpload']=&optionMap['isImageUpload']=0&!optionMap['isFileUpload']=&optionMap['isFileUpload']=0&!optionMap['isBpmForm']=&optionMap['isBpmForm']=0&optionMap['bpmFormKey']=&genFlag=0&!replaceFile=0(String), t_chuqin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 392(Long)
2021-01-08 21:34:32.897 DEBUG 22308 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:34:32.930 DEBUG 22308 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:34:32.930  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:34:32.932 DEBUG 22308 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:34:32.933 DEBUG 22308 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:34:32.947 DEBUG 22308 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:34:32.948 DEBUG 22308 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:34:32.951 DEBUG 22308 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:34:32.954 DEBUG 22308 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:34:32.967 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:34:32.968 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:34:32.975 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 4
2021-01-08 21:34:33.021 DEBUG 22308 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:34:33.031 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 21:34:33.032 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_chuqin(String), t_chuqin(String)
2021-01-08 21:34:33.035 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 21:34:33.044 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 21:34:33.045 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:34:33.050 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 4
2021-01-08 21:34:33.055 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 21:34:33.056 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:34:33.060 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 2
2021-01-08 21:34:33.067 DEBUG 22308 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:34:33.068 DEBUG 22308 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will not be managed by Spring
2021-01-08 21:34:33.072 DEBUG 22308 [nio-8980-exec-5] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:34:33.072 DEBUG 22308 [nio-8980-exec-5] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 21:34:33.076 DEBUG 22308 [nio-8980-exec-5] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 21:34:33.078 DEBUG 22308 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:34:33.078 DEBUG 22308 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will not be managed by Spring
2021-01-08 21:34:33.082 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:34:33.083 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 21:34:33.084 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 5
2021-01-08 21:34:33.086 DEBUG 22308 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:34:33.089 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 21:34:33.090 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 21:34:33.093 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 21:34:33.095 INFO  22308 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:34:33.108 DEBUG 22308 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:34:33.106  用时: 176毫秒  URI: /js/a/gen/genTable/form  总内存: 474.5MB  已用内存: 157.188MB
2021-01-08 21:34:33.114 DEBUG 22308 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:34:33.115 DEBUG 22308 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:34:33.116 DEBUG 22308 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:34:33.117 DEBUG 22308 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347537174585397248(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:34:33.108(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=t_chuqin&op=step3(String), t_chuqin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 176(Long)
2021-01-08 21:34:33.119 DEBUG 22308 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:34:43.124 DEBUG 22308 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:34:43.124  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 21:34:43.126 DEBUG 22308 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:34:43.126 DEBUG 22308 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:34:43.130 DEBUG 22308 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:34:43.130 DEBUG 22308 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:34:43.131 DEBUG 22308 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:34:43.133 DEBUG 22308 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:34:43.136 DEBUG 22308 [nio-8980-exec-7] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:34:43.137 DEBUG 22308 [nio-8980-exec-7] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:34:43.141 DEBUG 22308 [nio-8980-exec-7] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 4
2021-01-08 21:34:43.165 DEBUG 22308 [nio-8980-exec-7] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 3毫秒: UPDATE `js_gen_table` SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2021-01-08 21:34:43.166 DEBUG 22308 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:34:43.166 DEBUG 22308 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE `js_gen_table` SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ?
2021-01-08 21:34:43.168 DEBUG 22308 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: Tchuqin(String), t_chuqin(String), t_yuangong(String), e_id(String), (String), (String), com.jeesite.modules(String), t(String), (String), t_chuqin(String), t_chuqin(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 21:34:43.165(Timestamp), (String), t_chuqin(String)
2021-01-08 21:34:43.169 DEBUG 22308 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2021-01-08 21:34:43.171 DEBUG 22308 [nio-8980-exec-7] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:34:43.172 DEBUG 22308 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:34:43.173 DEBUG 22308 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_chuqin(String), id(String), 10(Integer), int(String), id(String), id(String), id(String), String(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"1","fieldValid":"abc","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347537173293551616(String)
2021-01-08 21:34:43.175 DEBUG 22308 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:34:43.176 DEBUG 22308 [nio-8980-exec-7] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:34:43.177 DEBUG 22308 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:34:43.178 DEBUG 22308 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_chuqin(String), yuefen(String), 20(Integer), varchar(55)(String), yuefen(String), yuefen(String), yuefen(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347537173322911744(String)
2021-01-08 21:34:43.179 DEBUG 22308 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:34:43.180 DEBUG 22308 [nio-8980-exec-7] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:34:43.181 DEBUG 22308 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:34:43.182 DEBUG 22308 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_chuqin(String), tianshu(String), 30(Integer), int(String), tianshu(String), tianshu(String), tianshu(String), Long(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"1","fieldValid":"digits","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347537173364854784(String)
2021-01-08 21:34:43.183 DEBUG 22308 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:34:43.185 DEBUG 22308 [nio-8980-exec-7] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:34:43.186 DEBUG 22308 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:34:43.186 DEBUG 22308 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_chuqin(String), e_id(String), 40(Integer), varchar(55)(String), e_id(String), e_id(String), eid(String), String(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"1","fieldValid":"abc","dictName":"","gridRowCol":"12/2/5","dictType":""}(String), 1347537173406797824(String)
2021-01-08 21:34:43.187 DEBUG 22308 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:34:43.197 DEBUG 22308 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:34:43.192  用时: 68毫秒  URI: /js/a/gen/genTable/save  总内存: 474.5MB  已用内存: 163.742MB
2021-01-08 21:34:43.201 DEBUG 22308 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:34:43.202 DEBUG 22308 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:34:43.203 DEBUG 22308 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:34:43.204 DEBUG 22308 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347537216897536000(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:34:43.196(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=t_chuqin&comments=t_chuqin&className=Tchuqin&functionAuthor=LX&parentTableName=t_yuangong&parentTableFkName=e_id&remarks=&columnList[0].id=1347537173293551616&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=id&columnList[0].columnType=int&columnList[0].attrType=String&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=12/2/5&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['isNewLine']=1&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1347537173322911744&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=yuefen&columnList[1].comments=yuefen&columnList[1].columnType=varchar(55)&columnList[1].attrType=String&columnList[1].fullAttrName=yuefen&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=12/2/5&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['isNewLine']=1&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[2].id=1347537173364854784&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=tianshu&columnList[2].comments=tianshu&columnList[2].columnType=int&columnList[2].attrType=Long&columnList[2].fullAttrName=tianshu&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&columnList[2].isUpdate=1&!columnList[2].isList=&columnList[2].isList=1&!columnList[2].isQuery=&columnList[2].isQuery=1&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=12/2/5&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['isNewLine']=1&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[2].optionMap['fieldValid']=digits&columnList[3].id=1347537173406797824&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=e_id&columnList[3].comments=e_id&columnList[3].columnType=varchar(55)&columnList[3].attrType=String&columnList[3].fullAttrName=eid&!columnList[3].isPk=&columnList[3].isPk=1&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&!columnList[3].isList=&!columnList[3].isQuery=&columnList[3].queryType=EQ&!columnList[3].isEdit=&columnList[3].isEdit=1&!columnList[3].isRequired=&columnList[3].isRequired=1&columnList[3].showType=hidden&columnList[3].optionMap['gridRowCol']=12/2/5&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['isNewLine']=1&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[3].optionMap['fieldValid']=abc&genFlag=(String), t_chuqin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 68(Long)
2021-01-08 21:34:43.207 DEBUG 22308 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:34:43.223 DEBUG 22308 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:34:43.223  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:34:43.229 DEBUG 22308 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:34:43.229 DEBUG 22308 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:34:43.244 DEBUG 22308 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:34:43.245 DEBUG 22308 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:34:43.248 DEBUG 22308 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:34:43.249 DEBUG 22308 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:34:43.253 DEBUG 22308 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:34:43.268 DEBUG 22308 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:34:43.266  用时: 43毫秒  URI: /js/a/gen/genTable/listData  总内存: 474.5MB  已用内存: 165.549MB
2021-01-08 21:34:43.271 DEBUG 22308 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:34:43.276 DEBUG 22308 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:34:43.276 DEBUG 22308 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:34:43.278 DEBUG 22308 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347537217199525888(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:34:43.268(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 43(Long)
2021-01-08 21:34:43.279 DEBUG 22308 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:35:06.042 DEBUG 22308 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:35:06.042  URI: /js/a/sys/online/list  IP: 127.0.0.1
2021-01-08 21:35:06.043 INFO  22308 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/onlineList <<<<<<<<< /js/a/sys/online/list >>>>>>>>> com.jeesite.modules.sys.web.OnlineController#list(Model)
2021-01-08 21:35:06.073 DEBUG 22308 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:35:06.074 DEBUG 22308 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:35:06.082 DEBUG 22308 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:35:06.083 DEBUG 22308 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_user_type(String), 1(String), 0(String)
2021-01-08 21:35:06.093 DEBUG 22308 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2021-01-08 21:35:06.114 DEBUG 22308 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:35:06.115 DEBUG 22308 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:35:06.120 DEBUG 22308 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:35:06.121 DEBUG 22308 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_device_type(String), 1(String), 0(String)
2021-01-08 21:35:06.124 DEBUG 22308 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 4
2021-01-08 21:35:06.129 DEBUG 22308 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:35:06.128  用时: 86毫秒  URI: /js/a/sys/online/list  总内存: 474.5MB  已用内存: 174.117MB
2021-01-08 21:35:06.133 DEBUG 22308 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:35:06.133 DEBUG 22308 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:35:06.134 DEBUG 22308 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:35:06.135 DEBUG 22308 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347537313081315328(String), select(String), 系统管理/系统监控/在线用户(String), system(String), 超级管理员(String), 2021-01-08 21:35:06.128(Timestamp), /js/a/sys/online/list(String), GET(String), (String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 86(Long)
2021-01-08 21:35:06.137 DEBUG 22308 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:35:06.233 DEBUG 22308 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:35:06.233  URI: /js/a/sys/online/listData  IP: 127.0.0.1
2021-01-08 21:35:06.247 DEBUG 22308 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:35:06.246  用时: 13毫秒  URI: /js/a/sys/online/listData  总内存: 474.5MB  已用内存: 175.120MB
2021-01-08 21:35:06.251 DEBUG 22308 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:35:06.251 DEBUG 22308 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:35:06.252 DEBUG 22308 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:35:06.254 DEBUG 22308 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347537313580437504(String), access(String), 系统管理/系统监控/在线用户(String), system(String), 超级管理员(String), 2021-01-08 21:35:06.247(Timestamp), /js/a/sys/online/listData(String), POST(String), userCode=&!isAllOnline=0&!isVisitor=0&pageNo=&pageSize=&orderBy=(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 13(Long)
2021-01-08 21:35:06.256 DEBUG 22308 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:35:12.023 DEBUG 22308 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:35:12.023  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:35:12.025 DEBUG 22308 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:35:12.025 DEBUG 22308 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:35:12.029 DEBUG 22308 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:35:12.030 DEBUG 22308 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:35:12.031 DEBUG 22308 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:35:12.032 DEBUG 22308 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:35:12.038 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:35:12.039 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:35:12.043 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:35:12.048 DEBUG 22308 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:35:12.053 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 21:35:12.054 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_yuangong(String), t_yuangong(String)
2021-01-08 21:35:12.056 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 21:35:12.060 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 21:35:12.060 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:35:12.062 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 11
2021-01-08 21:35:12.066 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 21:35:12.066 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:35:12.068 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 2
2021-01-08 21:35:12.077 DEBUG 22308 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:35:12.078 DEBUG 22308 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will not be managed by Spring
2021-01-08 21:35:12.083 DEBUG 22308 [nio-8980-exec-5] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:35:12.083 DEBUG 22308 [nio-8980-exec-5] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 21:35:12.088 DEBUG 22308 [nio-8980-exec-5] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 21:35:12.091 DEBUG 22308 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:35:12.091 DEBUG 22308 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will not be managed by Spring
2021-01-08 21:35:12.096 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:35:12.097 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 21:35:12.098 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 5
2021-01-08 21:35:12.101 DEBUG 22308 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:35:12.108 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 21:35:12.108 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 21:35:12.109 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 21:35:12.110 INFO  22308 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:35:12.126 DEBUG 22308 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:35:12.125  用时: 102毫秒  URI: /js/a/gen/genTable/form  总内存: 474.5MB  已用内存: 181.427MB
2021-01-08 21:35:12.130 DEBUG 22308 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:35:12.131 DEBUG 22308 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:35:12.132 DEBUG 22308 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:35:12.133 DEBUG 22308 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347537338238750720(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:35:12.126(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=t_yuangong(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 102(Long)
2021-01-08 21:35:12.135 DEBUG 22308 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:35:19.359 DEBUG 22308 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:35:19.359  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:35:19.371 DEBUG 22308 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:35:19.371 DEBUG 22308 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will not be managed by Spring
2021-01-08 21:35:19.375 DEBUG 22308 [nio-8980-exec-4] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:35:19.375 DEBUG 22308 [nio-8980-exec-4] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 21:35:19.377 DEBUG 22308 [nio-8980-exec-4] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 21:35:19.379 DEBUG 22308 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:35:19.382 DEBUG 22308 [nio-8980-exec-4] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 21:35:19.382 DEBUG 22308 [nio-8980-exec-4] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 21:35:19.389 DEBUG 22308 [nio-8980-exec-4] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 21:35:19.390 INFO  22308 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableFormSelect <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:35:19.395 DEBUG 22308 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:35:19.394  用时: 35毫秒  URI: /js/a/gen/genTable/form  总内存: 474.5MB  已用内存: 184.315MB
2021-01-08 21:35:19.396 DEBUG 22308 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:35:19.397 DEBUG 22308 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:35:19.397 DEBUG 22308 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:35:19.399 DEBUG 22308 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347537368722952192(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:35:19.394(Timestamp), /js/a/gen/genTable/form(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 35(Long)
2021-01-08 21:35:19.400 DEBUG 22308 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:35:30.260 DEBUG 22308 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:35:30.260  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:35:30.262 DEBUG 22308 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:35:30.262 DEBUG 22308 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:35:30.264 DEBUG 22308 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:35:30.265 DEBUG 22308 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:35:30.266 DEBUG 22308 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:35:30.268 DEBUG 22308 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:35:30.272 DEBUG 22308 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:35:30.273 DEBUG 22308 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:35:30.279 DEBUG 22308 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 4
2021-01-08 21:35:30.285 DEBUG 22308 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:35:30.286 DEBUG 22308 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:35:30.288 DEBUG 22308 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:35:30.289 DEBUG 22308 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:35:30.290 DEBUG 22308 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:35:30.292 INFO  22308 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: redirect:/a/gen/genTable/form?tableName=t_chuqin <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:35:30.306 DEBUG 22308 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:35:30.305  用时: 45毫秒  URI: /js/a/gen/genTable/form  总内存: 474.5MB  已用内存: 187.811MB
2021-01-08 21:35:30.310 DEBUG 22308 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:35:30.311 DEBUG 22308 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:35:30.311 DEBUG 22308 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:35:30.312 DEBUG 22308 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347537414491197440(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:35:30.306(Timestamp), /js/a/gen/genTable/form(String), POST(String), isNewRecord=true&tableName=t_chuqin(String), t_chuqin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 45(Long)
2021-01-08 21:35:30.314 DEBUG 22308 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:35:30.318 DEBUG 22308 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:35:30.318  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:35:30.319 DEBUG 22308 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:35:30.320 DEBUG 22308 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:35:30.324 DEBUG 22308 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:35:30.324 DEBUG 22308 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:35:30.325 DEBUG 22308 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:35:30.326 DEBUG 22308 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:35:30.330 DEBUG 22308 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:35:30.330 DEBUG 22308 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:35:30.333 DEBUG 22308 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 4
2021-01-08 21:35:30.340 DEBUG 22308 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:35:30.343 DEBUG 22308 [nio-8980-exec-6] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 21:35:30.344 DEBUG 22308 [nio-8980-exec-6] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_chuqin(String), t_chuqin(String)
2021-01-08 21:35:30.346 DEBUG 22308 [nio-8980-exec-6] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 21:35:30.350 DEBUG 22308 [nio-8980-exec-6] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 21:35:30.350 DEBUG 22308 [nio-8980-exec-6] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:35:30.351 DEBUG 22308 [nio-8980-exec-6] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 4
2021-01-08 21:35:30.355 DEBUG 22308 [nio-8980-exec-6] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 21:35:30.356 DEBUG 22308 [nio-8980-exec-6] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:35:30.357 DEBUG 22308 [nio-8980-exec-6] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 2
2021-01-08 21:35:30.361 DEBUG 22308 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:35:30.361 DEBUG 22308 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will not be managed by Spring
2021-01-08 21:35:30.363 DEBUG 22308 [nio-8980-exec-6] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:35:30.364 DEBUG 22308 [nio-8980-exec-6] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 21:35:30.366 DEBUG 22308 [nio-8980-exec-6] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 21:35:30.366 DEBUG 22308 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:35:30.367 DEBUG 22308 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will not be managed by Spring
2021-01-08 21:35:30.370 DEBUG 22308 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:35:30.370 DEBUG 22308 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 21:35:30.372 DEBUG 22308 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 5
2021-01-08 21:35:30.374 DEBUG 22308 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:35:30.378 DEBUG 22308 [nio-8980-exec-6] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 21:35:30.379 DEBUG 22308 [nio-8980-exec-6] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 21:35:30.380 DEBUG 22308 [nio-8980-exec-6] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 21:35:30.381 INFO  22308 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:35:30.389 DEBUG 22308 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:35:30.387  用时: 69毫秒  URI: /js/a/gen/genTable/form  总内存: 474.5MB  已用内存: 192.663MB
2021-01-08 21:35:30.393 DEBUG 22308 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:35:30.394 DEBUG 22308 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:35:30.394 DEBUG 22308 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:35:30.395 DEBUG 22308 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347537414835130368(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:35:30.389(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=t_chuqin(String), t_chuqin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 69(Long)
2021-01-08 21:35:30.397 DEBUG 22308 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:35:59.021 DEBUG 22308 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:35:59.021  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:35:59.023 DEBUG 22308 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:35:59.023 DEBUG 22308 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:35:59.025 DEBUG 22308 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:35:59.026 DEBUG 22308 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:35:59.027 DEBUG 22308 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:35:59.028 DEBUG 22308 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:35:59.031 DEBUG 22308 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:35:59.031 DEBUG 22308 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:35:59.033 DEBUG 22308 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:35:59.040 DEBUG 22308 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:35:59.044 DEBUG 22308 [nio-8980-exec-1] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 21:35:59.044 DEBUG 22308 [nio-8980-exec-1] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_yuangong(String), t_yuangong(String)
2021-01-08 21:35:59.047 DEBUG 22308 [nio-8980-exec-1] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 21:35:59.050 DEBUG 22308 [nio-8980-exec-1] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 21:35:59.050 DEBUG 22308 [nio-8980-exec-1] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:35:59.052 DEBUG 22308 [nio-8980-exec-1] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 11
2021-01-08 21:35:59.055 DEBUG 22308 [nio-8980-exec-1] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 21:35:59.055 DEBUG 22308 [nio-8980-exec-1] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:35:59.057 DEBUG 22308 [nio-8980-exec-1] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 2
2021-01-08 21:35:59.060 DEBUG 22308 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:35:59.060 DEBUG 22308 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will not be managed by Spring
2021-01-08 21:35:59.063 DEBUG 22308 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:35:59.063 DEBUG 22308 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 21:35:59.065 DEBUG 22308 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 21:35:59.066 DEBUG 22308 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:35:59.066 DEBUG 22308 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will not be managed by Spring
2021-01-08 21:35:59.069 DEBUG 22308 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:35:59.069 DEBUG 22308 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 21:35:59.071 DEBUG 22308 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 5
2021-01-08 21:35:59.072 DEBUG 22308 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:35:59.075 DEBUG 22308 [nio-8980-exec-1] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 21:35:59.075 DEBUG 22308 [nio-8980-exec-1] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 21:35:59.076 DEBUG 22308 [nio-8980-exec-1] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 21:35:59.077 INFO  22308 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:35:59.093 DEBUG 22308 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:35:59.092  用时: 71毫秒  URI: /js/a/gen/genTable/form  总内存: 474.5MB  已用内存: 199.217MB
2021-01-08 21:35:59.096 DEBUG 22308 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:35:59.096 DEBUG 22308 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:35:59.097 DEBUG 22308 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:35:59.098 DEBUG 22308 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347537535232626688(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:35:59.093(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=t_yuangong&op=step3(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 71(Long)
2021-01-08 21:35:59.099 DEBUG 22308 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:36:07.393 DEBUG 22308 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:36:07.392  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 21:36:07.394 DEBUG 22308 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:36:07.395 DEBUG 22308 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:36:07.402 DEBUG 22308 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:36:07.403 DEBUG 22308 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:36:07.405 DEBUG 22308 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:36:07.406 DEBUG 22308 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:36:07.408 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:36:07.409 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:36:07.410 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:36:07.446 DEBUG 22308 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 3毫秒: UPDATE `js_gen_table` SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2021-01-08 21:36:07.453 DEBUG 22308 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:36:07.453 DEBUG 22308 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE `js_gen_table` SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ?
2021-01-08 21:36:07.454 DEBUG 22308 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: Tyuangong(String), t_yuangong(String), (String), eid(String), (String), crud(String), com.jeesite.modules(String), employee(String), (String), employee(String), employee(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 21:36:07.444(Timestamp), (String), t_yuangong(String)
2021-01-08 21:36:07.455 DEBUG 22308 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2021-01-08 21:36:07.456 DEBUG 22308 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:36:07.457 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:36:07.457 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), id(String), 10(Integer), int(String), id(String), id(String), id(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582120304640(String)
2021-01-08 21:36:07.458 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:36:07.459 DEBUG 22308 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:36:07.462 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:36:07.462 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), org_id(String), 20(Integer), int(String), 部门(String), 部门(String), orgId(String), Long(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"digits","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582204190720(String)
2021-01-08 21:36:07.465 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:36:07.466 DEBUG 22308 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:36:07.467 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:36:07.468 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), eid(String), 30(Integer), varchar(55)(String), 工号(String), 工号(String), eid(String), String(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582275493888(String)
2021-01-08 21:36:07.470 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:36:07.471 DEBUG 22308 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:36:07.471 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:36:07.472 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), name(String), 40(Integer), varchar(50)(String), 姓名(String), 姓名(String), name(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), LIKE(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582569095168(String)
2021-01-08 21:36:07.474 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:36:07.476 DEBUG 22308 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:36:07.479 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:36:07.482 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), sex(String), 50(Integer), varchar(50)(String), 性别(String), 性别(String), sex(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582594260992(String)
2021-01-08 21:36:07.483 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:36:07.484 DEBUG 22308 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:36:07.485 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:36:07.487 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), age(String), 60(Integer), varchar(50)(String), 年龄(String), 年龄(String), age(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582611038208(String)
2021-01-08 21:36:07.488 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:36:07.490 DEBUG 22308 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:36:07.490 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:36:07.491 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), zhiwei(String), 70(Integer), varchar(50)(String), 职位(String), 职位(String), zhiwei(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582627815424(String)
2021-01-08 21:36:07.492 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:36:07.493 DEBUG 22308 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:36:07.494 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:36:07.498 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), shifoubumenlingdao(String), 80(Integer), varchar(50)(String), 是否为领导(String), 是否为领导(String), shifoubumenlingdao(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582661369856(String)
2021-01-08 21:36:07.500 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:36:07.504 DEBUG 22308 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 3毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:36:07.505 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:36:07.506 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), loginname(String), 90(Integer), varchar(50)(String), 账户名(String), 账户名(String), loginname(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582682341376(String)
2021-01-08 21:36:07.507 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:36:07.510 DEBUG 22308 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:36:07.511 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:36:07.512 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), loginpw(String), 100(Integer), varchar(50)(String), 密码(String), 密码(String), loginpw(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582703312896(String)
2021-01-08 21:36:07.513 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:36:07.514 DEBUG 22308 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:36:07.517 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:36:07.517 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), del(String), 110(Integer), varchar(50)(String), del(String), del(String), del(String), String(String), (String), 1(String), (String), (String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582732673024(String)
2021-01-08 21:36:07.518 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:36:07.560 DEBUG 22308 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:36:07.561 DEBUG 22308 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:36:07.566 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC
2021-01-08 21:36:07.567 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:36:07.569 DEBUG 22308 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 1
2021-01-08 21:36:07.570 DEBUG 22308 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:36:07.574 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:36:07.575 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:36:07.576 DEBUG 22308 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 4
2021-01-08 21:36:07.585 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TchuqinDao.xml
2021-01-08 21:36:07.587 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.employee.dao.TchuqinDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tchuqin">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 21:36:07.588 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TchuqinDao.xml
2021-01-08 21:36:07.589 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tchuqin.java
2021-01-08 21:36:07.642 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.entity;

import org.hibernate.validator.constraints.Length;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * employeeEntity
 * @author LX
 * @version 2021-01-08
 */
@Table(name="t_chuqin", alias="a", columns={
		@Column(name="id", attrName="id", label="id", isPK=true),
		@Column(name="yuefen", attrName="yuefen", label="yuefen"),
		@Column(name="tianshu", attrName="tianshu", label="tianshu"),
		@Column(name="e_id", attrName="eid.id", label="e_id", isPK=true),
	}, orderBy="a.id ASC, a.e_id ASC"
)
public class Tchuqin extends DataEntity<Tchuqin> {
	
	private static final long serialVersionUID = 1L;
	private String yuefen;		// yuefen
	private Long tianshu;		// tianshu
	private Tyuangong eid;		// e_id 父类
	
	public Tchuqin() {
		this(null, null);
	}


	public Tchuqin(Tyuangong eid){
		this.eid = eid;
	}
	
	@Length(min=0, max=55, message="yuefen长度不能超过 55 个字符")
	public String getYuefen() {
		return yuefen;
	}

	public void setYuefen(String yuefen) {
		this.yuefen = yuefen;
	}
	
	public Long getTianshu() {
		return tianshu;
	}

	public void setTianshu(Long tianshu) {
		this.tianshu = tianshu;
	}
	
	public Tyuangong getEid() {
		return eid;
	}

	public void setEid(Tyuangong eid) {
		this.eid = eid;
	}
	
}
2021-01-08 21:36:07.644 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tchuqin.java
2021-01-08 21:36:07.645 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TchuqinDao.java
2021-01-08 21:36:07.646 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.employee.entity.Tchuqin;

/**
 * employeeDAO接口
 * @author LX
 * @version 2021-01-08
 */
@MyBatisDao
public interface TchuqinDao extends CrudDao<Tchuqin> {
	
}
2021-01-08 21:36:07.648 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TchuqinDao.java
2021-01-08 21:36:07.652 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TyuangongDao.xml
2021-01-08 21:36:07.652 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.employee.dao.TyuangongDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tyuangong">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 21:36:07.654 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TyuangongDao.xml
2021-01-08 21:36:07.655 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tyuangong.java
2021-01-08 21:36:07.668 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.entity;

import org.hibernate.validator.constraints.Length;
import java.util.List;
import com.jeesite.common.collect.ListUtils;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * employeeEntity
 * @author LX
 * @version 2021-01-08
 */
@Table(name="t_yuangong", alias="a", columns={
		@Column(name="id", attrName="id", label="id", isPK=true),
		@Column(name="org_id", attrName="orgId", label="部门"),
		@Column(name="eid", attrName="eid", label="工号", isPK=true),
		@Column(name="name", attrName="name", label="姓名", queryType=QueryType.LIKE),
		@Column(name="sex", attrName="sex", label="性别"),
		@Column(name="age", attrName="age", label="年龄"),
		@Column(name="zhiwei", attrName="zhiwei", label="职位"),
		@Column(name="shifoubumenlingdao", attrName="shifoubumenlingdao", label="是否为领导"),
		@Column(name="loginname", attrName="loginname", label="账户名"),
		@Column(name="loginpw", attrName="loginpw", label="密码"),
		@Column(name="del", attrName="del", label="del", isInsert=false, isUpdate=false, isQuery=false),
	}, orderBy="a.id DESC, a.eid DESC"
)
public class Tyuangong extends DataEntity<Tyuangong> {
	
	private static final long serialVersionUID = 1L;
	private Long orgId;		// 部门
	private String eid;		// 工号
	private String name;		// 姓名
	private String sex;		// 性别
	private String age;		// 年龄
	private String zhiwei;		// 职位
	private String shifoubumenlingdao;		// 是否为领导
	private String loginname;		// 账户名
	private String loginpw;		// 密码
	private String del;		// del
	private List<Tchuqin> tchuqinList = ListUtils.newArrayList();		// 子表列表
	
	public Tyuangong() {
		this(null, null);
	}

	public Tyuangong(Long id, String eid){
		this.id = id;
		this.eid = eid;
	}
	
	public Long getOrgId() {
		return orgId;
	}

	public void setOrgId(Long orgId) {
		this.orgId = orgId;
	}
	
	public String getEid() {
		return eid;
	}

	public void setEid(String eid) {
		this.eid = eid;
	}
	
	@Length(min=0, max=50, message="姓名长度不能超过 50 个字符")
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}
	
	@Length(min=0, max=50, message="性别长度不能超过 50 个字符")
	public String getSex() {
		return sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}
	
	@Length(min=0, max=50, message="年龄长度不能超过 50 个字符")
	public String getAge() {
		return age;
	}

	public void setAge(String age) {
		this.age = age;
	}
	
	@Length(min=0, max=50, message="职位长度不能超过 50 个字符")
	public String getZhiwei() {
		return zhiwei;
	}

	public void setZhiwei(String zhiwei) {
		this.zhiwei = zhiwei;
	}
	
	@Length(min=0, max=50, message="是否为领导长度不能超过 50 个字符")
	public String getShifoubumenlingdao() {
		return shifoubumenlingdao;
	}

	public void setShifoubumenlingdao(String shifoubumenlingdao) {
		this.shifoubumenlingdao = shifoubumenlingdao;
	}
	
	@Length(min=0, max=50, message="账户名长度不能超过 50 个字符")
	public String getLoginname() {
		return loginname;
	}

	public void setLoginname(String loginname) {
		this.loginname = loginname;
	}
	
	@Length(min=0, max=50, message="密码长度不能超过 50 个字符")
	public String getLoginpw() {
		return loginpw;
	}

	public void setLoginpw(String loginpw) {
		this.loginpw = loginpw;
	}
	
	@Length(min=0, max=50, message="del长度不能超过 50 个字符")
	public String getDel() {
		return del;
	}

	public void setDel(String del) {
		this.del = del;
	}
	
	public List<Tchuqin> getTchuqinList() {
		return tchuqinList;
	}

	public void setTchuqinList(List<Tchuqin> tchuqinList) {
		this.tchuqinList = tchuqinList;
	}
	
}
2021-01-08 21:36:07.671 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tyuangong.java
2021-01-08 21:36:07.671 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TyuangongDao.java
2021-01-08 21:36:07.671 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.employee.entity.Tyuangong;

/**
 * employeeDAO接口
 * @author LX
 * @version 2021-01-08
 */
@MyBatisDao
public interface TyuangongDao extends CrudDao<Tyuangong> {
	
}
2021-01-08 21:36:07.673 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TyuangongDao.java
2021-01-08 21:36:07.673 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\service\TyuangongService.java
2021-01-08 21:36:07.700 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.jeesite.common.entity.Page;
import com.jeesite.common.service.CrudService;
import com.jeesite.modules.employee.entity.Tyuangong;
import com.jeesite.modules.employee.dao.TyuangongDao;
import com.jeesite.modules.employee.entity.Tchuqin;
import com.jeesite.modules.employee.dao.TchuqinDao;

/**
 * employeeService
 * @author LX
 * @version 2021-01-08
 */
@Service
@Transactional(readOnly=true)
public class TyuangongService extends CrudService<TyuangongDao, Tyuangong> {
	
	@Autowired
	private TchuqinDao tchuqinDao;
	
	/**
	 * 获取单条数据
	 * @param tyuangong
	 * @return
	 */
	@Override
	public Tyuangong get(Tyuangong tyuangong) {
		Tyuangong entity = super.get(tyuangong);
		if (entity != null){
			Tchuqin tchuqin = new Tchuqin(entity);
			tchuqin.setStatus(Tchuqin.STATUS_NORMAL);
			entity.setTchuqinList(tchuqinDao.findList(tchuqin));
		}
		return entity;
	}
	
	/**
	 * 查询分页数据
	 * @param tyuangong 查询条件
	 * @param tyuangong.page 分页对象
	 * @return
	 */
	@Override
	public Page<Tyuangong> findPage(Tyuangong tyuangong) {
		return super.findPage(tyuangong);
	}
	
	/**
	 * 保存数据（插入或更新）
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void save(Tyuangong tyuangong) {
		super.save(tyuangong);
		// 保存 Tyuangong子表
		for (Tchuqin tchuqin : tyuangong.getTchuqinList()){
			if (!Tchuqin.STATUS_DELETE.equals(tchuqin.getStatus())){
				tchuqin.setEid(tyuangong);
				if (tchuqin.getIsNewRecord()){
					tchuqinDao.insert(tchuqin);
				}else{
					tchuqinDao.update(tchuqin);
				}
			}else{
				tchuqinDao.delete(tchuqin);
			}
		}
	}
	
	/**
	 * 更新状态
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void updateStatus(Tyuangong tyuangong) {
		super.updateStatus(tyuangong);
	}
	
	/**
	 * 删除数据
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void delete(Tyuangong tyuangong) {
		super.delete(tyuangong);
		Tchuqin tchuqin = new Tchuqin();
		tchuqin.setEid(tyuangong);
		tchuqinDao.deleteByEntity(tchuqin);
	}
	
}
2021-01-08 21:36:07.701 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\service\TyuangongService.java
2021-01-08 21:36:07.701 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\web\TyuangongController.java
2021-01-08 21:36:07.708 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.jeesite.common.config.Global;
import com.jeesite.common.entity.Page;
import com.jeesite.common.web.BaseController;
import com.jeesite.modules.employee.entity.Tyuangong;
import com.jeesite.modules.employee.service.TyuangongService;

/**
 * employeeController
 * @author LX
 * @version 2021-01-08
 */
@Controller
@RequestMapping(value = "${adminPath}/employee/tyuangong")
public class TyuangongController extends BaseController {

	@Autowired
	private TyuangongService tyuangongService;
	
	/**
	 * 获取数据
	 */
	@ModelAttribute
	public Tyuangong get(Long id, String eid, boolean isNewRecord) {
		Tyuangong tyuangong = new Tyuangong();
		tyuangong.setId(id);
		tyuangong.setEid(eid);
		tyuangong.setIsNewRecord(isNewRecord);
		return tyuangongService.getAndValid(tyuangong);
	}
	
	/**
	 * 查询列表
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = {"list", ""})
	public String list(Tyuangong tyuangong, Model model) {
		model.addAttribute("tyuangong", tyuangong);
		return "modules/employee/tyuangongList";
	}
	
	/**
	 * 查询列表数据
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = "listData")
	@ResponseBody
	public Page<Tyuangong> listData(Tyuangong tyuangong, HttpServletRequest request, HttpServletResponse response) {
		tyuangong.setPage(new Page<>(request, response));
		Page<Tyuangong> page = tyuangongService.findPage(tyuangong);
		return page;
	}

	/**
	 * 查看编辑表单
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = "form")
	public String form(Tyuangong tyuangong, Model model) {
		model.addAttribute("tyuangong", tyuangong);
		return "modules/employee/tyuangongForm";
	}

	/**
	 * 保存数据
	 */
	@RequiresPermissions("employee:tyuangong:edit")
	@PostMapping(value = "save")
	@ResponseBody
	public String save(@Validated Tyuangong tyuangong) {
		tyuangongService.save(tyuangong);
		return renderResult(Global.TRUE, text("保存employee成功！"));
	}
	
	/**
	 * 删除数据
	 */
	@RequiresPermissions("employee:tyuangong:edit")
	@RequestMapping(value = "delete")
	@ResponseBody
	public String delete(Tyuangong tyuangong) {
		tyuangongService.delete(tyuangong);
		return renderResult(Global.TRUE, text("删除employee成功！"));
	}
	
}
2021-01-08 21:36:07.711 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\web\TyuangongController.java
2021-01-08 21:36:07.712 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongList.html
2021-01-08 21:36:07.727 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: 'employee管理', libs: ['dataGrid']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header">
			<div class="box-title">
				<i class="fa icon-notebook"></i> ${text('employee管理')}
			</div>
			<div class="box-tools pull-right">
				<a href="#" class="btn btn-default" id="btnSearch" title="${text('查询')}"><i class="fa fa-filter"></i> ${text('查询')}</a>
				<% if(hasPermi('employee:tyuangong:edit')){ %>
					<a href="${ctx}/employee/tyuangong/form" class="btn btn-default btnTool" title="${text('新增employee')}"><i class="fa fa-plus"></i> ${text('新增')}</a>
				<% } %>
				<a href="#" class="btn btn-default" id="btnSetting" title="${text('设置')}"><i class="fa fa-navicon"></i></a>
			</div>
		</div>
		<div class="box-body">
			<#form:form id="searchForm" model="${tyuangong}" action="${ctx}/employee/tyuangong/listData" method="post" class="form-inline hide"
					data-page-no="${parameter.pageNo}" data-page-size="${parameter.pageSize}" data-order-by="${parameter.orderBy}">
				<div class="form-group">
					<label class="control-label">${text('部门')}：</label>
					<div class="control-inline">
						<#form:input path="orgId" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('姓名')}：</label>
					<div class="control-inline">
						<#form:input path="name" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('性别')}：</label>
					<div class="control-inline">
						<#form:input path="sex" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('年龄')}：</label>
					<div class="control-inline">
						<#form:input path="age" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('职位')}：</label>
					<div class="control-inline">
						<#form:input path="zhiwei" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('是否为领导')}：</label>
					<div class="control-inline">
						<#form:input path="shifoubumenlingdao" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('账户名')}：</label>
					<div class="control-inline">
						<#form:input path="loginname" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('密码')}：</label>
					<div class="control-inline">
						<#form:input path="loginpw" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<button type="submit" class="btn btn-primary btn-sm">${text('查询')}</button>
					<button type="reset" class="btn btn-default btn-sm">${text('重置')}</button>
				</div>
			</#form:form>
			<table id="dataGrid"></table>
			<div id="dataGridPage"></div>
		</div>
	</div>
</div>
<% } %>
<script>
// 初始化DataGrid对象
$('#dataGrid').dataGrid({
	searchForm: $("#searchForm"),
	columnModel: [
		{header:'${text("部门")}', name:'orgId', index:'a.org_id', width:150, align:"left", frozen:true, formatter: function(val, obj, row, act){
			return '<a href="${ctx}/employee/tyuangong/form?id='+row.id+'&eid='+row.eid+'" class="btnList" data-title="${text("编辑employee")}">'+(val||row.id)+'</a>';
		}},
		{header:'${text("姓名")}', name:'name', index:'a.name', width:150, align:"left"},
		{header:'${text("性别")}', name:'sex', index:'a.sex', width:150, align:"left"},
		{header:'${text("年龄")}', name:'age', index:'a.age', width:150, align:"left"},
		{header:'${text("职位")}', name:'zhiwei', index:'a.zhiwei', width:150, align:"left"},
		{header:'${text("是否为领导")}', name:'shifoubumenlingdao', index:'a.shifoubumenlingdao', width:150, align:"left"},
		{header:'${text("账户名")}', name:'loginname', index:'a.loginname', width:150, align:"left"},
		{header:'${text("密码")}', name:'loginpw', index:'a.loginpw', width:150, align:"left"},
		{header:'${text("操作")}', name:'actions', width:120, sortable:false, title:false, formatter: function(val, obj, row, act){
			var actions = [];
			<% if(hasPermi('employee:tyuangong:edit')){ %>
				actions.push('<a href="${ctx}/employee/tyuangong/form?id='+row.id+'&eid='+row.eid+'" class="btnList" title="${text("编辑employee")}"><i class="fa fa-pencil"></i></a>&nbsp;');
				actions.push('<a href="${ctx}/employee/tyuangong/delete?id='+row.id+'&eid='+row.eid+'" class="btnList" title="${text("删除employee")}" data-confirm="${text("确认要删除该employee吗？")}"><i class="fa fa-trash-o"></i></a>&nbsp;');
			<% } %>
			return actions.join('');
		}}
	],
	// 加载成功后执行事件
	ajaxSuccess: function(data){
		
	}
});
</script>
2021-01-08 21:36:07.732 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongList.html
2021-01-08 21:36:07.733 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongForm.html
2021-01-08 21:36:07.766 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: 'employee管理', libs: ['validate','dataGrid']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header with-border">
			<div class="box-title">
				<i class="fa icon-note"></i> ${text(tyuangong.isNewRecord ? '新增employee' : '编辑employee')}
			</div>
			<div class="box-tools pull-right">
				<button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
			</div>
		</div>
		<#form:form id="inputForm" model="${tyuangong}" action="${ctx}/employee/tyuangong/save" method="post" class="form-horizontal">
			<div class="box-body">
				<div class="form-unit">${text('基本信息')}</div>
				<#form:hidden path="id"/>
				<div class="row">
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('部门')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="orgId" class="form-control digits"/>
							</div>
						</div>
					</div>
				<#form:hidden path="eid"/>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('姓名')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="name" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('性别')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="sex" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('年龄')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="age" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('职位')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="zhiwei" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('是否为领导')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="shifoubumenlingdao" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('账户名')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="loginname" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('密码')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="loginpw" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
				</div>
				<h4 class="form-unit">${text('t_chuqin')}</h4>
				<div class="ml10 mr10">
					<table id="tchuqinDataGrid"></table>
					<% if (hasPermi('employee:tyuangong:edit')){ %>
						<a href="#" id="tchuqinDataGridAddRowBtn" class="btn btn-primary btn-sm mt10 mb10"><i class="fa fa-plus"></i> ${text('增行')}</a>
					<% } %>
				</div>
			</div>
			<div class="box-footer">
				<div class="row">
					<div class="col-sm-offset-2 col-sm-10">
						<% if (hasPermi('employee:tyuangong:edit')){ %>
							<button type="submit" class="btn btn-sm btn-primary" id="btnSubmit"><i class="fa fa-check"></i> ${text('保 存')}</button>&nbsp;
						<% } %>
						<button type="button" class="btn btn-sm btn-default" id="btnCancel" onclick="js.closeCurrentTabPage()"><i class="fa fa-reply-all"></i> ${text('关 闭')}</button>
					</div>
				</div>
			</div>
		</#form:form>
	</div>
</div>
<% } %>
<script>
//初始化t_chuqinDataGrid对象
$("#tchuqinDataGrid").dataGrid({

	data: ${toJson(tyuangong.tchuqinList)},
	datatype: "local", // 设置本地数据
	autoGridHeight: function(){return 'auto'}, // 设置自动高度
	
	// 设置数据表格列
	columnModel: [
		{header:'状态', name:'status', editable:true, hidden:true},
		{header:'主键', name:'id', editable:true, hidden:true},
		{header:'${text("yuefen")}', name:'yuefen', width:150, editable:true, edittype:'text', editoptions:{'maxlength':'55', 'class':'form-control'}},
		{header:'${text("tianshu")}', name:'tianshu', width:150, editable:true, edittype:'text', editoptions:{'class':'form-control digits'}},
		{header:'${text("e_id")}', name:'eid.id', editable:true, hidden:true},
		{header:'${text("操作")}', name:'actions', width:80, sortable:false, fixed:true, formatter: function(val, obj, row, act){
			var actions = [];
			if (val == 'new'){
				actions.push('<a href="#" onclick="js.confirm(\'${text("你确认要删除这条数据吗？")}\', function(){$(\'#tchuqinDataGrid\').dataGrid(\'delRowData\',\''+obj.rowId+'\')});return false;"><i class="fa fa-trash-o"></i></a>&nbsp;');
			}else{
				actions.push('<a href="#" onclick="js.confirm(\'${text("你确认要删除这条数据吗？")}\', function(){$(\'#tchuqinDataGrid\').dataGrid(\'setRowData\',\''+obj.rowId+'\',null,{display:\'none\'});$(\'#'+obj.rowId+'_status\').val(\''+Global.STATUS_DELETE+'\');});return false;"><i class="fa fa-trash-o"></i></a>&nbsp;');
			}
			return actions.join('');
		}, editoptions: {defaultValue: 'new'}}
	],
	
	// 编辑表格参数
	editGrid: true,				// 是否是编辑表格
	editGridInitRowNum: 1,		// 编辑表格的初始化新增行数
	editGridAddRowBtn: $('#tchuqinDataGridAddRowBtn'),	// 子表增行按钮
	editGridAddRowInitData: {id: '', status: Global.STATUS_NORMAL},	// 新增行的时候初始化的数据
	
	// 编辑表格的提交数据参数
	editGridInputFormListName: 'tchuqinList', // 提交的数据列表名
	editGridInputFormListAttrs: 'status,id,yuefen,tianshu,eid.id,', // 提交数据列表的属性字段
	
	// 加载成功后执行事件
	ajaxSuccess: function(data){
		
	}
});
</script>
<script>
$("#inputForm").validate({
	submitHandler: function(form){
		js.ajaxSubmitForm($(form), function(data){
			js.showMessage(data.message);
			if(data.result == Global.TRUE){
				js.closeCurrentTabPage(function(contentWindow){
					contentWindow.page();
				});
			}
		}, "json");
    }
});
</script>
2021-01-08 21:36:07.775 DEBUG 22308 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongForm.html
2021-01-08 21:36:07.789 DEBUG 22308 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:36:07.778  用时: 386毫秒  URI: /js/a/gen/genTable/save  总内存: 474.5MB  已用内存: 236.116MB
2021-01-08 21:36:07.793 DEBUG 22308 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:36:07.793 DEBUG 22308 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:36:07.794 DEBUG 22308 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:36:07.798 DEBUG 22308 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347537571702099968(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:36:07.788(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=t_yuangong&comments=t_yuangong&className=Tyuangong&functionAuthor=LX&parentTableName=&parentTableFkName=eid&remarks=&columnList[0].id=1347532582120304640&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=id&columnList[0].columnType=int&columnList[0].attrType=Long&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=6/4/8&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1347532582204190720&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=org_id&columnList[1].comments=部门&columnList[1].columnType=int&columnList[1].attrType=Long&columnList[1].fullAttrName=orgId&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=6/4/8&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[1].optionMap['fieldValid']=digits&columnList[2].id=1347532582275493888&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=eid&columnList[2].comments=工号&columnList[2].columnType=varchar(55)&columnList[2].attrType=String&columnList[2].fullAttrName=eid&!columnList[2].isPk=&columnList[2].isPk=1&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&!columnList[2].isList=&!columnList[2].isQuery=&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].isRequired=1&columnList[2].showType=hidden&columnList[2].optionMap['gridRowCol']=6/4/8&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[2].optionMap['fieldValid']=abc&columnList[3].id=1347532582569095168&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=name&columnList[3].comments=姓名&columnList[3].columnType=varchar(50)&columnList[3].attrType=String&columnList[3].fullAttrName=name&!columnList[3].isPk=&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&columnList[3].isUpdate=1&!columnList[3].isList=&columnList[3].isList=1&!columnList[3].isQuery=&columnList[3].isQuery=1&columnList[3].queryType=LIKE&!columnList[3].isEdit=&columnList[3].isEdit=1&!columnList[3].isRequired=&columnList[3].showType=input&columnList[3].optionMap['gridRowCol']=6/4/8&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[4].id=1347532582594260992&columnList[4].status=&columnList[4].columnSort=50&columnList[4].columnName=sex&columnList[4].comments=性别&columnList[4].columnType=varchar(50)&columnList[4].attrType=String&columnList[4].fullAttrName=sex&!columnList[4].isPk=&!columnList[4].isInsert=&columnList[4].isInsert=1&!columnList[4].isUpdate=&columnList[4].isUpdate=1&!columnList[4].isList=&columnList[4].isList=1&!columnList[4].isQuery=&columnList[4].isQuery=1&columnList[4].queryType=EQ&!columnList[4].isEdit=&columnList[4].isEdit=1&!columnList[4].isRequired=&columnList[4].showType=input&columnList[4].optionMap['gridRowCol']=6/4/8&!columnList[4].optionMap['isNewLine']=&columnList[4].optionMap['dictName']=&columnList[4].optionMap['dictType']=&!columnList[4].optionMap['fieldValid']=&columnList[5].id=1347532582611038208&columnList[5].status=&columnList[5].columnSort=60&columnList[5].columnName=age&columnList[5].comments=年龄&columnList[5].columnType=varchar(50)&columnList[5].attrType=String&columnList[5].fullAttrName=age&!columnList[5].isPk=&!columnList[5].isInsert=&columnList[5].isInsert=1&!columnList[5].isUpdate=&columnList[5].isUpdate=1&!columnList[5].isList=&columnList[5].isList=1&!columnList[5].isQuery=&columnList[5].isQuery=1&columnList[5].queryType=EQ&!columnList[5].isEdit=&columnList[5].isEdit=1&!columnList[5].isRequired=&columnList[5].showType=input&columnList[5].optionMap['gridRowCol']=6/4/8&!columnList[5].optionMap['isNewLine']=&columnList[5].optionMap['dictName']=&columnList[5].optionMap['dictType']=&!columnList[5].optionMap['fieldValid']=&columnList[6].id=1347532582627815424&columnList[6].status=&columnList[6].columnSort=70&columnList[6].columnName=zhiwei&columnList[6].comments=职位&columnList[6].columnType=varchar(50)&columnList[6].attrType=String&columnList[6].fullAttrName=zhiwei&!columnList[6].isPk=&!columnList[6].isInsert=&columnList[6].isInsert=1&!columnList[6].isUpdate=&columnList[6].isUpdate=1&!columnList[6].isList=&columnList[6].isList=1&!columnList[6].isQuery=&columnList[6].isQuery=1&columnList[6].queryType=EQ&!columnList[6].isEdit=&columnList[6].isEdit=1&!columnList[6].isRequired=&columnList[6].showType=input&columnList[6].optionMap['gridRowCol']=6/4/8&!columnList[6].optionMap['isNewLine']=&columnList[6].optionMap['dictName']=&columnList[6].optionMap['dictType']=&!columnList[6].optionMap['fieldValid']=&columnList[7].id=1347532582661369856&columnList[7].status=&columnList[7].columnSort=80&columnList[7].columnName=shifoubumenlingdao&columnList[7].comments=是否为领导&columnList[7].columnType=varchar(50)&columnList[7].attrType=String&columnList[7].fullAttrName=shifoubumenlingdao&!columnList[7].isPk=&!columnList[7].isInsert=&columnList[7].isInsert=1&!columnList[7].isUpdate=&columnList[7].isUpdate=1&!columnList[7].isList=&columnList[7].isList=1&!columnList[7].isQuery=&columnList[7].isQuery=1&columnList[7].queryType=EQ&!columnList[7].isEdit=&columnList[7].isEdit=1&!columnList[7].isRequired=&columnList[7].showType=input&columnList[7].optionMap['gridRowCol']=6/4/8&!columnList[7].optionMap['isNewLine']=&columnList[7].optionMap['dictName']=&columnList[7].optionMap['dictType']=&!columnList[7].optionMap['fieldValid']=&columnList[8].id=1347532582682341376&columnList[8].status=&columnList[8].columnSort=90&columnList[8].columnName=loginname&columnList[8].comments=账户名&columnList[8].columnType=varchar(50)&columnList[8].attrType=String&columnList[8].fullAttrName=loginname&!columnList[8].isPk=&!columnList[8].isInsert=&columnList[8].isInsert=1&!columnList[8].isUpdate=&columnList[8].isUpdate=1&!columnList[8].isList=&columnList[8].isList=1&!columnList[8].isQuery=&columnList[8].isQuery=1&columnList[8].queryType=EQ&!columnList[8].isEdit=&columnList[8].isEdit=1&!columnList[8].isRequired=&columnList[8].showType=input&columnList[8].optionMap['gridRowCol']=6/4/8&!columnList[8].optionMap['isNewLine']=&columnList[8].optionMap['dictName']=&columnList[8].optionMap['dictType']=&!columnList[8].optionMap['fieldValid']=&columnList[9].id=1347532582703312896&columnList[9].status=&columnList[9].columnSort=100&columnList[9].columnName=loginpw&columnList[9].comments=密码&columnList[9].columnType=varchar(50)&columnList[9].attrType=String&columnList[9].fullAttrName=loginpw&!columnList[9].isPk=&!columnList[9].isInsert=&columnList[9].isInsert=1&!columnList[9].isUpdate=&columnList[9].isUpdate=1&!columnList[9].isList=&columnList[9].isList=1&!columnList[9].isQuery=&columnList[9].isQuery=1&columnList[9].queryType=EQ&!columnList[9].isEdit=&columnList[9].isEdit=1&!columnList[9].isRequired=&columnList[9].showType=input&columnList[9].optionMap['gridRowCol']=6/4/8&!columnList[9].optionMap['isNewLine']=&columnList[9].optionMap['dictName']=&columnList[9].optionMap['dictType']=&!columnList[9].optionMap['fieldValid']=&columnList[10].id=1347532582732673024&columnList[10].status=&columnList[10].columnSort=110&columnList[10].columnName=del&columnList[10].comments=del&columnList[10].columnType=varchar(50)&columnList[10].attrType=String&columnList[10].fullAttrName=del&!columnList[10].isPk=&!columnList[10].isInsert=&!columnList[10].isUpdate=&!columnList[10].isList=&!columnList[10].isQuery=&columnList[10].queryType=EQ&!columnList[10].isEdit=&!columnList[10].isRequired=&columnList[10].showType=input&columnList[10].optionMap['gridRowCol']=6/4/8&!columnList[10].optionMap['isNewLine']=&columnList[10].optionMap['dictName']=&columnList[10].optionMap['dictType']=&!columnList[10].optionMap['fieldValid']=&tplCategory=crud&packageName=com.jeesite.modules&moduleName=employee&subModuleName=&functionName=employee&functionNameSimple=employee&genBaseDir=C:\Users\Lx\work2\web&!optionMap['isHaveDisableEnable']=&optionMap['isHaveDisableEnable']=0&!optionMap['isHaveDelete']=&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&!optionMap['isImageUpload']=&optionMap['isImageUpload']=0&!optionMap['isFileUpload']=&optionMap['isFileUpload']=0&!optionMap['isBpmForm']=&optionMap['isBpmForm']=0&optionMap['bpmFormKey']=&genFlag=2&replaceFile=1&!replaceFile=0(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 386(Long)
2021-01-08 21:36:07.801 DEBUG 22308 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:36:07.852 DEBUG 22308 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:36:07.848  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:36:07.866 DEBUG 22308 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:36:07.867 DEBUG 22308 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:36:07.875 DEBUG 22308 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:36:07.876 DEBUG 22308 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:36:07.879 DEBUG 22308 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:36:07.879 DEBUG 22308 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:36:07.881 DEBUG 22308 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:36:07.889 DEBUG 22308 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:36:07.886  用时: 38毫秒  URI: /js/a/gen/genTable/listData  总内存: 474.5MB  已用内存: 239.385MB
2021-01-08 21:36:07.896 DEBUG 22308 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:36:07.896 DEBUG 22308 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4f22fd5d] will be managed by Spring
2021-01-08 21:36:07.896 DEBUG 22308 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:36:07.903 DEBUG 22308 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347537572125724672(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:36:07.889(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 38(Long)
2021-01-08 21:36:07.905 DEBUG 22308 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:36:35.753 INFO  22724 [           main] [com.jeesite.modules.Application        ] - Starting Application on DESKTOP-0IUV8EB with PID 22724 (C:\Users\Lx\work2\web\src\main\webapp\WEB-INF\classes started by Lx in C:\Users\Lx\work2\web)
2021-01-08 21:36:35.764 DEBUG 22724 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2021-01-08 21:36:35.765 INFO  22724 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2021-01-08 21:36:39.664 INFO  22724 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2021-01-08 21:36:39.666 INFO  22724 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2021-01-08 21:36:41.662 INFO  22724 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/Lx
2021-01-08 21:36:41.663 INFO  22724 [           main] [com.jeesite.common.config.Global       ] - user.dir: C:/Users/Lx/work2/web
2021-01-08 21:36:41.664 INFO  22724 [           main] [com.jeesite.common.config.Global       ] - logPath: C:/Users/Lx/work2/web/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.2 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：adfb80499b32e1492729a84d62f8cd98
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2021-01-08 21:36:41.671 WARN  22724 [           main] [com.jeesite.common.config.Global       ] - 

===================================================================

    类型: mysql
    驱动: com.mysql.cj.jdbc.Driver
    地址: jdbc:mysql://127.0.0.1:3306/jeesite?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    用户: root

===================================================================

注意：以上信息是初始化数据库的连接信息，请认真对照。

本操作主要用于首次安装 JeeSite 或后安装 Module 的数据表初始化，若模块已安装会自动忽略。
在 v4.2 版本以后，官方初始化数据库是比较安全的，官方代码中不会包含任何删除数据表及数据的脚本。

如果你是升级到 v4.2 的版本，无法排除你是否升级完整，为安全期间，还是建议先备份数据库后再操作。

系统为您提供 20 秒的考虑时间，若不初始化数据库，请停止服务启动......

2021-01-08 21:37:03.056 DEBUG 22724 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2021-01-08 21:37:04.207 INFO  22724 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2021-01-08 21:37:06.728 INFO  22724 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2021-01-08 21:37:13.278 INFO  22724 [           main] [com.jeesite.modules.sys.db.InitCoreData] - ===== InitData Started ============
2021-01-08 21:37:13.394 DEBUG 22724 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4b99f2ed] will not be managed by Spring
2021-01-08 21:37:13.939 DEBUG 22724 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 21:37:13.963 DEBUG 22724 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 21:37:13.985 DEBUG 22724 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 21:37:13.988 INFO  22724 [           main] [com.jeesite.modules.sys.db.InitCoreData] - ===== InitData Completed ========== 耗时：710毫秒
2021-01-08 21:37:13.989 INFO  22724 [           main] [c.jeesite.modules.test.db.InitTestData ] - ===== InitData Started ============
2021-01-08 21:37:13.989 INFO  22724 [           main] [c.jeesite.modules.test.db.InitTestData ] - ===== InitData Completed ========== 耗时：0毫秒
2021-01-08 21:37:14.042 DEBUG 22724 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 7毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:37:14.046 DEBUG 22724 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4b99f2ed] will be managed by Spring
2021-01-08 21:37:14.047 DEBUG 22724 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2021-01-08 21:37:14.050 DEBUG 22724 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2021-01-08 21:37:14.061 DEBUG 22724 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2021-01-08 21:37:14.078 WARN  22724 [           main] [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8980 is already in use
2021-01-08 21:37:14.142 DEBUG 22724 [           main] [com.jeesite.common.utils.SpringUtils   ] - Destroy: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70eecdc2, started on Fri Jan 08 21:36:35 GMT+08:00 2021
2021-01-08 21:37:14.193 ERROR 22724 [           main] [o.s.b.d.LoggingFailureAnalysisReporter ] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8980 was already in use.

Action:

Identify and stop the process that's listening on port 8980 or configure this application to listen on another port.

2021-01-08 21:37:51.792 INFO  2292 [           main] [com.jeesite.modules.Application        ] - Starting Application on DESKTOP-0IUV8EB with PID 2292 (C:\Users\Lx\work2\web\src\main\webapp\WEB-INF\classes started by Lx in C:\Users\Lx\work2\web)
2021-01-08 21:37:51.799 DEBUG 2292 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2021-01-08 21:37:51.801 INFO  2292 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2021-01-08 21:37:55.712 INFO  2292 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2021-01-08 21:37:55.719 INFO  2292 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2021-01-08 21:37:57.882 INFO  2292 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/Lx
2021-01-08 21:37:57.882 INFO  2292 [           main] [com.jeesite.common.config.Global       ] - user.dir: C:/Users/Lx/work2/web
2021-01-08 21:37:57.882 INFO  2292 [           main] [com.jeesite.common.config.Global       ] - logPath: C:/Users/Lx/work2/web/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.2 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：adfb80499b32e1492729a84d62f8cd98
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2021-01-08 21:37:57.884 WARN  2292 [           main] [com.jeesite.common.config.Global       ] - 

===================================================================

    类型: mysql
    驱动: com.mysql.cj.jdbc.Driver
    地址: jdbc:mysql://127.0.0.1:3306/jeesite?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    用户: root

===================================================================

注意：以上信息是初始化数据库的连接信息，请认真对照。

本操作主要用于首次安装 JeeSite 或后安装 Module 的数据表初始化，若模块已安装会自动忽略。
在 v4.2 版本以后，官方初始化数据库是比较安全的，官方代码中不会包含任何删除数据表及数据的脚本。

如果你是升级到 v4.2 的版本，无法排除你是否升级完整，为安全期间，还是建议先备份数据库后再操作。

系统为您提供 20 秒的考虑时间，若不初始化数据库，请停止服务启动......

2021-01-08 21:38:19.021 DEBUG 2292 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2021-01-08 21:38:19.952 INFO  2292 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2021-01-08 21:38:22.404 INFO  2292 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2021-01-08 21:38:29.371 INFO  2292 [           main] [com.jeesite.modules.sys.db.InitCoreData] - ===== InitData Started ============
2021-01-08 21:38:29.472 DEBUG 2292 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will not be managed by Spring
2021-01-08 21:38:30.380 DEBUG 2292 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 21:38:30.524 DEBUG 2292 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 21:38:30.707 DEBUG 2292 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 21:38:30.746 INFO  2292 [           main] [com.jeesite.modules.sys.db.InitCoreData] - ===== InitData Completed ========== 耗时：1秒
2021-01-08 21:38:30.748 INFO  2292 [           main] [c.jeesite.modules.test.db.InitTestData ] - ===== InitData Started ============
2021-01-08 21:38:30.749 INFO  2292 [           main] [c.jeesite.modules.test.db.InitTestData ] - ===== InitData Completed ========== 耗时：1毫秒
2021-01-08 21:38:30.971 DEBUG 2292 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 8毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:38:30.976 DEBUG 2292 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:38:30.984 DEBUG 2292 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2021-01-08 21:38:31.015 DEBUG 2292 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2021-01-08 21:38:31.034 DEBUG 2292 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2021-01-08 21:38:31.149 INFO  2292 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2021-01-08 21:38:34.450 INFO  2292 [           main] [com.jeesite.modules.Application        ] - Started Application in 44.116 seconds (JVM running for 45.376)
2021-01-08 21:38:43.776 DEBUG 2292 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = #{userCode}
2021-01-08 21:38:43.783 DEBUG 2292 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:38:43.792 DEBUG 2292 [nio-8980-exec-1] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = ?
2021-01-08 21:38:43.793 DEBUG 2292 [nio-8980-exec-1] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2021-01-08 21:38:43.810 DEBUG 2292 [nio-8980-exec-1] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2021-01-08 21:38:44.135 DEBUG 2292 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2021-01-08 21:38:44.144 DEBUG 2292 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:38:44.201 DEBUG 2292 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2021-01-08 21:38:44.202 DEBUG 2292 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2021-01-08 21:38:44.223 DEBUG 2292 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2021-01-08 21:38:44.331 DEBUG 2292 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:38:44.344 DEBUG 2292 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:38:44.349 DEBUG 2292 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:38:44.353 DEBUG 2292 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2021-01-08 21:38:44.429 DEBUG 2292 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 21:38:45.651 DEBUG 2292 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:38:45.660 DEBUG 2292 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:38:45.668 DEBUG 2292 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:38:45.669 DEBUG 2292 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_sys_code(String), 1(String), 0(String)
2021-01-08 21:38:45.681 DEBUG 2292 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2021-01-08 21:38:46.923 DEBUG 2292 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:38:46.920  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2021-01-08 21:38:47.034 INFO  2292 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2021-01-08 21:38:47.493 DEBUG 2292 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:38:47.391  用时: 471毫秒  URI: /js/a/gen/genTable/list  总内存: 587.5MB  已用内存: 228.382MB
2021-01-08 21:38:47.512 DEBUG 2292 [  log-save-10-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:38:47.512 DEBUG 2292 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:38:47.514 DEBUG 2292 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:38:47.516 DEBUG 2292 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 21:38:47.547 DEBUG 2292 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 21:38:47.577 DEBUG 2292 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 6毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:38:47.585 DEBUG 2292 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:38:47.585 DEBUG 2292 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:38:47.593 DEBUG 2292 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347538241513971712(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:38:47.483(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 471(Long)
2021-01-08 21:38:47.597 DEBUG 2292 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:38:48.099 DEBUG 2292 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:38:48.099  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:38:48.256 DEBUG 2292 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:38:48.261 DEBUG 2292 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:38:48.499 DEBUG 2292 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:38:48.500 DEBUG 2292 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:38:48.503 DEBUG 2292 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:38:48.504 DEBUG 2292 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:38:48.506 DEBUG 2292 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:38:48.604 DEBUG 2292 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:38:48.602  用时: 503毫秒  URI: /js/a/gen/genTable/listData  总内存: 587.5MB  已用内存: 268.140MB
2021-01-08 21:38:48.647 DEBUG 2292 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 11毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:38:48.648 DEBUG 2292 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:38:48.649 DEBUG 2292 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:38:48.665 DEBUG 2292 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347538246215786496(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:38:48.604(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 503(Long)
2021-01-08 21:38:48.668 DEBUG 2292 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:38:49.146 DEBUG 2292 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:38:49.146  URI: /js/a/employee/tyuangong/list  IP: 127.0.0.1
2021-01-08 21:38:49.246 INFO  2292 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/employee/tyuangongList <<<<<<<<< /js/a/employee/tyuangong/list >>>>>>>>> com.jeesite.modules.employee.web.TyuangongController#list(Tyuangong, Model)
2021-01-08 21:38:49.315 DEBUG 2292 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:38:49.304  用时: 158毫秒  URI: /js/a/employee/tyuangong/list  总内存: 587.5MB  已用内存: 283.822MB
2021-01-08 21:38:49.352 DEBUG 2292 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 3毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:38:49.354 DEBUG 2292 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:38:49.355 DEBUG 2292 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:38:49.360 DEBUG 2292 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347538249197936640(String), access(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:38:49.315(Timestamp), /js/a/employee/tyuangong/list(String), GET(String), (String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 158(Long)
2021-01-08 21:38:49.362 DEBUG 2292 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:38:49.512 DEBUG 2292 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:38:49.512  URI: /js/a/employee/tyuangong/listData  IP: 127.0.0.1
2021-01-08 21:38:49.544 DEBUG 2292 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.id DESC, a.eid DESC
2021-01-08 21:38:49.546 DEBUG 2292 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:38:49.584 DEBUG 2292 [nio-8980-exec-4] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT count(0) FROM `t_yuangong` a
2021-01-08 21:38:49.585 DEBUG 2292 [nio-8980-exec-4] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:38:49.800 DEBUG 2292 [nio-8980-exec-4] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.id DESC, a.eid DESC LIMIT 20
2021-01-08 21:38:49.801 DEBUG 2292 [nio-8980-exec-4] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:38:49.805 DEBUG 2292 [nio-8980-exec-4] [c.j.m.e.dao.TyuangongDao.findList      ] - <==      Total: 8
2021-01-08 21:38:49.831 DEBUG 2292 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:38:49.829  用时: 317毫秒  URI: /js/a/employee/tyuangong/listData  总内存: 587.5MB  已用内存: 290.277MB
2021-01-08 21:38:49.886 DEBUG 2292 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 3毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:38:49.886 DEBUG 2292 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:38:49.887 DEBUG 2292 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:38:49.890 DEBUG 2292 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347538251358003200(String), select(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:38:49.83(Timestamp), /js/a/employee/tyuangong/listData(String), POST(String), orgId=&name=&sex=&age=&zhiwei=&shifoubumenlingdao=&loginname=&loginpw=&del=&pageNo=&pageSize=&orderBy=(String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 317(Long)
2021-01-08 21:38:49.895 DEBUG 2292 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:39:03.154 DEBUG 2292 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:39:03.153  URI: /js/a/gen/genTable/createMenu  IP: 127.0.0.1
2021-01-08 21:39:03.158 DEBUG 2292 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:39:03.159 DEBUG 2292 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:39:03.166 DEBUG 2292 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:39:03.167 DEBUG 2292 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:39:03.170 DEBUG 2292 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:39:03.175 DEBUG 2292 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:39:03.180 DEBUG 2292 [nio-8980-exec-3] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:39:03.181 DEBUG 2292 [nio-8980-exec-3] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:39:03.185 DEBUG 2292 [nio-8980-exec-3] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:39:03.275 INFO  2292 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: redirect:/a/sys/menu/form?menuName=employee&menuHref=/employee/tyuangong/list&permission=employee:tyuangong:view,employee:tyuangong:edit <<<<<<<<< /js/a/gen/genTable/createMenu >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#createMenu(GenTable, Model)
2021-01-08 21:39:03.349 DEBUG 2292 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:39:03.328  用时: 175毫秒  URI: /js/a/gen/genTable/createMenu  总内存: 587.5MB  已用内存: 300.604MB
2021-01-08 21:39:03.364 DEBUG 2292 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:39:03.366 DEBUG 2292 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:39:03.369 DEBUG 2292 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:39:03.373 DEBUG 2292 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347538308056604672(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:39:03.348(Timestamp), /js/a/gen/genTable/createMenu(String), GET(String), tableName=t_yuangong(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 175(Long)
2021-01-08 21:39:03.376 DEBUG 2292 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:39:03.384 DEBUG 2292 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:39:03.384  URI: /js/a/sys/menu/form  IP: 127.0.0.1
2021-01-08 21:39:03.633 DEBUG 2292 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} ORDER BY a.tree_sort DESC
2021-01-08 21:39:03.634 DEBUG 2292 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:39:03.645 DEBUG 2292 [nio-8980-exec-9] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? ORDER BY a.tree_sort DESC LIMIT 1
2021-01-08 21:39:03.647 DEBUG 2292 [nio-8980-exec-9] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String)
2021-01-08 21:39:03.656 DEBUG 2292 [nio-8980-exec-9] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 1
2021-01-08 21:39:03.661 DEBUG 2292 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:39:03.662 DEBUG 2292 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:39:03.665 DEBUG 2292 [nio-8980-exec-9] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2021-01-08 21:39:03.666 DEBUG 2292 [nio-8980-exec-9] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2021-01-08 21:39:03.671 DEBUG 2292 [nio-8980-exec-9] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2021-01-08 21:39:03.673 INFO  2292 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/menuForm <<<<<<<<< /js/a/sys/menu/form >>>>>>>>> com.jeesite.modules.sys.web.MenuController#form(Menu, Model)
2021-01-08 21:39:03.857 DEBUG 2292 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:39:03.857 DEBUG 2292 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:39:03.864 DEBUG 2292 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:39:03.866 DEBUG 2292 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_type(String), 1(String), 0(String)
2021-01-08 21:39:03.873 DEBUG 2292 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 21:39:03.961 DEBUG 2292 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:39:03.961 DEBUG 2292 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:39:03.968 DEBUG 2292 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:39:03.969 DEBUG 2292 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_show_hide(String), 1(String), 0(String)
2021-01-08 21:39:03.974 DEBUG 2292 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 21:39:03.981 DEBUG 2292 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:39:03.985 DEBUG 2292 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:39:03.993 DEBUG 2292 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:39:04.013 DEBUG 2292 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_weight(String), 1(String), 0(String)
2021-01-08 21:39:04.029 DEBUG 2292 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 4
2021-01-08 21:39:04.122 DEBUG 2292 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:39:04.051  用时: 667毫秒  URI: /js/a/sys/menu/form  总内存: 587.5MB  已用内存: 345.856MB
2021-01-08 21:39:04.129 DEBUG 2292 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:39:04.129 DEBUG 2292 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:39:04.130 DEBUG 2292 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:39:04.131 DEBUG 2292 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347538311298801664(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 21:39:04.121(Timestamp), /js/a/sys/menu/form(String), GET(String), menuName=employee&menuHref=/employee/tyuangong/list&permission=employee:tyuangong:view,employee:tyuangong:edit(String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 667(Long)
2021-01-08 21:39:04.134 DEBUG 2292 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:39:15.406 DEBUG 2292 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:39:15.406  URI: /js/a/employee/tyuangong/list  IP: 127.0.0.1
2021-01-08 21:39:15.413 INFO  2292 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/employee/tyuangongList <<<<<<<<< /js/a/employee/tyuangong/list >>>>>>>>> com.jeesite.modules.employee.web.TyuangongController#list(Tyuangong, Model)
2021-01-08 21:39:15.432 DEBUG 2292 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:39:15.431  用时: 25毫秒  URI: /js/a/employee/tyuangong/list  总内存: 587.5MB  已用内存: 347.747MB
2021-01-08 21:39:15.440 DEBUG 2292 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 3毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:39:15.440 DEBUG 2292 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:39:15.441 DEBUG 2292 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:39:15.444 DEBUG 2292 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347538358740574208(String), access(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:39:15.432(Timestamp), /js/a/employee/tyuangong/list(String), GET(String), (String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 25(Long)
2021-01-08 21:39:15.445 DEBUG 2292 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:39:15.529 DEBUG 2292 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:39:15.529  URI: /js/a/employee/tyuangong/listData  IP: 127.0.0.1
2021-01-08 21:39:15.586 DEBUG 2292 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.id DESC, a.eid DESC
2021-01-08 21:39:15.586 DEBUG 2292 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:39:15.599 DEBUG 2292 [nio-8980-exec-2] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT count(0) FROM `t_yuangong` a
2021-01-08 21:39:15.599 DEBUG 2292 [nio-8980-exec-2] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:39:15.601 DEBUG 2292 [nio-8980-exec-2] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.id DESC, a.eid DESC LIMIT 20
2021-01-08 21:39:15.602 DEBUG 2292 [nio-8980-exec-2] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:39:15.612 DEBUG 2292 [nio-8980-exec-2] [c.j.m.e.dao.TyuangongDao.findList      ] - <==      Total: 8
2021-01-08 21:39:15.634 DEBUG 2292 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:39:15.630  用时: 101毫秒  URI: /js/a/employee/tyuangong/listData  总内存: 587.5MB  已用内存: 349.591MB
2021-01-08 21:39:15.647 DEBUG 2292 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:39:15.649 DEBUG 2292 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:39:15.649 DEBUG 2292 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:39:15.666 DEBUG 2292 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347538359583629312(String), select(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:39:15.633(Timestamp), /js/a/employee/tyuangong/listData(String), POST(String), orgId=&name=&sex=&age=&zhiwei=&shifoubumenlingdao=&loginname=&loginpw=&del=&pageNo=&pageSize=&orderBy=(String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 101(Long)
2021-01-08 21:39:15.669 DEBUG 2292 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:39:29.464 DEBUG 2292 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:39:29.464  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2021-01-08 21:39:29.473 INFO  2292 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2021-01-08 21:39:29.482 DEBUG 2292 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:39:29.481  用时: 17毫秒  URI: /js/a/gen/genTable/list  总内存: 587.5MB  已用内存: 350.513MB
2021-01-08 21:39:29.489 DEBUG 2292 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:39:29.490 DEBUG 2292 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:39:29.491 DEBUG 2292 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:39:29.493 DEBUG 2292 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347538417670545408(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:39:29.482(Timestamp), /js/a/gen/genTable/list(String), GET(String), parentTableName=t_yuangong(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 17(Long)
2021-01-08 21:39:29.494 DEBUG 2292 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:39:29.587 DEBUG 2292 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:39:29.586  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:39:29.631 DEBUG 2292 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:39:29.632 DEBUG 2292 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:39:29.650 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE a.`parent_table_name` = ?
2021-01-08 21:39:29.650 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:39:29.667 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:39:29.671 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:39:29.677 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 1
2021-01-08 21:39:29.708 DEBUG 2292 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:39:29.701  用时: 115毫秒  URI: /js/a/gen/genTable/listData  总内存: 587.5MB  已用内存: 353.310MB
2021-01-08 21:39:29.726 DEBUG 2292 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 8毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:39:29.727 DEBUG 2292 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:39:29.729 DEBUG 2292 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:39:29.730 DEBUG 2292 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347538418605875200(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:39:29.705(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=t_yuangong&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 115(Long)
2021-01-08 21:39:29.731 DEBUG 2292 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:39:30.881 DEBUG 2292 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:39:30.881  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:39:30.883 DEBUG 2292 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:39:30.884 DEBUG 2292 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:39:30.886 DEBUG 2292 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:39:30.887 DEBUG 2292 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:39:30.889 DEBUG 2292 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:39:30.891 DEBUG 2292 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:39:30.894 DEBUG 2292 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:39:30.894 DEBUG 2292 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:39:30.897 DEBUG 2292 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 4
2021-01-08 21:39:30.927 DEBUG 2292 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:39:30.930 DEBUG 2292 [nio-8980-exec-5] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 21:39:30.930 DEBUG 2292 [nio-8980-exec-5] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_chuqin(String), t_chuqin(String)
2021-01-08 21:39:30.932 DEBUG 2292 [nio-8980-exec-5] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 21:39:30.938 DEBUG 2292 [nio-8980-exec-5] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 21:39:30.939 DEBUG 2292 [nio-8980-exec-5] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:39:30.942 DEBUG 2292 [nio-8980-exec-5] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 4
2021-01-08 21:39:30.946 DEBUG 2292 [nio-8980-exec-5] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 21:39:30.946 DEBUG 2292 [nio-8980-exec-5] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:39:30.948 DEBUG 2292 [nio-8980-exec-5] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 2
2021-01-08 21:39:31.048 DEBUG 2292 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:39:31.049 DEBUG 2292 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will not be managed by Spring
2021-01-08 21:39:31.056 DEBUG 2292 [nio-8980-exec-5] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:39:31.057 DEBUG 2292 [nio-8980-exec-5] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 21:39:31.066 DEBUG 2292 [nio-8980-exec-5] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 21:39:31.069 DEBUG 2292 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:39:31.070 DEBUG 2292 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will not be managed by Spring
2021-01-08 21:39:31.077 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:39:31.078 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 21:39:31.081 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 5
2021-01-08 21:39:31.085 DEBUG 2292 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:39:31.093 DEBUG 2292 [nio-8980-exec-5] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 21:39:31.094 DEBUG 2292 [nio-8980-exec-5] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 21:39:31.099 DEBUG 2292 [nio-8980-exec-5] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 21:39:31.104 INFO  2292 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:39:31.213 DEBUG 2292 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:39:31.205  用时: 324毫秒  URI: /js/a/gen/genTable/form  总内存: 587.5MB  已用内存: 379.182MB
2021-01-08 21:39:31.228 DEBUG 2292 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:39:31.228 DEBUG 2292 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:39:31.229 DEBUG 2292 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:39:31.230 DEBUG 2292 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347538424926691328(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:39:31.212(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=t_chuqin(String), t_chuqin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 324(Long)
2021-01-08 21:39:31.232 DEBUG 2292 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:39:50.078 DEBUG 2292 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:39:50.078  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:39:50.088 DEBUG 2292 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:39:50.089 DEBUG 2292 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:39:50.100 DEBUG 2292 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE a.`parent_table_name` = ?
2021-01-08 21:39:50.101 DEBUG 2292 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:39:50.103 DEBUG 2292 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:39:50.104 DEBUG 2292 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:39:50.105 DEBUG 2292 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 1
2021-01-08 21:39:50.110 DEBUG 2292 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:39:50.109  用时: 31毫秒  URI: /js/a/gen/genTable/listData  总内存: 587.5MB  已用内存: 381.979MB
2021-01-08 21:39:50.113 DEBUG 2292 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:39:50.114 DEBUG 2292 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:39:50.115 DEBUG 2292 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:39:50.116 DEBUG 2292 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347538504186454016(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:39:50.109(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=t_yuangong&tableName_like=&comments=&pageNo=1&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 31(Long)
2021-01-08 21:39:50.118 DEBUG 2292 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:40:07.704 DEBUG 2292 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:40:07.704  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:40:07.707 DEBUG 2292 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:40:07.708 DEBUG 2292 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:40:07.720 DEBUG 2292 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:40:07.720 DEBUG 2292 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:40:07.721 DEBUG 2292 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:40:07.722 DEBUG 2292 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:40:07.726 DEBUG 2292 [nio-8980-exec-3] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:40:07.727 DEBUG 2292 [nio-8980-exec-3] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:40:07.735 DEBUG 2292 [nio-8980-exec-3] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:40:07.744 DEBUG 2292 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:40:07.750 DEBUG 2292 [nio-8980-exec-3] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 21:40:07.750 DEBUG 2292 [nio-8980-exec-3] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_yuangong(String), t_yuangong(String)
2021-01-08 21:40:07.753 DEBUG 2292 [nio-8980-exec-3] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 21:40:07.756 DEBUG 2292 [nio-8980-exec-3] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 21:40:07.757 DEBUG 2292 [nio-8980-exec-3] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:40:07.759 DEBUG 2292 [nio-8980-exec-3] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 11
2021-01-08 21:40:07.763 DEBUG 2292 [nio-8980-exec-3] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 21:40:07.763 DEBUG 2292 [nio-8980-exec-3] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:40:07.766 DEBUG 2292 [nio-8980-exec-3] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 2
2021-01-08 21:40:07.775 DEBUG 2292 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:40:07.775 DEBUG 2292 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will not be managed by Spring
2021-01-08 21:40:07.778 DEBUG 2292 [nio-8980-exec-3] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:40:07.779 DEBUG 2292 [nio-8980-exec-3] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 21:40:07.783 DEBUG 2292 [nio-8980-exec-3] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 21:40:07.784 DEBUG 2292 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:40:07.784 DEBUG 2292 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will not be managed by Spring
2021-01-08 21:40:07.787 DEBUG 2292 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:40:07.788 DEBUG 2292 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 21:40:07.791 DEBUG 2292 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 5
2021-01-08 21:40:07.793 DEBUG 2292 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:40:07.796 DEBUG 2292 [nio-8980-exec-3] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 21:40:07.796 DEBUG 2292 [nio-8980-exec-3] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 21:40:07.798 DEBUG 2292 [nio-8980-exec-3] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 21:40:07.800 INFO  2292 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:40:07.806 DEBUG 2292 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:40:07.807 DEBUG 2292 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:40:07.810 DEBUG 2292 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:40:07.810 DEBUG 2292 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_yes_no(String), 1(String), 0(String)
2021-01-08 21:40:07.812 DEBUG 2292 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 21:40:07.873 DEBUG 2292 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:40:07.864  用时: 160毫秒  URI: /js/a/gen/genTable/form  总内存: 587.5MB  已用内存: 392.153MB
2021-01-08 21:40:07.885 DEBUG 2292 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 3毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:40:07.886 DEBUG 2292 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:40:07.887 DEBUG 2292 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:40:07.888 DEBUG 2292 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347538578685681664(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:40:07.871(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=t_yuangong(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 160(Long)
2021-01-08 21:40:07.890 DEBUG 2292 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:40:27.420 DEBUG 2292 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:40:27.419  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 21:40:27.422 DEBUG 2292 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:40:27.422 DEBUG 2292 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:40:27.426 DEBUG 2292 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:40:27.428 DEBUG 2292 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:40:27.431 DEBUG 2292 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:40:27.432 DEBUG 2292 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:40:27.436 DEBUG 2292 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:40:27.436 DEBUG 2292 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:40:27.443 DEBUG 2292 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:40:27.849 DEBUG 2292 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 3毫秒: UPDATE `js_gen_table` SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2021-01-08 21:40:27.850 DEBUG 2292 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:40:27.851 DEBUG 2292 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE `js_gen_table` SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ?
2021-01-08 21:40:27.852 DEBUG 2292 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: Tyuangong(String), t_yuangong(String), (String), eid(String), (String), crud(String), com.jeesite.modules(String), employee(String), (String), employee(String), employee(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 21:40:27.847(Timestamp), (String), t_yuangong(String)
2021-01-08 21:40:27.854 DEBUG 2292 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2021-01-08 21:40:27.856 DEBUG 2292 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:40:27.857 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:40:27.858 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), id(String), 10(Integer), int(String), id(String), id(String), id(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582120304640(String)
2021-01-08 21:40:27.860 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:40:27.862 DEBUG 2292 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:40:27.862 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:40:27.863 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), org_id(String), 20(Integer), int(String), 部门(String), 部门(String), orgId(String), Long(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"digits","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582204190720(String)
2021-01-08 21:40:27.865 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:40:27.867 DEBUG 2292 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:40:27.868 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:40:27.869 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), eid(String), 30(Integer), varchar(55)(String), 工号(String), 工号(String), eid(String), String(String), 1(String), 0(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582275493888(String)
2021-01-08 21:40:27.870 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:40:27.873 DEBUG 2292 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:40:27.876 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:40:27.879 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), name(String), 40(Integer), varchar(50)(String), 姓名(String), 姓名(String), name(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), LIKE(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582569095168(String)
2021-01-08 21:40:27.881 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:40:27.882 DEBUG 2292 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:40:27.883 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:40:27.884 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), sex(String), 50(Integer), varchar(50)(String), 性别(String), 性别(String), sex(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582594260992(String)
2021-01-08 21:40:27.886 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:40:27.888 DEBUG 2292 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:40:27.889 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:40:27.890 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), age(String), 60(Integer), varchar(50)(String), 年龄(String), 年龄(String), age(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582611038208(String)
2021-01-08 21:40:27.891 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:40:27.892 DEBUG 2292 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:40:27.895 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:40:27.896 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), zhiwei(String), 70(Integer), varchar(50)(String), 职位(String), 职位(String), zhiwei(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582627815424(String)
2021-01-08 21:40:27.897 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:40:27.898 DEBUG 2292 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:40:27.900 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:40:27.901 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), shifoubumenlingdao(String), 80(Integer), varchar(50)(String), 是否为领导(String), 是否为领导(String), shifoubumenlingdao(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582661369856(String)
2021-01-08 21:40:27.902 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:40:27.903 DEBUG 2292 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:40:27.910 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:40:27.911 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), loginname(String), 90(Integer), varchar(50)(String), 账户名(String), 账户名(String), loginname(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582682341376(String)
2021-01-08 21:40:27.913 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:40:27.914 DEBUG 2292 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:40:27.916 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:40:27.917 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), loginpw(String), 100(Integer), varchar(50)(String), 密码(String), 密码(String), loginpw(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582703312896(String)
2021-01-08 21:40:27.918 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:40:27.919 DEBUG 2292 [nio-8980-exec-5] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:40:27.920 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:40:27.921 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), del(String), 110(Integer), varchar(50)(String), del(String), del(String), del(String), String(String), (String), 1(String), (String), (String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582732673024(String)
2021-01-08 21:40:27.922 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:40:27.969 DEBUG 2292 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:40:27.969 DEBUG 2292 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:40:27.974 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC
2021-01-08 21:40:27.975 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:40:27.976 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 1
2021-01-08 21:40:27.978 DEBUG 2292 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:40:27.983 DEBUG 2292 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:40:27.983 DEBUG 2292 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:40:27.988 DEBUG 2292 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 4
2021-01-08 21:40:28.002 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TchuqinDao.xml
2021-01-08 21:40:28.004 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.employee.dao.TchuqinDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tchuqin">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 21:40:28.008 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TchuqinDao.xml
2021-01-08 21:40:28.009 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tchuqin.java
2021-01-08 21:40:28.129 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.entity;

import org.hibernate.validator.constraints.Length;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * employeeEntity
 * @author LX
 * @version 2021-01-08
 */
@Table(name="t_chuqin", alias="a", columns={
		@Column(name="id", attrName="id", label="id", isPK=true),
		@Column(name="yuefen", attrName="yuefen", label="yuefen"),
		@Column(name="tianshu", attrName="tianshu", label="tianshu"),
		@Column(name="e_id", attrName="eid.id", label="e_id", isPK=true),
	}, orderBy="a.id ASC, a.e_id ASC"
)
public class Tchuqin extends DataEntity<Tchuqin> {
	
	private static final long serialVersionUID = 1L;
	private String yuefen;		// yuefen
	private Long tianshu;		// tianshu
	private Tyuangong eid;		// e_id 父类
	
	public Tchuqin() {
		this(null, null);
	}


	public Tchuqin(Tyuangong eid){
		this.eid = eid;
	}
	
	@Length(min=0, max=55, message="yuefen长度不能超过 55 个字符")
	public String getYuefen() {
		return yuefen;
	}

	public void setYuefen(String yuefen) {
		this.yuefen = yuefen;
	}
	
	public Long getTianshu() {
		return tianshu;
	}

	public void setTianshu(Long tianshu) {
		this.tianshu = tianshu;
	}
	
	public Tyuangong getEid() {
		return eid;
	}

	public void setEid(Tyuangong eid) {
		this.eid = eid;
	}
	
}
2021-01-08 21:40:28.135 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tchuqin.java
2021-01-08 21:40:28.136 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TchuqinDao.java
2021-01-08 21:40:28.138 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.employee.entity.Tchuqin;

/**
 * employeeDAO接口
 * @author LX
 * @version 2021-01-08
 */
@MyBatisDao
public interface TchuqinDao extends CrudDao<Tchuqin> {
	
}
2021-01-08 21:40:28.140 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TchuqinDao.java
2021-01-08 21:40:28.141 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TyuangongDao.xml
2021-01-08 21:40:28.141 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.employee.dao.TyuangongDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tyuangong">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 21:40:28.143 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TyuangongDao.xml
2021-01-08 21:40:28.144 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tyuangong.java
2021-01-08 21:40:28.151 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.entity;

import org.hibernate.validator.constraints.Length;
import java.util.List;
import com.jeesite.common.collect.ListUtils;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * employeeEntity
 * @author LX
 * @version 2021-01-08
 */
@Table(name="t_yuangong", alias="a", columns={
		@Column(name="id", attrName="id", label="id", isPK=true),
		@Column(name="org_id", attrName="orgId", label="部门"),
		@Column(name="eid", attrName="eid", label="工号", isPK=true),
		@Column(name="name", attrName="name", label="姓名", queryType=QueryType.LIKE),
		@Column(name="sex", attrName="sex", label="性别"),
		@Column(name="age", attrName="age", label="年龄"),
		@Column(name="zhiwei", attrName="zhiwei", label="职位"),
		@Column(name="shifoubumenlingdao", attrName="shifoubumenlingdao", label="是否为领导"),
		@Column(name="loginname", attrName="loginname", label="账户名"),
		@Column(name="loginpw", attrName="loginpw", label="密码"),
		@Column(name="del", attrName="del", label="del", isInsert=false, isUpdate=false, isQuery=false),
	}, orderBy="a.id DESC, a.eid DESC"
)
public class Tyuangong extends DataEntity<Tyuangong> {
	
	private static final long serialVersionUID = 1L;
	private Long orgId;		// 部门
	private String eid;		// 工号
	private String name;		// 姓名
	private String sex;		// 性别
	private String age;		// 年龄
	private String zhiwei;		// 职位
	private String shifoubumenlingdao;		// 是否为领导
	private String loginname;		// 账户名
	private String loginpw;		// 密码
	private String del;		// del
	private List<Tchuqin> tchuqinList = ListUtils.newArrayList();		// 子表列表
	
	public Tyuangong() {
		this(null, null);
	}

	public Tyuangong(Long id, String eid){
		this.id = id;
		this.eid = eid;
	}
	
	public Long getOrgId() {
		return orgId;
	}

	public void setOrgId(Long orgId) {
		this.orgId = orgId;
	}
	
	public String getEid() {
		return eid;
	}

	public void setEid(String eid) {
		this.eid = eid;
	}
	
	@Length(min=0, max=50, message="姓名长度不能超过 50 个字符")
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}
	
	@Length(min=0, max=50, message="性别长度不能超过 50 个字符")
	public String getSex() {
		return sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}
	
	@Length(min=0, max=50, message="年龄长度不能超过 50 个字符")
	public String getAge() {
		return age;
	}

	public void setAge(String age) {
		this.age = age;
	}
	
	@Length(min=0, max=50, message="职位长度不能超过 50 个字符")
	public String getZhiwei() {
		return zhiwei;
	}

	public void setZhiwei(String zhiwei) {
		this.zhiwei = zhiwei;
	}
	
	@Length(min=0, max=50, message="是否为领导长度不能超过 50 个字符")
	public String getShifoubumenlingdao() {
		return shifoubumenlingdao;
	}

	public void setShifoubumenlingdao(String shifoubumenlingdao) {
		this.shifoubumenlingdao = shifoubumenlingdao;
	}
	
	@Length(min=0, max=50, message="账户名长度不能超过 50 个字符")
	public String getLoginname() {
		return loginname;
	}

	public void setLoginname(String loginname) {
		this.loginname = loginname;
	}
	
	@Length(min=0, max=50, message="密码长度不能超过 50 个字符")
	public String getLoginpw() {
		return loginpw;
	}

	public void setLoginpw(String loginpw) {
		this.loginpw = loginpw;
	}
	
	@Length(min=0, max=50, message="del长度不能超过 50 个字符")
	public String getDel() {
		return del;
	}

	public void setDel(String del) {
		this.del = del;
	}
	
	public List<Tchuqin> getTchuqinList() {
		return tchuqinList;
	}

	public void setTchuqinList(List<Tchuqin> tchuqinList) {
		this.tchuqinList = tchuqinList;
	}
	
}
2021-01-08 21:40:28.154 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tyuangong.java
2021-01-08 21:40:28.155 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TyuangongDao.java
2021-01-08 21:40:28.155 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.employee.entity.Tyuangong;

/**
 * employeeDAO接口
 * @author LX
 * @version 2021-01-08
 */
@MyBatisDao
public interface TyuangongDao extends CrudDao<Tyuangong> {
	
}
2021-01-08 21:40:28.156 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TyuangongDao.java
2021-01-08 21:40:28.157 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\service\TyuangongService.java
2021-01-08 21:40:28.180 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.jeesite.common.entity.Page;
import com.jeesite.common.service.CrudService;
import com.jeesite.modules.employee.entity.Tyuangong;
import com.jeesite.modules.employee.dao.TyuangongDao;
import com.jeesite.modules.employee.entity.Tchuqin;
import com.jeesite.modules.employee.dao.TchuqinDao;

/**
 * employeeService
 * @author LX
 * @version 2021-01-08
 */
@Service
@Transactional(readOnly=true)
public class TyuangongService extends CrudService<TyuangongDao, Tyuangong> {
	
	@Autowired
	private TchuqinDao tchuqinDao;
	
	/**
	 * 获取单条数据
	 * @param tyuangong
	 * @return
	 */
	@Override
	public Tyuangong get(Tyuangong tyuangong) {
		Tyuangong entity = super.get(tyuangong);
		if (entity != null){
			Tchuqin tchuqin = new Tchuqin(entity);
			tchuqin.setStatus(Tchuqin.STATUS_NORMAL);
			entity.setTchuqinList(tchuqinDao.findList(tchuqin));
		}
		return entity;
	}
	
	/**
	 * 查询分页数据
	 * @param tyuangong 查询条件
	 * @param tyuangong.page 分页对象
	 * @return
	 */
	@Override
	public Page<Tyuangong> findPage(Tyuangong tyuangong) {
		return super.findPage(tyuangong);
	}
	
	/**
	 * 保存数据（插入或更新）
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void save(Tyuangong tyuangong) {
		super.save(tyuangong);
		// 保存 Tyuangong子表
		for (Tchuqin tchuqin : tyuangong.getTchuqinList()){
			if (!Tchuqin.STATUS_DELETE.equals(tchuqin.getStatus())){
				tchuqin.setEid(tyuangong);
				if (tchuqin.getIsNewRecord()){
					tchuqinDao.insert(tchuqin);
				}else{
					tchuqinDao.update(tchuqin);
				}
			}else{
				tchuqinDao.delete(tchuqin);
			}
		}
	}
	
	/**
	 * 更新状态
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void updateStatus(Tyuangong tyuangong) {
		super.updateStatus(tyuangong);
	}
	
	/**
	 * 删除数据
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void delete(Tyuangong tyuangong) {
		super.delete(tyuangong);
		Tchuqin tchuqin = new Tchuqin();
		tchuqin.setEid(tyuangong);
		tchuqinDao.deleteByEntity(tchuqin);
	}
	
}
2021-01-08 21:40:28.182 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\service\TyuangongService.java
2021-01-08 21:40:28.183 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\web\TyuangongController.java
2021-01-08 21:40:28.194 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.jeesite.common.config.Global;
import com.jeesite.common.entity.Page;
import com.jeesite.common.web.BaseController;
import com.jeesite.modules.employee.entity.Tyuangong;
import com.jeesite.modules.employee.service.TyuangongService;

/**
 * employeeController
 * @author LX
 * @version 2021-01-08
 */
@Controller
@RequestMapping(value = "${adminPath}/employee/tyuangong")
public class TyuangongController extends BaseController {

	@Autowired
	private TyuangongService tyuangongService;
	
	/**
	 * 获取数据
	 */
	@ModelAttribute
	public Tyuangong get(Long id, String eid, boolean isNewRecord) {
		Tyuangong tyuangong = new Tyuangong();
		tyuangong.setId(id);
		tyuangong.setEid(eid);
		tyuangong.setIsNewRecord(isNewRecord);
		return tyuangongService.getAndValid(tyuangong);
	}
	
	/**
	 * 查询列表
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = {"list", ""})
	public String list(Tyuangong tyuangong, Model model) {
		model.addAttribute("tyuangong", tyuangong);
		return "modules/employee/tyuangongList";
	}
	
	/**
	 * 查询列表数据
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = "listData")
	@ResponseBody
	public Page<Tyuangong> listData(Tyuangong tyuangong, HttpServletRequest request, HttpServletResponse response) {
		tyuangong.setPage(new Page<>(request, response));
		Page<Tyuangong> page = tyuangongService.findPage(tyuangong);
		return page;
	}

	/**
	 * 查看编辑表单
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = "form")
	public String form(Tyuangong tyuangong, Model model) {
		model.addAttribute("tyuangong", tyuangong);
		return "modules/employee/tyuangongForm";
	}

	/**
	 * 保存数据
	 */
	@RequiresPermissions("employee:tyuangong:edit")
	@PostMapping(value = "save")
	@ResponseBody
	public String save(@Validated Tyuangong tyuangong) {
		tyuangongService.save(tyuangong);
		return renderResult(Global.TRUE, text("保存employee成功！"));
	}
	
	/**
	 * 删除数据
	 */
	@RequiresPermissions("employee:tyuangong:edit")
	@RequestMapping(value = "delete")
	@ResponseBody
	public String delete(Tyuangong tyuangong) {
		tyuangongService.delete(tyuangong);
		return renderResult(Global.TRUE, text("删除employee成功！"));
	}
	
}
2021-01-08 21:40:28.197 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\web\TyuangongController.java
2021-01-08 21:40:28.197 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongList.html
2021-01-08 21:40:28.212 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: 'employee管理', libs: ['dataGrid']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header">
			<div class="box-title">
				<i class="fa icon-notebook"></i> ${text('employee管理')}
			</div>
			<div class="box-tools pull-right">
				<a href="#" class="btn btn-default" id="btnSearch" title="${text('查询')}"><i class="fa fa-filter"></i> ${text('查询')}</a>
				<% if(hasPermi('employee:tyuangong:edit')){ %>
					<a href="${ctx}/employee/tyuangong/form" class="btn btn-default btnTool" title="${text('新增employee')}"><i class="fa fa-plus"></i> ${text('新增')}</a>
				<% } %>
				<a href="#" class="btn btn-default" id="btnSetting" title="${text('设置')}"><i class="fa fa-navicon"></i></a>
			</div>
		</div>
		<div class="box-body">
			<#form:form id="searchForm" model="${tyuangong}" action="${ctx}/employee/tyuangong/listData" method="post" class="form-inline hide"
					data-page-no="${parameter.pageNo}" data-page-size="${parameter.pageSize}" data-order-by="${parameter.orderBy}">
				<div class="form-group">
					<label class="control-label">${text('部门')}：</label>
					<div class="control-inline">
						<#form:input path="orgId" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('工号')}：</label>
				</div>
				<div class="form-group">
					<label class="control-label">${text('姓名')}：</label>
					<div class="control-inline">
						<#form:input path="name" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('性别')}：</label>
					<div class="control-inline">
						<#form:input path="sex" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('年龄')}：</label>
					<div class="control-inline">
						<#form:input path="age" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('职位')}：</label>
					<div class="control-inline">
						<#form:input path="zhiwei" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('是否为领导')}：</label>
					<div class="control-inline">
						<#form:input path="shifoubumenlingdao" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('账户名')}：</label>
					<div class="control-inline">
						<#form:input path="loginname" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('密码')}：</label>
					<div class="control-inline">
						<#form:input path="loginpw" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<button type="submit" class="btn btn-primary btn-sm">${text('查询')}</button>
					<button type="reset" class="btn btn-default btn-sm">${text('重置')}</button>
				</div>
			</#form:form>
			<table id="dataGrid"></table>
			<div id="dataGridPage"></div>
		</div>
	</div>
</div>
<% } %>
<script>
// 初始化DataGrid对象
$('#dataGrid').dataGrid({
	searchForm: $("#searchForm"),
	columnModel: [
		{header:'${text("部门")}', name:'orgId', index:'a.org_id', width:150, align:"left", frozen:true, formatter: function(val, obj, row, act){
			return '<a href="${ctx}/employee/tyuangong/form?id='+row.id+'&eid='+row.eid+'" class="btnList" data-title="${text("编辑employee")}">'+(val||row.id)+'</a>';
		}},
		{header:'${text("工号")}', name:'eid', index:'a.eid', width:150, align:"left"},
		{header:'${text("姓名")}', name:'name', index:'a.name', width:150, align:"left"},
		{header:'${text("性别")}', name:'sex', index:'a.sex', width:150, align:"left"},
		{header:'${text("年龄")}', name:'age', index:'a.age', width:150, align:"left"},
		{header:'${text("职位")}', name:'zhiwei', index:'a.zhiwei', width:150, align:"left"},
		{header:'${text("是否为领导")}', name:'shifoubumenlingdao', index:'a.shifoubumenlingdao', width:150, align:"left"},
		{header:'${text("账户名")}', name:'loginname', index:'a.loginname', width:150, align:"left"},
		{header:'${text("密码")}', name:'loginpw', index:'a.loginpw', width:150, align:"left"},
		{header:'${text("操作")}', name:'actions', width:120, sortable:false, title:false, formatter: function(val, obj, row, act){
			var actions = [];
			<% if(hasPermi('employee:tyuangong:edit')){ %>
				actions.push('<a href="${ctx}/employee/tyuangong/form?id='+row.id+'&eid='+row.eid+'" class="btnList" title="${text("编辑employee")}"><i class="fa fa-pencil"></i></a>&nbsp;');
				actions.push('<a href="${ctx}/employee/tyuangong/delete?id='+row.id+'&eid='+row.eid+'" class="btnList" title="${text("删除employee")}" data-confirm="${text("确认要删除该employee吗？")}"><i class="fa fa-trash-o"></i></a>&nbsp;');
			<% } %>
			return actions.join('');
		}}
	],
	// 加载成功后执行事件
	ajaxSuccess: function(data){
		
	}
});
</script>
2021-01-08 21:40:28.214 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongList.html
2021-01-08 21:40:28.214 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongForm.html
2021-01-08 21:40:28.239 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: 'employee管理', libs: ['validate','dataGrid']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header with-border">
			<div class="box-title">
				<i class="fa icon-note"></i> ${text(tyuangong.isNewRecord ? '新增employee' : '编辑employee')}
			</div>
			<div class="box-tools pull-right">
				<button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
			</div>
		</div>
		<#form:form id="inputForm" model="${tyuangong}" action="${ctx}/employee/tyuangong/save" method="post" class="form-horizontal">
			<div class="box-body">
				<div class="form-unit">${text('基本信息')}</div>
				<#form:hidden path="id"/>
				<div class="row">
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('部门')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="orgId" class="form-control digits"/>
							</div>
						</div>
					</div>
				<#form:hidden path="eid"/>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('姓名')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="name" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('性别')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="sex" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('年龄')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="age" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('职位')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="zhiwei" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('是否为领导')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="shifoubumenlingdao" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('账户名')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="loginname" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('密码')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="loginpw" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
				</div>
				<h4 class="form-unit">${text('t_chuqin')}</h4>
				<div class="ml10 mr10">
					<table id="tchuqinDataGrid"></table>
					<% if (hasPermi('employee:tyuangong:edit')){ %>
						<a href="#" id="tchuqinDataGridAddRowBtn" class="btn btn-primary btn-sm mt10 mb10"><i class="fa fa-plus"></i> ${text('增行')}</a>
					<% } %>
				</div>
			</div>
			<div class="box-footer">
				<div class="row">
					<div class="col-sm-offset-2 col-sm-10">
						<% if (hasPermi('employee:tyuangong:edit')){ %>
							<button type="submit" class="btn btn-sm btn-primary" id="btnSubmit"><i class="fa fa-check"></i> ${text('保 存')}</button>&nbsp;
						<% } %>
						<button type="button" class="btn btn-sm btn-default" id="btnCancel" onclick="js.closeCurrentTabPage()"><i class="fa fa-reply-all"></i> ${text('关 闭')}</button>
					</div>
				</div>
			</div>
		</#form:form>
	</div>
</div>
<% } %>
<script>
//初始化t_chuqinDataGrid对象
$("#tchuqinDataGrid").dataGrid({

	data: ${toJson(tyuangong.tchuqinList)},
	datatype: "local", // 设置本地数据
	autoGridHeight: function(){return 'auto'}, // 设置自动高度
	
	// 设置数据表格列
	columnModel: [
		{header:'状态', name:'status', editable:true, hidden:true},
		{header:'主键', name:'id', editable:true, hidden:true},
		{header:'${text("yuefen")}', name:'yuefen', width:150, editable:true, edittype:'text', editoptions:{'maxlength':'55', 'class':'form-control'}},
		{header:'${text("tianshu")}', name:'tianshu', width:150, editable:true, edittype:'text', editoptions:{'class':'form-control digits'}},
		{header:'${text("e_id")}', name:'eid.id', editable:true, hidden:true},
		{header:'${text("操作")}', name:'actions', width:80, sortable:false, fixed:true, formatter: function(val, obj, row, act){
			var actions = [];
			if (val == 'new'){
				actions.push('<a href="#" onclick="js.confirm(\'${text("你确认要删除这条数据吗？")}\', function(){$(\'#tchuqinDataGrid\').dataGrid(\'delRowData\',\''+obj.rowId+'\')});return false;"><i class="fa fa-trash-o"></i></a>&nbsp;');
			}else{
				actions.push('<a href="#" onclick="js.confirm(\'${text("你确认要删除这条数据吗？")}\', function(){$(\'#tchuqinDataGrid\').dataGrid(\'setRowData\',\''+obj.rowId+'\',null,{display:\'none\'});$(\'#'+obj.rowId+'_status\').val(\''+Global.STATUS_DELETE+'\');});return false;"><i class="fa fa-trash-o"></i></a>&nbsp;');
			}
			return actions.join('');
		}, editoptions: {defaultValue: 'new'}}
	],
	
	// 编辑表格参数
	editGrid: true,				// 是否是编辑表格
	editGridInitRowNum: 1,		// 编辑表格的初始化新增行数
	editGridAddRowBtn: $('#tchuqinDataGridAddRowBtn'),	// 子表增行按钮
	editGridAddRowInitData: {id: '', status: Global.STATUS_NORMAL},	// 新增行的时候初始化的数据
	
	// 编辑表格的提交数据参数
	editGridInputFormListName: 'tchuqinList', // 提交的数据列表名
	editGridInputFormListAttrs: 'status,id,yuefen,tianshu,eid.id,', // 提交数据列表的属性字段
	
	// 加载成功后执行事件
	ajaxSuccess: function(data){
		
	}
});
</script>
<script>
$("#inputForm").validate({
	submitHandler: function(form){
		js.ajaxSubmitForm($(form), function(data){
			js.showMessage(data.message);
			if(data.result == Global.TRUE){
				js.closeCurrentTabPage(function(contentWindow){
					contentWindow.page();
				});
			}
		}, "json");
    }
});
</script>
2021-01-08 21:40:28.241 DEBUG 2292 [nio-8980-exec-5] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongForm.html
2021-01-08 21:40:28.253 DEBUG 2292 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:40:28.253 DEBUG 2292 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:40:28.254 DEBUG 2292 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:40:28.244  用时: 825毫秒  URI: /js/a/gen/genTable/save  总内存: 587.5MB  已用内存: 454.905MB
2021-01-08 21:40:28.255 DEBUG 2292 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:40:28.256 DEBUG 2292 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347538664161402880(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:40:28.25(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=t_yuangong&comments=t_yuangong&className=Tyuangong&functionAuthor=LX&parentTableName=&parentTableFkName=eid&remarks=&columnList[0].id=1347532582120304640&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=id&columnList[0].columnType=int&columnList[0].attrType=Long&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=6/4/8&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1347532582204190720&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=org_id&columnList[1].comments=部门&columnList[1].columnType=int&columnList[1].attrType=Long&columnList[1].fullAttrName=orgId&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=6/4/8&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[1].optionMap['fieldValid']=digits&columnList[2].id=1347532582275493888&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=eid&columnList[2].comments=工号&columnList[2].columnType=varchar(55)&columnList[2].attrType=String&columnList[2].fullAttrName=eid&!columnList[2].isPk=&columnList[2].isPk=1&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&columnList[2].isUpdate=1&!columnList[2].isList=&columnList[2].isList=1&!columnList[2].isQuery=&columnList[2].isQuery=1&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].isRequired=1&columnList[2].showType=hidden&columnList[2].optionMap['gridRowCol']=6/4/8&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[2].optionMap['fieldValid']=abc&columnList[3].id=1347532582569095168&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=name&columnList[3].comments=姓名&columnList[3].columnType=varchar(50)&columnList[3].attrType=String&columnList[3].fullAttrName=name&!columnList[3].isPk=&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&columnList[3].isUpdate=1&!columnList[3].isList=&columnList[3].isList=1&!columnList[3].isQuery=&columnList[3].isQuery=1&columnList[3].queryType=LIKE&!columnList[3].isEdit=&columnList[3].isEdit=1&!columnList[3].isRequired=&columnList[3].showType=input&columnList[3].optionMap['gridRowCol']=6/4/8&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[4].id=1347532582594260992&columnList[4].status=&columnList[4].columnSort=50&columnList[4].columnName=sex&columnList[4].comments=性别&columnList[4].columnType=varchar(50)&columnList[4].attrType=String&columnList[4].fullAttrName=sex&!columnList[4].isPk=&!columnList[4].isInsert=&columnList[4].isInsert=1&!columnList[4].isUpdate=&columnList[4].isUpdate=1&!columnList[4].isList=&columnList[4].isList=1&!columnList[4].isQuery=&columnList[4].isQuery=1&columnList[4].queryType=EQ&!columnList[4].isEdit=&columnList[4].isEdit=1&!columnList[4].isRequired=&columnList[4].showType=input&columnList[4].optionMap['gridRowCol']=6/4/8&!columnList[4].optionMap['isNewLine']=&columnList[4].optionMap['dictName']=&columnList[4].optionMap['dictType']=&!columnList[4].optionMap['fieldValid']=&columnList[5].id=1347532582611038208&columnList[5].status=&columnList[5].columnSort=60&columnList[5].columnName=age&columnList[5].comments=年龄&columnList[5].columnType=varchar(50)&columnList[5].attrType=String&columnList[5].fullAttrName=age&!columnList[5].isPk=&!columnList[5].isInsert=&columnList[5].isInsert=1&!columnList[5].isUpdate=&columnList[5].isUpdate=1&!columnList[5].isList=&columnList[5].isList=1&!columnList[5].isQuery=&columnList[5].isQuery=1&columnList[5].queryType=EQ&!columnList[5].isEdit=&columnList[5].isEdit=1&!columnList[5].isRequired=&columnList[5].showType=input&columnList[5].optionMap['gridRowCol']=6/4/8&!columnList[5].optionMap['isNewLine']=&columnList[5].optionMap['dictName']=&columnList[5].optionMap['dictType']=&!columnList[5].optionMap['fieldValid']=&columnList[6].id=1347532582627815424&columnList[6].status=&columnList[6].columnSort=70&columnList[6].columnName=zhiwei&columnList[6].comments=职位&columnList[6].columnType=varchar(50)&columnList[6].attrType=String&columnList[6].fullAttrName=zhiwei&!columnList[6].isPk=&!columnList[6].isInsert=&columnList[6].isInsert=1&!columnList[6].isUpdate=&columnList[6].isUpdate=1&!columnList[6].isList=&columnList[6].isList=1&!columnList[6].isQuery=&columnList[6].isQuery=1&columnList[6].queryType=EQ&!columnList[6].isEdit=&columnList[6].isEdit=1&!columnList[6].isRequired=&columnList[6].showType=input&columnList[6].optionMap['gridRowCol']=6/4/8&!columnList[6].optionMap['isNewLine']=&columnList[6].optionMap['dictName']=&columnList[6].optionMap['dictType']=&!columnList[6].optionMap['fieldValid']=&columnList[7].id=1347532582661369856&columnList[7].status=&columnList[7].columnSort=80&columnList[7].columnName=shifoubumenlingdao&columnList[7].comments=是否为领导&columnList[7].columnType=varchar(50)&columnList[7].attrType=String&columnList[7].fullAttrName=shifoubumenlingdao&!columnList[7].isPk=&!columnList[7].isInsert=&columnList[7].isInsert=1&!columnList[7].isUpdate=&columnList[7].isUpdate=1&!columnList[7].isList=&columnList[7].isList=1&!columnList[7].isQuery=&columnList[7].isQuery=1&columnList[7].queryType=EQ&!columnList[7].isEdit=&columnList[7].isEdit=1&!columnList[7].isRequired=&columnList[7].showType=input&columnList[7].optionMap['gridRowCol']=6/4/8&!columnList[7].optionMap['isNewLine']=&columnList[7].optionMap['dictName']=&columnList[7].optionMap['dictType']=&!columnList[7].optionMap['fieldValid']=&columnList[8].id=1347532582682341376&columnList[8].status=&columnList[8].columnSort=90&columnList[8].columnName=loginname&columnList[8].comments=账户名&columnList[8].columnType=varchar(50)&columnList[8].attrType=String&columnList[8].fullAttrName=loginname&!columnList[8].isPk=&!columnList[8].isInsert=&columnList[8].isInsert=1&!columnList[8].isUpdate=&columnList[8].isUpdate=1&!columnList[8].isList=&columnList[8].isList=1&!columnList[8].isQuery=&columnList[8].isQuery=1&columnList[8].queryType=EQ&!columnList[8].isEdit=&columnList[8].isEdit=1&!columnList[8].isRequired=&columnList[8].showType=input&columnList[8].optionMap['gridRowCol']=6/4/8&!columnList[8].optionMap['isNewLine']=&columnList[8].optionMap['dictName']=&columnList[8].optionMap['dictType']=&!columnList[8].optionMap['fieldValid']=&columnList[9].id=1347532582703312896&columnList[9].status=&columnList[9].columnSort=100&columnList[9].columnName=loginpw&columnList[9].comments=密码&columnList[9].columnType=varchar(50)&columnList[9].attrType=String&columnList[9].fullAttrName=loginpw&!columnList[9].isPk=&!columnList[9].isInsert=&columnList[9].isInsert=1&!columnList[9].isUpdate=&columnList[9].isUpdate=1&!columnList[9].isList=&columnList[9].isList=1&!columnList[9].isQuery=&columnList[9].isQuery=1&columnList[9].queryType=EQ&!columnList[9].isEdit=&columnList[9].isEdit=1&!columnList[9].isRequired=&columnList[9].showType=input&columnList[9].optionMap['gridRowCol']=6/4/8&!columnList[9].optionMap['isNewLine']=&columnList[9].optionMap['dictName']=&columnList[9].optionMap['dictType']=&!columnList[9].optionMap['fieldValid']=&columnList[10].id=1347532582732673024&columnList[10].status=&columnList[10].columnSort=110&columnList[10].columnName=del&columnList[10].comments=del&columnList[10].columnType=varchar(50)&columnList[10].attrType=String&columnList[10].fullAttrName=del&!columnList[10].isPk=&!columnList[10].isInsert=&!columnList[10].isUpdate=&!columnList[10].isList=&!columnList[10].isQuery=&columnList[10].queryType=EQ&!columnList[10].isEdit=&!columnList[10].isRequired=&columnList[10].showType=input&columnList[10].optionMap['gridRowCol']=6/4/8&!columnList[10].optionMap['isNewLine']=&columnList[10].optionMap['dictName']=&columnList[10].optionMap['dictType']=&!columnList[10].optionMap['fieldValid']=&tplCategory=crud&packageName=com.jeesite.modules&moduleName=employee&subModuleName=&functionName=employee&functionNameSimple=employee&genBaseDir=C:\Users\Lx\work2\web&!optionMap['isHaveDisableEnable']=&optionMap['isHaveDisableEnable']=0&!optionMap['isHaveDelete']=&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&!optionMap['isImageUpload']=&optionMap['isImageUpload']=0&!optionMap['isFileUpload']=&optionMap['isFileUpload']=0&!optionMap['isBpmForm']=&optionMap['isBpmForm']=0&optionMap['bpmFormKey']=&genFlag=2&replaceFile=1&!replaceFile=0(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 825(Long)
2021-01-08 21:40:28.270 DEBUG 2292 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:40:28.290 DEBUG 2292 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:40:28.290  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:40:28.299 DEBUG 2292 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:40:28.299 DEBUG 2292 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:40:28.312 DEBUG 2292 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:40:28.312 DEBUG 2292 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:40:28.314 DEBUG 2292 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:40:28.315 DEBUG 2292 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:40:28.317 DEBUG 2292 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:40:28.329 DEBUG 2292 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:40:28.327  用时: 37毫秒  URI: /js/a/gen/genTable/listData  总内存: 587.5MB  已用内存: 457.671MB
2021-01-08 21:40:28.335 DEBUG 2292 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:40:28.335 DEBUG 2292 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:40:28.336 DEBUG 2292 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:40:28.339 DEBUG 2292 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347538664488558592(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:40:28.328(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 37(Long)
2021-01-08 21:40:28.340 DEBUG 2292 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:40:30.758 DEBUG 2292 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:40:30.757  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:40:30.759 DEBUG 2292 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:40:30.760 DEBUG 2292 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:40:30.764 DEBUG 2292 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:40:30.765 DEBUG 2292 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:40:30.768 DEBUG 2292 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:40:30.772 DEBUG 2292 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:40:30.777 DEBUG 2292 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:40:30.777 DEBUG 2292 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:40:30.784 DEBUG 2292 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:40:30.796 DEBUG 2292 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:40:30.800 DEBUG 2292 [nio-8980-exec-1] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 21:40:30.801 DEBUG 2292 [nio-8980-exec-1] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_yuangong(String), t_yuangong(String)
2021-01-08 21:40:30.803 DEBUG 2292 [nio-8980-exec-1] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 21:40:30.807 DEBUG 2292 [nio-8980-exec-1] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 21:40:30.807 DEBUG 2292 [nio-8980-exec-1] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:40:30.810 DEBUG 2292 [nio-8980-exec-1] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 11
2021-01-08 21:40:30.817 DEBUG 2292 [nio-8980-exec-1] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 21:40:30.817 DEBUG 2292 [nio-8980-exec-1] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:40:30.819 DEBUG 2292 [nio-8980-exec-1] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 2
2021-01-08 21:40:30.826 DEBUG 2292 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:40:30.826 DEBUG 2292 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will not be managed by Spring
2021-01-08 21:40:30.831 DEBUG 2292 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:40:30.831 DEBUG 2292 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 21:40:30.835 DEBUG 2292 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 21:40:30.837 DEBUG 2292 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:40:30.837 DEBUG 2292 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will not be managed by Spring
2021-01-08 21:40:30.841 DEBUG 2292 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:40:30.841 DEBUG 2292 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 21:40:30.842 DEBUG 2292 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 5
2021-01-08 21:40:30.845 DEBUG 2292 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:40:30.850 DEBUG 2292 [nio-8980-exec-1] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 21:40:30.850 DEBUG 2292 [nio-8980-exec-1] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 21:40:30.851 DEBUG 2292 [nio-8980-exec-1] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 21:40:30.853 INFO  2292 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:40:30.893 DEBUG 2292 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:40:30.892  用时: 135毫秒  URI: /js/a/gen/genTable/form  总内存: 587.5MB  已用内存: 468.474MB
2021-01-08 21:40:30.902 DEBUG 2292 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:40:30.903 DEBUG 2292 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:40:30.903 DEBUG 2292 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:40:30.904 DEBUG 2292 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347538675246948352(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:40:30.893(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=t_yuangong(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 135(Long)
2021-01-08 21:40:30.906 DEBUG 2292 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:40:48.766 DEBUG 2292 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:40:48.766 DEBUG 2292 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:40:48.771 DEBUG 2292 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:40:48.772 DEBUG 2292 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), msg_inner_content_level(String), 1(String), 0(String)
2021-01-08 21:40:48.776 DEBUG 2292 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 3
2021-01-08 21:40:48.786 DEBUG 2292 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:40:48.790 DEBUG 2292 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:40:48.797 DEBUG 2292 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:40:48.798 DEBUG 2292 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), msg_inner_content_type(String), 1(String), 0(String)
2021-01-08 21:40:48.802 DEBUG 2292 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 4
2021-01-08 21:40:48.809 DEBUG 2292 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:40:48.809 DEBUG 2292 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:40:48.814 DEBUG 2292 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:40:48.815 DEBUG 2292 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), msg_inner_msg_status(String), 1(String), 0(String)
2021-01-08 21:40:48.817 DEBUG 2292 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 5
2021-01-08 21:40:49.049 DEBUG 2292 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:40:49.083 DEBUG 2292 [nio-8980-exec-3] [c.j.m.msg.dao.MsgInnerDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_sys_msg_inner` a LEFT JOIN js_sys_msg_inner_record r ON r.msg_inner_id = a.id AND r.receive_user_code = ? WHERE a.`status` != ? AND ((a.status = ? AND r.receive_user_code = ?) OR a.create_by = ?)
2021-01-08 21:40:49.083 DEBUG 2292 [nio-8980-exec-3] [c.j.m.msg.dao.MsgInnerDao.findList     ] - ==> Parameters: system(String), 1(String), 0(String), system(String), system(String)
2021-01-08 21:40:49.087 DEBUG 2292 [nio-8980-exec-3] [c.j.m.msg.dao.MsgInnerDao.findList     ] - ==>  Preparing: SELECT a.`id` AS "id", a.`msg_title` AS "msgTitle", a.`content_level` AS "contentLevel", a.`content_type` AS "contentType", a.`msg_content` AS "msgContent", a.`receive_type` AS "receiveType", a.`receive_codes` AS "receiveCodes", a.`receive_names` AS "receiveNames", a.`send_user_code` AS "sendUserCode", a.`send_user_name` AS "sendUserName", a.`send_date` AS "sendDate", a.`is_attac` AS "isAttac", a.`notify_types` AS "notifyTypes", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" , r.read_status AS "record.readStatus", r.read_date AS "record.readDate", r.is_star AS "record.isStar" FROM `js_sys_msg_inner` a LEFT JOIN js_sys_msg_inner_record r ON r.msg_inner_id = a.id AND r.receive_user_code = ? WHERE a.`status` != ? AND ((a.status = ? AND r.receive_user_code = ?) OR a.create_by = ?) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:40:49.089 DEBUG 2292 [nio-8980-exec-3] [c.j.m.msg.dao.MsgInnerDao.findList     ] - ==> Parameters: system(String), 1(String), 0(String), system(String), system(String)
2021-01-08 21:40:49.090 DEBUG 2292 [nio-8980-exec-3] [c.j.m.msg.dao.MsgInnerDao.findList     ] - <==      Total: 0
2021-01-08 21:41:12.636 DEBUG 2292 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:41:12.636  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 21:41:12.638 DEBUG 2292 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:41:12.639 DEBUG 2292 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:41:12.643 DEBUG 2292 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:41:12.644 DEBUG 2292 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:41:12.645 DEBUG 2292 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:41:12.645 DEBUG 2292 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:41:12.651 DEBUG 2292 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:41:12.651 DEBUG 2292 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:41:12.654 DEBUG 2292 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:41:12.726 DEBUG 2292 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 3毫秒: UPDATE `js_gen_table` SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2021-01-08 21:41:12.726 DEBUG 2292 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:41:12.727 DEBUG 2292 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE `js_gen_table` SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ?
2021-01-08 21:41:12.728 DEBUG 2292 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: Tyuangong(String), t_yuangong(String), (String), eid(String), (String), crud(String), com.jeesite.modules(String), employee(String), (String), employee(String), employee(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 21:41:12.724(Timestamp), (String), t_yuangong(String)
2021-01-08 21:41:12.729 DEBUG 2292 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2021-01-08 21:41:12.731 DEBUG 2292 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:41:12.732 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:41:12.732 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), id(String), 10(Integer), int(String), id(String), id(String), id(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582120304640(String)
2021-01-08 21:41:12.734 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:41:12.735 DEBUG 2292 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:41:12.736 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:41:12.737 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), org_id(String), 20(Integer), int(String), 部门(String), 部门(String), orgId(String), Long(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"digits","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582204190720(String)
2021-01-08 21:41:12.744 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:41:12.747 DEBUG 2292 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:41:12.748 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:41:12.749 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), eid(String), 30(Integer), varchar(55)(String), 工号(String), 工号(String), eid(String), String(String), 1(String), 0(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582275493888(String)
2021-01-08 21:41:12.750 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:41:12.752 DEBUG 2292 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:41:12.753 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:41:12.754 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), name(String), 40(Integer), varchar(50)(String), 姓名(String), 姓名(String), name(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), LIKE(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582569095168(String)
2021-01-08 21:41:12.756 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:41:12.757 DEBUG 2292 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:41:12.758 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:41:12.759 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), sex(String), 50(Integer), varchar(50)(String), 性别(String), 性别(String), sex(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582594260992(String)
2021-01-08 21:41:12.761 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:41:12.763 DEBUG 2292 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:41:12.764 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:41:12.781 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), age(String), 60(Integer), varchar(50)(String), 年龄(String), 年龄(String), age(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582611038208(String)
2021-01-08 21:41:12.782 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:41:12.783 DEBUG 2292 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:41:12.784 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:41:12.785 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), zhiwei(String), 70(Integer), varchar(50)(String), 职位(String), 职位(String), zhiwei(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582627815424(String)
2021-01-08 21:41:12.787 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:41:12.789 DEBUG 2292 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:41:12.790 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:41:12.791 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), shifoubumenlingdao(String), 80(Integer), varchar(50)(String), 是否为领导(String), 是否为领导(String), shifoubumenlingdao(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582661369856(String)
2021-01-08 21:41:12.792 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:41:12.794 DEBUG 2292 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:41:12.795 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:41:12.810 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), loginname(String), 90(Integer), varchar(50)(String), 账户名(String), 账户名(String), loginname(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582682341376(String)
2021-01-08 21:41:12.811 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:41:12.812 DEBUG 2292 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:41:12.813 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:41:12.814 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), loginpw(String), 100(Integer), varchar(50)(String), 密码(String), 密码(String), loginpw(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582703312896(String)
2021-01-08 21:41:12.815 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:41:12.816 DEBUG 2292 [nio-8980-exec-6] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:41:12.817 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:41:12.818 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), del(String), 110(Integer), varchar(50)(String), del(String), del(String), del(String), String(String), (String), 1(String), (String), (String), (String), (String), EQ(String), (String), hidden(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582732673024(String)
2021-01-08 21:41:12.819 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:41:12.893 DEBUG 2292 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:41:12.893 DEBUG 2292 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:41:12.897 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC
2021-01-08 21:41:12.897 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:41:12.900 DEBUG 2292 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 1
2021-01-08 21:41:12.902 DEBUG 2292 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:41:12.907 DEBUG 2292 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:41:12.908 DEBUG 2292 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:41:12.912 DEBUG 2292 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 4
2021-01-08 21:41:12.913 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TchuqinDao.xml
2021-01-08 21:41:12.913 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.employee.dao.TchuqinDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tchuqin">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 21:41:12.915 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TchuqinDao.xml
2021-01-08 21:41:12.915 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tchuqin.java
2021-01-08 21:41:12.919 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.entity;

import org.hibernate.validator.constraints.Length;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * employeeEntity
 * @author LX
 * @version 2021-01-08
 */
@Table(name="t_chuqin", alias="a", columns={
		@Column(name="id", attrName="id", label="id", isPK=true),
		@Column(name="yuefen", attrName="yuefen", label="yuefen"),
		@Column(name="tianshu", attrName="tianshu", label="tianshu"),
		@Column(name="e_id", attrName="eid.id", label="e_id", isPK=true),
	}, orderBy="a.id ASC, a.e_id ASC"
)
public class Tchuqin extends DataEntity<Tchuqin> {
	
	private static final long serialVersionUID = 1L;
	private String yuefen;		// yuefen
	private Long tianshu;		// tianshu
	private Tyuangong eid;		// e_id 父类
	
	public Tchuqin() {
		this(null, null);
	}


	public Tchuqin(Tyuangong eid){
		this.eid = eid;
	}
	
	@Length(min=0, max=55, message="yuefen长度不能超过 55 个字符")
	public String getYuefen() {
		return yuefen;
	}

	public void setYuefen(String yuefen) {
		this.yuefen = yuefen;
	}
	
	public Long getTianshu() {
		return tianshu;
	}

	public void setTianshu(Long tianshu) {
		this.tianshu = tianshu;
	}
	
	public Tyuangong getEid() {
		return eid;
	}

	public void setEid(Tyuangong eid) {
		this.eid = eid;
	}
	
}
2021-01-08 21:41:12.922 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tchuqin.java
2021-01-08 21:41:12.923 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TchuqinDao.java
2021-01-08 21:41:12.923 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.employee.entity.Tchuqin;

/**
 * employeeDAO接口
 * @author LX
 * @version 2021-01-08
 */
@MyBatisDao
public interface TchuqinDao extends CrudDao<Tchuqin> {
	
}
2021-01-08 21:41:12.924 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TchuqinDao.java
2021-01-08 21:41:12.925 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TyuangongDao.xml
2021-01-08 21:41:12.925 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.employee.dao.TyuangongDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tyuangong">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 21:41:12.927 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TyuangongDao.xml
2021-01-08 21:41:12.927 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tyuangong.java
2021-01-08 21:41:12.928 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.entity;

import org.hibernate.validator.constraints.Length;
import java.util.List;
import com.jeesite.common.collect.ListUtils;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * employeeEntity
 * @author LX
 * @version 2021-01-08
 */
@Table(name="t_yuangong", alias="a", columns={
		@Column(name="id", attrName="id", label="id", isPK=true),
		@Column(name="org_id", attrName="orgId", label="部门"),
		@Column(name="eid", attrName="eid", label="工号", isPK=true),
		@Column(name="name", attrName="name", label="姓名", queryType=QueryType.LIKE),
		@Column(name="sex", attrName="sex", label="性别"),
		@Column(name="age", attrName="age", label="年龄"),
		@Column(name="zhiwei", attrName="zhiwei", label="职位"),
		@Column(name="shifoubumenlingdao", attrName="shifoubumenlingdao", label="是否为领导"),
		@Column(name="loginname", attrName="loginname", label="账户名"),
		@Column(name="loginpw", attrName="loginpw", label="密码"),
		@Column(name="del", attrName="del", label="del", isInsert=false, isUpdate=false, isQuery=false),
	}, orderBy="a.id DESC, a.eid DESC"
)
public class Tyuangong extends DataEntity<Tyuangong> {
	
	private static final long serialVersionUID = 1L;
	private Long orgId;		// 部门
	private String eid;		// 工号
	private String name;		// 姓名
	private String sex;		// 性别
	private String age;		// 年龄
	private String zhiwei;		// 职位
	private String shifoubumenlingdao;		// 是否为领导
	private String loginname;		// 账户名
	private String loginpw;		// 密码
	private String del;		// del
	private List<Tchuqin> tchuqinList = ListUtils.newArrayList();		// 子表列表
	
	public Tyuangong() {
		this(null, null);
	}

	public Tyuangong(Long id, String eid){
		this.id = id;
		this.eid = eid;
	}
	
	public Long getOrgId() {
		return orgId;
	}

	public void setOrgId(Long orgId) {
		this.orgId = orgId;
	}
	
	public String getEid() {
		return eid;
	}

	public void setEid(String eid) {
		this.eid = eid;
	}
	
	@Length(min=0, max=50, message="姓名长度不能超过 50 个字符")
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}
	
	@Length(min=0, max=50, message="性别长度不能超过 50 个字符")
	public String getSex() {
		return sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}
	
	@Length(min=0, max=50, message="年龄长度不能超过 50 个字符")
	public String getAge() {
		return age;
	}

	public void setAge(String age) {
		this.age = age;
	}
	
	@Length(min=0, max=50, message="职位长度不能超过 50 个字符")
	public String getZhiwei() {
		return zhiwei;
	}

	public void setZhiwei(String zhiwei) {
		this.zhiwei = zhiwei;
	}
	
	@Length(min=0, max=50, message="是否为领导长度不能超过 50 个字符")
	public String getShifoubumenlingdao() {
		return shifoubumenlingdao;
	}

	public void setShifoubumenlingdao(String shifoubumenlingdao) {
		this.shifoubumenlingdao = shifoubumenlingdao;
	}
	
	@Length(min=0, max=50, message="账户名长度不能超过 50 个字符")
	public String getLoginname() {
		return loginname;
	}

	public void setLoginname(String loginname) {
		this.loginname = loginname;
	}
	
	@Length(min=0, max=50, message="密码长度不能超过 50 个字符")
	public String getLoginpw() {
		return loginpw;
	}

	public void setLoginpw(String loginpw) {
		this.loginpw = loginpw;
	}
	
	public String getDel() {
		return del;
	}

	public void setDel(String del) {
		this.del = del;
	}
	
	public List<Tchuqin> getTchuqinList() {
		return tchuqinList;
	}

	public void setTchuqinList(List<Tchuqin> tchuqinList) {
		this.tchuqinList = tchuqinList;
	}
	
}
2021-01-08 21:41:12.939 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tyuangong.java
2021-01-08 21:41:12.940 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TyuangongDao.java
2021-01-08 21:41:12.940 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.employee.entity.Tyuangong;

/**
 * employeeDAO接口
 * @author LX
 * @version 2021-01-08
 */
@MyBatisDao
public interface TyuangongDao extends CrudDao<Tyuangong> {
	
}
2021-01-08 21:41:12.941 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TyuangongDao.java
2021-01-08 21:41:12.941 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\service\TyuangongService.java
2021-01-08 21:41:12.941 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.jeesite.common.entity.Page;
import com.jeesite.common.service.CrudService;
import com.jeesite.modules.employee.entity.Tyuangong;
import com.jeesite.modules.employee.dao.TyuangongDao;
import com.jeesite.modules.employee.entity.Tchuqin;
import com.jeesite.modules.employee.dao.TchuqinDao;

/**
 * employeeService
 * @author LX
 * @version 2021-01-08
 */
@Service
@Transactional(readOnly=true)
public class TyuangongService extends CrudService<TyuangongDao, Tyuangong> {
	
	@Autowired
	private TchuqinDao tchuqinDao;
	
	/**
	 * 获取单条数据
	 * @param tyuangong
	 * @return
	 */
	@Override
	public Tyuangong get(Tyuangong tyuangong) {
		Tyuangong entity = super.get(tyuangong);
		if (entity != null){
			Tchuqin tchuqin = new Tchuqin(entity);
			tchuqin.setStatus(Tchuqin.STATUS_NORMAL);
			entity.setTchuqinList(tchuqinDao.findList(tchuqin));
		}
		return entity;
	}
	
	/**
	 * 查询分页数据
	 * @param tyuangong 查询条件
	 * @param tyuangong.page 分页对象
	 * @return
	 */
	@Override
	public Page<Tyuangong> findPage(Tyuangong tyuangong) {
		return super.findPage(tyuangong);
	}
	
	/**
	 * 保存数据（插入或更新）
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void save(Tyuangong tyuangong) {
		super.save(tyuangong);
		// 保存 Tyuangong子表
		for (Tchuqin tchuqin : tyuangong.getTchuqinList()){
			if (!Tchuqin.STATUS_DELETE.equals(tchuqin.getStatus())){
				tchuqin.setEid(tyuangong);
				if (tchuqin.getIsNewRecord()){
					tchuqinDao.insert(tchuqin);
				}else{
					tchuqinDao.update(tchuqin);
				}
			}else{
				tchuqinDao.delete(tchuqin);
			}
		}
	}
	
	/**
	 * 更新状态
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void updateStatus(Tyuangong tyuangong) {
		super.updateStatus(tyuangong);
	}
	
	/**
	 * 删除数据
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void delete(Tyuangong tyuangong) {
		super.delete(tyuangong);
		Tchuqin tchuqin = new Tchuqin();
		tchuqin.setEid(tyuangong);
		tchuqinDao.deleteByEntity(tchuqin);
	}
	
}
2021-01-08 21:41:12.943 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\service\TyuangongService.java
2021-01-08 21:41:12.943 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\web\TyuangongController.java
2021-01-08 21:41:12.943 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.jeesite.common.config.Global;
import com.jeesite.common.entity.Page;
import com.jeesite.common.web.BaseController;
import com.jeesite.modules.employee.entity.Tyuangong;
import com.jeesite.modules.employee.service.TyuangongService;

/**
 * employeeController
 * @author LX
 * @version 2021-01-08
 */
@Controller
@RequestMapping(value = "${adminPath}/employee/tyuangong")
public class TyuangongController extends BaseController {

	@Autowired
	private TyuangongService tyuangongService;
	
	/**
	 * 获取数据
	 */
	@ModelAttribute
	public Tyuangong get(Long id, String eid, boolean isNewRecord) {
		Tyuangong tyuangong = new Tyuangong();
		tyuangong.setId(id);
		tyuangong.setEid(eid);
		tyuangong.setIsNewRecord(isNewRecord);
		return tyuangongService.getAndValid(tyuangong);
	}
	
	/**
	 * 查询列表
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = {"list", ""})
	public String list(Tyuangong tyuangong, Model model) {
		model.addAttribute("tyuangong", tyuangong);
		return "modules/employee/tyuangongList";
	}
	
	/**
	 * 查询列表数据
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = "listData")
	@ResponseBody
	public Page<Tyuangong> listData(Tyuangong tyuangong, HttpServletRequest request, HttpServletResponse response) {
		tyuangong.setPage(new Page<>(request, response));
		Page<Tyuangong> page = tyuangongService.findPage(tyuangong);
		return page;
	}

	/**
	 * 查看编辑表单
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = "form")
	public String form(Tyuangong tyuangong, Model model) {
		model.addAttribute("tyuangong", tyuangong);
		return "modules/employee/tyuangongForm";
	}

	/**
	 * 保存数据
	 */
	@RequiresPermissions("employee:tyuangong:edit")
	@PostMapping(value = "save")
	@ResponseBody
	public String save(@Validated Tyuangong tyuangong) {
		tyuangongService.save(tyuangong);
		return renderResult(Global.TRUE, text("保存employee成功！"));
	}
	
	/**
	 * 删除数据
	 */
	@RequiresPermissions("employee:tyuangong:edit")
	@RequestMapping(value = "delete")
	@ResponseBody
	public String delete(Tyuangong tyuangong) {
		tyuangongService.delete(tyuangong);
		return renderResult(Global.TRUE, text("删除employee成功！"));
	}
	
}
2021-01-08 21:41:12.949 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\web\TyuangongController.java
2021-01-08 21:41:12.949 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongList.html
2021-01-08 21:41:12.951 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: 'employee管理', libs: ['dataGrid']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header">
			<div class="box-title">
				<i class="fa icon-notebook"></i> ${text('employee管理')}
			</div>
			<div class="box-tools pull-right">
				<a href="#" class="btn btn-default" id="btnSearch" title="${text('查询')}"><i class="fa fa-filter"></i> ${text('查询')}</a>
				<% if(hasPermi('employee:tyuangong:edit')){ %>
					<a href="${ctx}/employee/tyuangong/form" class="btn btn-default btnTool" title="${text('新增employee')}"><i class="fa fa-plus"></i> ${text('新增')}</a>
				<% } %>
				<a href="#" class="btn btn-default" id="btnSetting" title="${text('设置')}"><i class="fa fa-navicon"></i></a>
			</div>
		</div>
		<div class="box-body">
			<#form:form id="searchForm" model="${tyuangong}" action="${ctx}/employee/tyuangong/listData" method="post" class="form-inline hide"
					data-page-no="${parameter.pageNo}" data-page-size="${parameter.pageSize}" data-order-by="${parameter.orderBy}">
				<div class="form-group">
					<label class="control-label">${text('部门')}：</label>
					<div class="control-inline">
						<#form:input path="orgId" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('工号')}：</label>
					<div class="control-inline">
						<#form:input path="eid" maxlength="55" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('姓名')}：</label>
					<div class="control-inline">
						<#form:input path="name" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('性别')}：</label>
					<div class="control-inline">
						<#form:input path="sex" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('年龄')}：</label>
					<div class="control-inline">
						<#form:input path="age" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('职位')}：</label>
					<div class="control-inline">
						<#form:input path="zhiwei" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('是否为领导')}：</label>
					<div class="control-inline">
						<#form:input path="shifoubumenlingdao" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('账户名')}：</label>
					<div class="control-inline">
						<#form:input path="loginname" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('密码')}：</label>
					<div class="control-inline">
						<#form:input path="loginpw" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<button type="submit" class="btn btn-primary btn-sm">${text('查询')}</button>
					<button type="reset" class="btn btn-default btn-sm">${text('重置')}</button>
				</div>
			</#form:form>
			<table id="dataGrid"></table>
			<div id="dataGridPage"></div>
		</div>
	</div>
</div>
<% } %>
<script>
// 初始化DataGrid对象
$('#dataGrid').dataGrid({
	searchForm: $("#searchForm"),
	columnModel: [
		{header:'${text("部门")}', name:'orgId', index:'a.org_id', width:150, align:"left", frozen:true, formatter: function(val, obj, row, act){
			return '<a href="${ctx}/employee/tyuangong/form?id='+row.id+'&eid='+row.eid+'" class="btnList" data-title="${text("编辑employee")}">'+(val||row.id)+'</a>';
		}},
		{header:'${text("工号")}', name:'eid', index:'a.eid', width:150, align:"left"},
		{header:'${text("姓名")}', name:'name', index:'a.name', width:150, align:"left"},
		{header:'${text("性别")}', name:'sex', index:'a.sex', width:150, align:"left"},
		{header:'${text("年龄")}', name:'age', index:'a.age', width:150, align:"left"},
		{header:'${text("职位")}', name:'zhiwei', index:'a.zhiwei', width:150, align:"left"},
		{header:'${text("是否为领导")}', name:'shifoubumenlingdao', index:'a.shifoubumenlingdao', width:150, align:"left"},
		{header:'${text("账户名")}', name:'loginname', index:'a.loginname', width:150, align:"left"},
		{header:'${text("密码")}', name:'loginpw', index:'a.loginpw', width:150, align:"left"},
		{header:'${text("操作")}', name:'actions', width:120, sortable:false, title:false, formatter: function(val, obj, row, act){
			var actions = [];
			<% if(hasPermi('employee:tyuangong:edit')){ %>
				actions.push('<a href="${ctx}/employee/tyuangong/form?id='+row.id+'&eid='+row.eid+'" class="btnList" title="${text("编辑employee")}"><i class="fa fa-pencil"></i></a>&nbsp;');
				actions.push('<a href="${ctx}/employee/tyuangong/delete?id='+row.id+'&eid='+row.eid+'" class="btnList" title="${text("删除employee")}" data-confirm="${text("确认要删除该employee吗？")}"><i class="fa fa-trash-o"></i></a>&nbsp;');
			<% } %>
			return actions.join('');
		}}
	],
	// 加载成功后执行事件
	ajaxSuccess: function(data){
		
	}
});
</script>
2021-01-08 21:41:12.963 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongList.html
2021-01-08 21:41:12.963 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongForm.html
2021-01-08 21:41:12.967 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: 'employee管理', libs: ['validate','dataGrid']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header with-border">
			<div class="box-title">
				<i class="fa icon-note"></i> ${text(tyuangong.isNewRecord ? '新增employee' : '编辑employee')}
			</div>
			<div class="box-tools pull-right">
				<button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
			</div>
		</div>
		<#form:form id="inputForm" model="${tyuangong}" action="${ctx}/employee/tyuangong/save" method="post" class="form-horizontal">
			<div class="box-body">
				<div class="form-unit">${text('基本信息')}</div>
				<#form:hidden path="id"/>
				<div class="row">
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('部门')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="orgId" class="form-control digits"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required ">*</span> ${text('工号')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="eid" maxlength="55" readonly="${!tyuangong.isNewRecord}" class="form-control required abc"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('姓名')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="name" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('性别')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="sex" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('年龄')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="age" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('职位')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="zhiwei" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('是否为领导')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="shifoubumenlingdao" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('账户名')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="loginname" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('密码')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="loginpw" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
				</div>
				<h4 class="form-unit">${text('t_chuqin')}</h4>
				<div class="ml10 mr10">
					<table id="tchuqinDataGrid"></table>
					<% if (hasPermi('employee:tyuangong:edit')){ %>
						<a href="#" id="tchuqinDataGridAddRowBtn" class="btn btn-primary btn-sm mt10 mb10"><i class="fa fa-plus"></i> ${text('增行')}</a>
					<% } %>
				</div>
			</div>
			<div class="box-footer">
				<div class="row">
					<div class="col-sm-offset-2 col-sm-10">
						<% if (hasPermi('employee:tyuangong:edit')){ %>
							<button type="submit" class="btn btn-sm btn-primary" id="btnSubmit"><i class="fa fa-check"></i> ${text('保 存')}</button>&nbsp;
						<% } %>
						<button type="button" class="btn btn-sm btn-default" id="btnCancel" onclick="js.closeCurrentTabPage()"><i class="fa fa-reply-all"></i> ${text('关 闭')}</button>
					</div>
				</div>
			</div>
		</#form:form>
	</div>
</div>
<% } %>
<script>
//初始化t_chuqinDataGrid对象
$("#tchuqinDataGrid").dataGrid({

	data: ${toJson(tyuangong.tchuqinList)},
	datatype: "local", // 设置本地数据
	autoGridHeight: function(){return 'auto'}, // 设置自动高度
	
	// 设置数据表格列
	columnModel: [
		{header:'状态', name:'status', editable:true, hidden:true},
		{header:'主键', name:'id', editable:true, hidden:true},
		{header:'${text("yuefen")}', name:'yuefen', width:150, editable:true, edittype:'text', editoptions:{'maxlength':'55', 'class':'form-control'}},
		{header:'${text("tianshu")}', name:'tianshu', width:150, editable:true, edittype:'text', editoptions:{'class':'form-control digits'}},
		{header:'${text("e_id")}', name:'eid.id', editable:true, hidden:true},
		{header:'${text("操作")}', name:'actions', width:80, sortable:false, fixed:true, formatter: function(val, obj, row, act){
			var actions = [];
			if (val == 'new'){
				actions.push('<a href="#" onclick="js.confirm(\'${text("你确认要删除这条数据吗？")}\', function(){$(\'#tchuqinDataGrid\').dataGrid(\'delRowData\',\''+obj.rowId+'\')});return false;"><i class="fa fa-trash-o"></i></a>&nbsp;');
			}else{
				actions.push('<a href="#" onclick="js.confirm(\'${text("你确认要删除这条数据吗？")}\', function(){$(\'#tchuqinDataGrid\').dataGrid(\'setRowData\',\''+obj.rowId+'\',null,{display:\'none\'});$(\'#'+obj.rowId+'_status\').val(\''+Global.STATUS_DELETE+'\');});return false;"><i class="fa fa-trash-o"></i></a>&nbsp;');
			}
			return actions.join('');
		}, editoptions: {defaultValue: 'new'}}
	],
	
	// 编辑表格参数
	editGrid: true,				// 是否是编辑表格
	editGridInitRowNum: 1,		// 编辑表格的初始化新增行数
	editGridAddRowBtn: $('#tchuqinDataGridAddRowBtn'),	// 子表增行按钮
	editGridAddRowInitData: {id: '', status: Global.STATUS_NORMAL},	// 新增行的时候初始化的数据
	
	// 编辑表格的提交数据参数
	editGridInputFormListName: 'tchuqinList', // 提交的数据列表名
	editGridInputFormListAttrs: 'status,id,yuefen,tianshu,eid.id,', // 提交数据列表的属性字段
	
	// 加载成功后执行事件
	ajaxSuccess: function(data){
		
	}
});
</script>
<script>
$("#inputForm").validate({
	submitHandler: function(form){
		js.ajaxSubmitForm($(form), function(data){
			js.showMessage(data.message);
			if(data.result == Global.TRUE){
				js.closeCurrentTabPage(function(contentWindow){
					contentWindow.page();
				});
			}
		}, "json");
    }
});
</script>
2021-01-08 21:41:12.970 DEBUG 2292 [nio-8980-exec-6] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongForm.html
2021-01-08 21:41:12.982 DEBUG 2292 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:41:12.976  用时: 340毫秒  URI: /js/a/gen/genTable/save  总内存: 587.5MB  已用内存: 501.772MB
2021-01-08 21:41:12.986 DEBUG 2292 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:41:12.987 DEBUG 2292 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:41:12.989 DEBUG 2292 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:41:12.991 DEBUG 2292 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347538851776815104(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:41:12.981(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=t_yuangong&comments=t_yuangong&className=Tyuangong&functionAuthor=LX&parentTableName=&parentTableFkName=eid&remarks=&columnList[0].id=1347532582120304640&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=id&columnList[0].columnType=int&columnList[0].attrType=Long&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=6/4/8&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1347532582204190720&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=org_id&columnList[1].comments=部门&columnList[1].columnType=int&columnList[1].attrType=Long&columnList[1].fullAttrName=orgId&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=6/4/8&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[1].optionMap['fieldValid']=digits&columnList[2].id=1347532582275493888&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=eid&columnList[2].comments=工号&columnList[2].columnType=varchar(55)&columnList[2].attrType=String&columnList[2].fullAttrName=eid&!columnList[2].isPk=&columnList[2].isPk=1&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&columnList[2].isUpdate=1&!columnList[2].isList=&columnList[2].isList=1&!columnList[2].isQuery=&columnList[2].isQuery=1&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].isRequired=1&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=6/4/8&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[2].optionMap['fieldValid']=abc&columnList[3].id=1347532582569095168&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=name&columnList[3].comments=姓名&columnList[3].columnType=varchar(50)&columnList[3].attrType=String&columnList[3].fullAttrName=name&!columnList[3].isPk=&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&columnList[3].isUpdate=1&!columnList[3].isList=&columnList[3].isList=1&!columnList[3].isQuery=&columnList[3].isQuery=1&columnList[3].queryType=LIKE&!columnList[3].isEdit=&columnList[3].isEdit=1&!columnList[3].isRequired=&columnList[3].showType=input&columnList[3].optionMap['gridRowCol']=6/4/8&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[4].id=1347532582594260992&columnList[4].status=&columnList[4].columnSort=50&columnList[4].columnName=sex&columnList[4].comments=性别&columnList[4].columnType=varchar(50)&columnList[4].attrType=String&columnList[4].fullAttrName=sex&!columnList[4].isPk=&!columnList[4].isInsert=&columnList[4].isInsert=1&!columnList[4].isUpdate=&columnList[4].isUpdate=1&!columnList[4].isList=&columnList[4].isList=1&!columnList[4].isQuery=&columnList[4].isQuery=1&columnList[4].queryType=EQ&!columnList[4].isEdit=&columnList[4].isEdit=1&!columnList[4].isRequired=&columnList[4].showType=input&columnList[4].optionMap['gridRowCol']=6/4/8&!columnList[4].optionMap['isNewLine']=&columnList[4].optionMap['dictName']=&columnList[4].optionMap['dictType']=&!columnList[4].optionMap['fieldValid']=&columnList[5].id=1347532582611038208&columnList[5].status=&columnList[5].columnSort=60&columnList[5].columnName=age&columnList[5].comments=年龄&columnList[5].columnType=varchar(50)&columnList[5].attrType=String&columnList[5].fullAttrName=age&!columnList[5].isPk=&!columnList[5].isInsert=&columnList[5].isInsert=1&!columnList[5].isUpdate=&columnList[5].isUpdate=1&!columnList[5].isList=&columnList[5].isList=1&!columnList[5].isQuery=&columnList[5].isQuery=1&columnList[5].queryType=EQ&!columnList[5].isEdit=&columnList[5].isEdit=1&!columnList[5].isRequired=&columnList[5].showType=input&columnList[5].optionMap['gridRowCol']=6/4/8&!columnList[5].optionMap['isNewLine']=&columnList[5].optionMap['dictName']=&columnList[5].optionMap['dictType']=&!columnList[5].optionMap['fieldValid']=&columnList[6].id=1347532582627815424&columnList[6].status=&columnList[6].columnSort=70&columnList[6].columnName=zhiwei&columnList[6].comments=职位&columnList[6].columnType=varchar(50)&columnList[6].attrType=String&columnList[6].fullAttrName=zhiwei&!columnList[6].isPk=&!columnList[6].isInsert=&columnList[6].isInsert=1&!columnList[6].isUpdate=&columnList[6].isUpdate=1&!columnList[6].isList=&columnList[6].isList=1&!columnList[6].isQuery=&columnList[6].isQuery=1&columnList[6].queryType=EQ&!columnList[6].isEdit=&columnList[6].isEdit=1&!columnList[6].isRequired=&columnList[6].showType=input&columnList[6].optionMap['gridRowCol']=6/4/8&!columnList[6].optionMap['isNewLine']=&columnList[6].optionMap['dictName']=&columnList[6].optionMap['dictType']=&!columnList[6].optionMap['fieldValid']=&columnList[7].id=1347532582661369856&columnList[7].status=&columnList[7].columnSort=80&columnList[7].columnName=shifoubumenlingdao&columnList[7].comments=是否为领导&columnList[7].columnType=varchar(50)&columnList[7].attrType=String&columnList[7].fullAttrName=shifoubumenlingdao&!columnList[7].isPk=&!columnList[7].isInsert=&columnList[7].isInsert=1&!columnList[7].isUpdate=&columnList[7].isUpdate=1&!columnList[7].isList=&columnList[7].isList=1&!columnList[7].isQuery=&columnList[7].isQuery=1&columnList[7].queryType=EQ&!columnList[7].isEdit=&columnList[7].isEdit=1&!columnList[7].isRequired=&columnList[7].showType=input&columnList[7].optionMap['gridRowCol']=6/4/8&!columnList[7].optionMap['isNewLine']=&columnList[7].optionMap['dictName']=&columnList[7].optionMap['dictType']=&!columnList[7].optionMap['fieldValid']=&columnList[8].id=1347532582682341376&columnList[8].status=&columnList[8].columnSort=90&columnList[8].columnName=loginname&columnList[8].comments=账户名&columnList[8].columnType=varchar(50)&columnList[8].attrType=String&columnList[8].fullAttrName=loginname&!columnList[8].isPk=&!columnList[8].isInsert=&columnList[8].isInsert=1&!columnList[8].isUpdate=&columnList[8].isUpdate=1&!columnList[8].isList=&columnList[8].isList=1&!columnList[8].isQuery=&columnList[8].isQuery=1&columnList[8].queryType=EQ&!columnList[8].isEdit=&columnList[8].isEdit=1&!columnList[8].isRequired=&columnList[8].showType=input&columnList[8].optionMap['gridRowCol']=6/4/8&!columnList[8].optionMap['isNewLine']=&columnList[8].optionMap['dictName']=&columnList[8].optionMap['dictType']=&!columnList[8].optionMap['fieldValid']=&columnList[9].id=1347532582703312896&columnList[9].status=&columnList[9].columnSort=100&columnList[9].columnName=loginpw&columnList[9].comments=密码&columnList[9].columnType=varchar(50)&columnList[9].attrType=String&columnList[9].fullAttrName=loginpw&!columnList[9].isPk=&!columnList[9].isInsert=&columnList[9].isInsert=1&!columnList[9].isUpdate=&columnList[9].isUpdate=1&!columnList[9].isList=&columnList[9].isList=1&!columnList[9].isQuery=&columnList[9].isQuery=1&columnList[9].queryType=EQ&!columnList[9].isEdit=&columnList[9].isEdit=1&!columnList[9].isRequired=&columnList[9].showType=input&columnList[9].optionMap['gridRowCol']=6/4/8&!columnList[9].optionMap['isNewLine']=&columnList[9].optionMap['dictName']=&columnList[9].optionMap['dictType']=&!columnList[9].optionMap['fieldValid']=&columnList[10].id=1347532582732673024&columnList[10].status=&columnList[10].columnSort=110&columnList[10].columnName=del&columnList[10].comments=del&columnList[10].columnType=varchar(50)&columnList[10].attrType=String&columnList[10].fullAttrName=del&!columnList[10].isPk=&!columnList[10].isInsert=&!columnList[10].isUpdate=&!columnList[10].isList=&!columnList[10].isQuery=&columnList[10].queryType=EQ&!columnList[10].isEdit=&!columnList[10].isRequired=&columnList[10].showType=hidden&columnList[10].optionMap['gridRowCol']=6/4/8&!columnList[10].optionMap['isNewLine']=&columnList[10].optionMap['dictName']=&columnList[10].optionMap['dictType']=&!columnList[10].optionMap['fieldValid']=&tplCategory=crud&packageName=com.jeesite.modules&moduleName=employee&subModuleName=&functionName=employee&functionNameSimple=employee&genBaseDir=C:\Users\Lx\work2\web&!optionMap['isHaveDisableEnable']=&optionMap['isHaveDisableEnable']=0&!optionMap['isHaveDelete']=&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&!optionMap['isImageUpload']=&optionMap['isImageUpload']=0&!optionMap['isFileUpload']=&optionMap['isFileUpload']=0&!optionMap['isBpmForm']=&optionMap['isBpmForm']=0&optionMap['bpmFormKey']=&genFlag=2&replaceFile=1&!replaceFile=0(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 340(Long)
2021-01-08 21:41:13.020 DEBUG 2292 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:41:13.054 DEBUG 2292 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:41:13.054  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:41:13.076 DEBUG 2292 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:41:13.077 DEBUG 2292 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:41:13.094 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:41:13.095 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:41:13.097 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:41:13.097 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:41:13.099 DEBUG 2292 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:41:13.105 DEBUG 2292 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:41:13.104  用时: 50毫秒  URI: /js/a/gen/genTable/listData  总内存: 587.5MB  已用内存: 504.538MB
2021-01-08 21:41:13.113 DEBUG 2292 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:41:13.113 DEBUG 2292 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:41:13.114 DEBUG 2292 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:41:13.135 DEBUG 2292 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347538852292714496(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:41:13.105(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 50(Long)
2021-01-08 21:41:13.137 DEBUG 2292 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:41:22.400 DEBUG 2292 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:41:22.400  URI: /js/a/employee/tyuangong/list  IP: 127.0.0.1
2021-01-08 21:41:22.402 INFO  2292 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/employee/tyuangongList <<<<<<<<< /js/a/employee/tyuangong/list >>>>>>>>> com.jeesite.modules.employee.web.TyuangongController#list(Tyuangong, Model)
2021-01-08 21:41:22.416 DEBUG 2292 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:41:22.417 DEBUG 2292 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:41:22.418 DEBUG 2292 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:41:22.419 DEBUG 2292 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:41:22.413  用时: 13毫秒  URI: /js/a/employee/tyuangong/list  总内存: 587.5MB  已用内存: 510.812MB
2021-01-08 21:41:22.419 DEBUG 2292 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347538891337490432(String), access(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:41:22.413(Timestamp), /js/a/employee/tyuangong/list(String), GET(String), (String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 13(Long)
2021-01-08 21:41:22.421 DEBUG 2292 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:41:22.545 DEBUG 2292 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:41:22.544  URI: /js/a/employee/tyuangong/listData  IP: 127.0.0.1
2021-01-08 21:41:22.550 DEBUG 2292 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.id DESC, a.eid DESC
2021-01-08 21:41:22.550 DEBUG 2292 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:41:22.559 DEBUG 2292 [nio-8980-exec-6] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT count(0) FROM `t_yuangong` a
2021-01-08 21:41:22.559 DEBUG 2292 [nio-8980-exec-6] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:41:22.568 DEBUG 2292 [nio-8980-exec-6] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.id DESC, a.eid DESC LIMIT 20
2021-01-08 21:41:22.568 DEBUG 2292 [nio-8980-exec-6] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:41:22.571 DEBUG 2292 [nio-8980-exec-6] [c.j.m.e.dao.TyuangongDao.findList      ] - <==      Total: 8
2021-01-08 21:41:22.577 DEBUG 2292 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:41:22.576  用时: 32毫秒  URI: /js/a/employee/tyuangong/listData  总内存: 587.5MB  已用内存: 512.656MB
2021-01-08 21:41:22.581 DEBUG 2292 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:41:22.581 DEBUG 2292 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@40f931ec] will be managed by Spring
2021-01-08 21:41:22.582 DEBUG 2292 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:41:22.583 DEBUG 2292 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347538892025356288(String), select(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:41:22.577(Timestamp), /js/a/employee/tyuangong/listData(String), POST(String), orgId=&name=&sex=&age=&zhiwei=&shifoubumenlingdao=&loginname=&loginpw=&del=&pageNo=&pageSize=&orderBy=(String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 32(Long)
2021-01-08 21:41:22.584 DEBUG 2292 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:41:47.351 INFO  23016 [           main] [com.jeesite.modules.Application        ] - Starting Application on DESKTOP-0IUV8EB with PID 23016 (C:\Users\Lx\work2\web\src\main\webapp\WEB-INF\classes started by Lx in C:\Users\Lx\work2\web)
2021-01-08 21:41:47.360 DEBUG 23016 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2021-01-08 21:41:47.361 INFO  23016 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2021-01-08 21:41:51.836 INFO  23016 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2021-01-08 21:41:51.838 INFO  23016 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2021-01-08 21:41:54.068 INFO  23016 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/Lx
2021-01-08 21:41:54.071 INFO  23016 [           main] [com.jeesite.common.config.Global       ] - user.dir: C:/Users/Lx/work2/web
2021-01-08 21:41:54.073 INFO  23016 [           main] [com.jeesite.common.config.Global       ] - logPath: C:/Users/Lx/work2/web/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.2 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：adfb80499b32e1492729a84d62f8cd98
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2021-01-08 21:41:55.583 DEBUG 23016 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2021-01-08 21:41:56.606 INFO  23016 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2021-01-08 21:41:58.826 INFO  23016 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2021-01-08 21:42:04.751 DEBUG 23016 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:05.496 DEBUG 23016 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 21:42:05.525 DEBUG 23016 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 21:42:05.588 DEBUG 23016 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 21:42:05.600 DEBUG 23016 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 6毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:42:05.605 DEBUG 23016 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2021-01-08 21:42:05.607 DEBUG 23016 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2021-01-08 21:42:05.624 DEBUG 23016 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2021-01-08 21:42:05.676 INFO  23016 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2021-01-08 21:42:08.508 INFO  23016 [           main] [com.jeesite.modules.Application        ] - Started Application in 22.603 seconds (JVM running for 23.893)
2021-01-08 21:42:15.409 DEBUG 23016 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = #{userCode}
2021-01-08 21:42:15.419 DEBUG 23016 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:15.424 DEBUG 23016 [nio-8980-exec-1] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = ?
2021-01-08 21:42:15.425 DEBUG 23016 [nio-8980-exec-1] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2021-01-08 21:42:15.437 DEBUG 23016 [nio-8980-exec-1] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2021-01-08 21:42:15.640 DEBUG 23016 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2021-01-08 21:42:15.641 DEBUG 23016 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:15.648 DEBUG 23016 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2021-01-08 21:42:15.651 DEBUG 23016 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2021-01-08 21:42:15.686 DEBUG 23016 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2021-01-08 21:42:15.743 DEBUG 23016 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:42:15.749 DEBUG 23016 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:15.754 DEBUG 23016 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:42:15.756 DEBUG 23016 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2021-01-08 21:42:15.851 DEBUG 23016 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 21:42:16.983 DEBUG 23016 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 7毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:42:16.988 DEBUG 23016 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:16.994 DEBUG 23016 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:42:16.995 DEBUG 23016 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_sys_code(String), 1(String), 0(String)
2021-01-08 21:42:17.016 DEBUG 23016 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2021-01-08 21:42:17.876 DEBUG 23016 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:42:17.872  URI: /js/a/employee/tyuangong/list  IP: 127.0.0.1
2021-01-08 21:42:18.073 INFO  23016 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/employee/tyuangongList <<<<<<<<< /js/a/employee/tyuangong/list >>>>>>>>> com.jeesite.modules.employee.web.TyuangongController#list(Tyuangong, Model)
2021-01-08 21:42:18.267 DEBUG 23016 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:42:18.220  用时: 348毫秒  URI: /js/a/employee/tyuangong/list  总内存: 552.5MB  已用内存: 271.237MB
2021-01-08 21:42:18.295 DEBUG 23016 [  log-save-10-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:42:18.296 DEBUG 23016 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:18.298 DEBUG 23016 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:42:18.299 DEBUG 23016 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 21:42:18.320 DEBUG 23016 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 21:42:18.342 DEBUG 23016 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:42:18.346 DEBUG 23016 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:18.348 DEBUG 23016 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:42:18.355 DEBUG 23016 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539125590605824(String), access(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:42:18.264(Timestamp), /js/a/employee/tyuangong/list(String), GET(String), (String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 348(Long)
2021-01-08 21:42:18.357 DEBUG 23016 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:42:18.972 DEBUG 23016 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:42:18.971  URI: /js/a/employee/tyuangong/listData  IP: 127.0.0.1
2021-01-08 21:42:19.117 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.id DESC, a.eid DESC
2021-01-08 21:42:19.119 DEBUG 23016 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:19.294 DEBUG 23016 [nio-8980-exec-8] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT count(0) FROM `t_yuangong` a
2021-01-08 21:42:19.295 DEBUG 23016 [nio-8980-exec-8] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:42:19.306 DEBUG 23016 [nio-8980-exec-8] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.id DESC, a.eid DESC LIMIT 20
2021-01-08 21:42:19.307 DEBUG 23016 [nio-8980-exec-8] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:42:19.311 DEBUG 23016 [nio-8980-exec-8] [c.j.m.e.dao.TyuangongDao.findList      ] - <==      Total: 8
2021-01-08 21:42:19.422 DEBUG 23016 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:42:19.409  用时: 438毫秒  URI: /js/a/employee/tyuangong/listData  总内存: 552.5MB  已用内存: 304.530MB
2021-01-08 21:42:19.460 DEBUG 23016 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:42:19.461 DEBUG 23016 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:19.462 DEBUG 23016 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:42:19.469 DEBUG 23016 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539130447609856(String), select(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:42:19.422(Timestamp), /js/a/employee/tyuangong/listData(String), POST(String), orgId=&name=&sex=&age=&zhiwei=&shifoubumenlingdao=&loginname=&loginpw=&del=&pageNo=&pageSize=&orderBy=(String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 438(Long)
2021-01-08 21:42:19.471 DEBUG 23016 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:42:25.837 DEBUG 23016 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:42:25.837  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2021-01-08 21:42:25.916 INFO  23016 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2021-01-08 21:42:25.960 DEBUG 23016 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:42:25.955  用时: 118毫秒  URI: /js/a/gen/genTable/list  总内存: 552.5MB  已用内存: 316.618MB
2021-01-08 21:42:25.972 DEBUG 23016 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 4毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:42:25.973 DEBUG 23016 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:25.987 DEBUG 23016 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:42:25.993 DEBUG 23016 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539157865775104(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:42:25.959(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 118(Long)
2021-01-08 21:42:25.994 DEBUG 23016 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:42:26.165 DEBUG 23016 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:42:26.165  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:42:26.310 DEBUG 23016 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:42:26.311 DEBUG 23016 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:26.354 DEBUG 23016 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:42:26.355 DEBUG 23016 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:42:26.357 DEBUG 23016 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:42:26.359 DEBUG 23016 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:42:26.365 DEBUG 23016 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:42:26.404 DEBUG 23016 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:42:26.402  用时: 237毫秒  URI: /js/a/gen/genTable/listData  总内存: 552.5MB  已用内存: 329.043MB
2021-01-08 21:42:26.418 DEBUG 23016 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 4毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:42:26.423 DEBUG 23016 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:26.424 DEBUG 23016 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:42:26.428 DEBUG 23016 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539159728046080(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:42:26.403(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 237(Long)
2021-01-08 21:42:26.438 DEBUG 23016 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:42:27.644 DEBUG 23016 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:42:27.644  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:42:27.648 DEBUG 23016 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:42:27.648 DEBUG 23016 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:27.654 DEBUG 23016 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:42:27.655 DEBUG 23016 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:42:27.658 DEBUG 23016 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:42:27.661 DEBUG 23016 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:42:27.669 DEBUG 23016 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:42:27.670 DEBUG 23016 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:42:27.674 DEBUG 23016 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:42:27.688 DEBUG 23016 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:27.693 DEBUG 23016 [nio-8980-exec-6] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 21:42:27.694 DEBUG 23016 [nio-8980-exec-6] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_yuangong(String), t_yuangong(String)
2021-01-08 21:42:27.699 DEBUG 23016 [nio-8980-exec-6] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 21:42:27.704 DEBUG 23016 [nio-8980-exec-6] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 21:42:27.704 DEBUG 23016 [nio-8980-exec-6] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:42:27.710 DEBUG 23016 [nio-8980-exec-6] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 11
2021-01-08 21:42:27.723 DEBUG 23016 [nio-8980-exec-6] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 21:42:27.723 DEBUG 23016 [nio-8980-exec-6] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:42:27.726 DEBUG 23016 [nio-8980-exec-6] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 2
2021-01-08 21:42:27.915 DEBUG 23016 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:42:27.918 DEBUG 23016 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will not be managed by Spring
2021-01-08 21:42:27.923 DEBUG 23016 [nio-8980-exec-6] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:42:27.924 DEBUG 23016 [nio-8980-exec-6] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 21:42:27.937 DEBUG 23016 [nio-8980-exec-6] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 21:42:27.941 DEBUG 23016 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:42:27.942 DEBUG 23016 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will not be managed by Spring
2021-01-08 21:42:27.951 DEBUG 23016 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:42:27.952 DEBUG 23016 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 21:42:27.966 DEBUG 23016 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 5
2021-01-08 21:42:27.975 DEBUG 23016 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:27.990 DEBUG 23016 [nio-8980-exec-6] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 21:42:27.990 DEBUG 23016 [nio-8980-exec-6] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 21:42:27.997 DEBUG 23016 [nio-8980-exec-6] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 21:42:28.000 INFO  23016 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:42:28.125 DEBUG 23016 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:42:28.126 DEBUG 23016 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:28.133 DEBUG 23016 [nio-8980-exec-6] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:42:28.134 DEBUG 23016 [nio-8980-exec-6] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_yes_no(String), 1(String), 0(String)
2021-01-08 21:42:28.138 DEBUG 23016 [nio-8980-exec-6] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 21:42:28.279 DEBUG 23016 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:42:28.276  用时: 632毫秒  URI: /js/a/gen/genTable/form  总内存: 552.5MB  已用内存: 380.984MB
2021-01-08 21:42:28.301 DEBUG 23016 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:42:28.301 DEBUG 23016 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:28.302 DEBUG 23016 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:42:28.304 DEBUG 23016 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539167592366080(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:42:28.278(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=t_yuangong(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 632(Long)
2021-01-08 21:42:28.306 DEBUG 23016 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:42:39.044 DEBUG 23016 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:42:39.044  URI: /js/a/test/testData/list  IP: 127.0.0.1
2021-01-08 21:42:39.088 INFO  23016 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/test/testDataList <<<<<<<<< /js/a/test/testData/list >>>>>>>>> com.jeesite.modules.test.web.TestDataController#list(TestData, Model)
2021-01-08 21:42:39.120 DEBUG 23016 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:42:39.120 DEBUG 23016 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:39.124 DEBUG 23016 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:42:39.125 DEBUG 23016 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_type(String), 1(String), 0(String)
2021-01-08 21:42:39.129 DEBUG 23016 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 21:42:39.139 DEBUG 23016 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:42:39.140 DEBUG 23016 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:39.146 DEBUG 23016 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:42:39.146 DEBUG 23016 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_search_status(String), 1(String), 0(String)
2021-01-08 21:42:39.149 DEBUG 23016 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 21:42:39.174 DEBUG 23016 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:42:39.171  用时: 127毫秒  URI: /js/a/test/testData/list  总内存: 552.5MB  已用内存: 399.107MB
2021-01-08 21:42:39.184 DEBUG 23016 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:42:39.184 DEBUG 23016 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:39.185 DEBUG 23016 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:42:39.187 DEBUG 23016 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539213289308160(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2021-01-08 21:42:39.173(Timestamp), /js/a/test/testData/list(String), GET(String), (String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 127(Long)
2021-01-08 21:42:39.188 DEBUG 23016 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:42:39.381 DEBUG 23016 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:42:39.380  URI: /js/a/test/testData/listData  IP: 127.0.0.1
2021-01-08 21:42:39.509 DEBUG 23016 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != #{STATUS_DELETE} ORDER BY a.update_date DESC
2021-01-08 21:42:39.536 DEBUG 23016 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:39.571 DEBUG 23016 [nio-8980-exec-9] [c.j.m.test.dao.TestDataDao.findList    ] - ==>  Preparing: SELECT count(0) FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != ?
2021-01-08 21:42:39.571 DEBUG 23016 [nio-8980-exec-9] [c.j.m.test.dao.TestDataDao.findList    ] - ==> Parameters: 1(String)
2021-01-08 21:42:39.574 DEBUG 23016 [nio-8980-exec-9] [c.j.m.test.dao.TestDataDao.findList    ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != ? ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:42:39.575 DEBUG 23016 [nio-8980-exec-9] [c.j.m.test.dao.TestDataDao.findList    ] - ==> Parameters: 1(String)
2021-01-08 21:42:39.576 DEBUG 23016 [nio-8980-exec-9] [c.j.m.test.dao.TestDataDao.findList    ] - <==      Total: 0
2021-01-08 21:42:39.599 DEBUG 23016 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:42:39.585  用时: 205毫秒  URI: /js/a/test/testData/listData  总内存: 552.5MB  已用内存: 410.504MB
2021-01-08 21:42:39.606 DEBUG 23016 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:42:39.606 DEBUG 23016 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:39.607 DEBUG 23016 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:42:39.608 DEBUG 23016 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539215076081664(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2021-01-08 21:42:39.599(Timestamp), /js/a/test/testData/listData(String), POST(String), testInput=&testTextarea=&testSelect=&testDate_gte=&testDate_lte=&testDatetime_gte=&testDatetime_lte=&testUser.userName=&testUser.userCode=&testOffice.officeName=&testOffice.officeCode=&testAreaName=&testAreaCode=&!testSelectMultiple=&status=&!testRadio=&testRadio=&!testCheckbox=&pageNo=&pageSize=&orderBy=(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 205(Long)
2021-01-08 21:42:39.610 DEBUG 23016 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:42:56.749 DEBUG 23016 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:42:56.749  URI: /js/a/employee/tyuangong/list  IP: 127.0.0.1
2021-01-08 21:42:56.807 INFO  23016 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/employee/tyuangongList <<<<<<<<< /js/a/employee/tyuangong/list >>>>>>>>> com.jeesite.modules.employee.web.TyuangongController#list(Tyuangong, Model)
2021-01-08 21:42:56.822 DEBUG 23016 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:42:56.818  用时: 69毫秒  URI: /js/a/employee/tyuangong/list  总内存: 552.5MB  已用内存: 418.439MB
2021-01-08 21:42:56.824 DEBUG 23016 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:42:56.827 DEBUG 23016 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:56.828 DEBUG 23016 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:42:56.832 DEBUG 23016 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539287310385152(String), access(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:42:56.821(Timestamp), /js/a/employee/tyuangong/list(String), GET(String), (String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 69(Long)
2021-01-08 21:42:56.833 DEBUG 23016 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:42:57.195 DEBUG 23016 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:42:57.195  URI: /js/a/employee/tyuangong/listData  IP: 127.0.0.1
2021-01-08 21:42:57.231 DEBUG 23016 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.id DESC, a.eid DESC
2021-01-08 21:42:57.232 DEBUG 23016 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:57.239 DEBUG 23016 [nio-8980-exec-5] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT count(0) FROM `t_yuangong` a
2021-01-08 21:42:57.239 DEBUG 23016 [nio-8980-exec-5] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:42:57.242 DEBUG 23016 [nio-8980-exec-5] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.id DESC, a.eid DESC LIMIT 20
2021-01-08 21:42:57.242 DEBUG 23016 [nio-8980-exec-5] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:42:57.256 DEBUG 23016 [nio-8980-exec-5] [c.j.m.e.dao.TyuangongDao.findList      ] - <==      Total: 8
2021-01-08 21:42:57.290 DEBUG 23016 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:42:57.271  用时: 76毫秒  URI: /js/a/employee/tyuangong/listData  总内存: 552.5MB  已用内存: 420.529MB
2021-01-08 21:42:57.300 DEBUG 23016 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:42:57.301 DEBUG 23016 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:42:57.302 DEBUG 23016 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:42:57.303 DEBUG 23016 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539289273319424(String), select(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:42:57.289(Timestamp), /js/a/employee/tyuangong/listData(String), POST(String), orgId=&name=&sex=&age=&zhiwei=&shifoubumenlingdao=&loginname=&loginpw=&del=&pageNo=&pageSize=&orderBy=(String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 76(Long)
2021-01-08 21:42:57.304 DEBUG 23016 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:43:05.512 DEBUG 23016 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:43:05.512 DEBUG 23016 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:43:05.513 DEBUG 23016 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:43:05.514 DEBUG 23016 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539323754692608(String), loginLogout(String), 系统退出(String), system(String), 超级管理员(String), 2021-01-08 21:43:05.51(Timestamp), /js/a/logout(String), GET(String), (String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 0(Long)
2021-01-08 21:43:05.515 DEBUG 23016 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:43:07.283 INFO  23016 [nio-8980-exec-8] [com.jeesite.common.cache.CacheUtils    ] - removeCache: userCache_system
2021-01-08 21:43:07.286 DEBUG 23016 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:43:07.287 DEBUG 23016 [nio-8980-exec-8] [c.j.m.sys.dao.UserDao.updateLoginInfo  ] - ==>  Preparing: UPDATE js_sys_user SET last_login_ip = ?, last_login_date = ? WHERE user_code = ?
2021-01-08 21:43:07.287 DEBUG 23016 [nio-8980-exec-8] [c.j.m.sys.dao.UserDao.updateLoginInfo  ] - ==> Parameters: 127.0.0.1(String), 2021-01-08 21:43:07.285(Timestamp), system(String)
2021-01-08 21:43:07.288 DEBUG 23016 [nio-8980-exec-8] [c.j.m.sys.dao.UserDao.updateLoginInfo  ] - <==    Updates: 1
2021-01-08 21:43:07.295 DEBUG 23016 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:43:07.295 DEBUG 23016 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:43:07.296 DEBUG 23016 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:43:07.297 DEBUG 23016 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539331233136640(String), loginLogout(String), 系统登录(String), system(String), 超级管理员(String), 2021-01-08 21:43:07.293(Timestamp), /js/a/login(String), POST(String), username=c3lzdGVt&password=*&validCode=&loginValidCode=&rememberUserCode=on&__url=(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 0(Long)
2021-01-08 21:43:07.298 DEBUG 23016 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:43:07.304 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:43:07.305 DEBUG 23016 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:43:07.309 DEBUG 23016 [nio-8980-exec-8] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:43:07.310 DEBUG 23016 [nio-8980-exec-8] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2021-01-08 21:43:07.330 DEBUG 23016 [nio-8980-exec-8] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 21:43:15.717 DEBUG 23016 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:43:15.717  URI: /js/a/employee/tyuangong/list  IP: 127.0.0.1
2021-01-08 21:43:15.766 INFO  23016 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/employee/tyuangongList <<<<<<<<< /js/a/employee/tyuangong/list >>>>>>>>> com.jeesite.modules.employee.web.TyuangongController#list(Tyuangong, Model)
2021-01-08 21:43:15.779 DEBUG 23016 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:43:15.775  用时: 58毫秒  URI: /js/a/employee/tyuangong/list  总内存: 552.5MB  已用内存: 443.458MB
2021-01-08 21:43:15.782 DEBUG 23016 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:43:15.783 DEBUG 23016 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:43:15.784 DEBUG 23016 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:43:15.785 DEBUG 23016 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539366821806080(String), access(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:43:15.778(Timestamp), /js/a/employee/tyuangong/list(String), GET(String), (String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 58(Long)
2021-01-08 21:43:15.787 DEBUG 23016 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:43:15.879 DEBUG 23016 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:43:15.878  URI: /js/a/employee/tyuangong/listData  IP: 127.0.0.1
2021-01-08 21:43:15.952 DEBUG 23016 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.id DESC, a.eid DESC
2021-01-08 21:43:15.952 DEBUG 23016 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:43:15.965 DEBUG 23016 [nio-8980-exec-4] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT count(0) FROM `t_yuangong` a
2021-01-08 21:43:15.966 DEBUG 23016 [nio-8980-exec-4] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:43:15.968 DEBUG 23016 [nio-8980-exec-4] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.id DESC, a.eid DESC LIMIT 20
2021-01-08 21:43:15.968 DEBUG 23016 [nio-8980-exec-4] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:43:15.970 DEBUG 23016 [nio-8980-exec-4] [c.j.m.e.dao.TyuangongDao.findList      ] - <==      Total: 8
2021-01-08 21:43:15.986 DEBUG 23016 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:43:15.981  用时: 103毫秒  URI: /js/a/employee/tyuangong/listData  总内存: 552.5MB  已用内存: 445.548MB
2021-01-08 21:43:15.994 DEBUG 23016 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 5毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:43:15.995 DEBUG 23016 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:43:15.996 DEBUG 23016 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:43:15.997 DEBUG 23016 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539367690027008(String), select(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:43:15.985(Timestamp), /js/a/employee/tyuangong/listData(String), POST(String), orgId=&name=&sex=&age=&zhiwei=&shifoubumenlingdao=&loginname=&loginpw=&del=&pageNo=&pageSize=&orderBy=(String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 103(Long)
2021-01-08 21:43:15.999 DEBUG 23016 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:43:20.063 DEBUG 23016 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:43:20.063  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2021-01-08 21:43:20.096 INFO  23016 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2021-01-08 21:43:20.103 DEBUG 23016 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:43:20.099  用时: 36毫秒  URI: /js/a/gen/genTable/list  总内存: 552.5MB  已用内存: 448.567MB
2021-01-08 21:43:20.107 DEBUG 23016 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:43:20.108 DEBUG 23016 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:43:20.109 DEBUG 23016 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:43:20.110 DEBUG 23016 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539384957976576(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:43:20.102(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 36(Long)
2021-01-08 21:43:20.111 DEBUG 23016 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:43:20.186 DEBUG 23016 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:43:20.186  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:43:20.194 DEBUG 23016 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:43:20.194 DEBUG 23016 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:43:20.209 DEBUG 23016 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:43:20.211 DEBUG 23016 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:43:20.216 DEBUG 23016 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:43:20.216 DEBUG 23016 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:43:20.218 DEBUG 23016 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:43:20.242 DEBUG 23016 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:43:20.237  用时: 51毫秒  URI: /js/a/gen/genTable/listData  总内存: 552.5MB  已用内存: 450.657MB
2021-01-08 21:43:20.250 DEBUG 23016 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:43:20.251 DEBUG 23016 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:43:20.251 DEBUG 23016 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:43:20.254 DEBUG 23016 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539385528401920(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:43:20.238(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 51(Long)
2021-01-08 21:43:20.262 DEBUG 23016 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:43:21.972 DEBUG 23016 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:43:21.972  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:43:21.976 DEBUG 23016 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:43:21.976 DEBUG 23016 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:43:21.980 DEBUG 23016 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:43:21.981 DEBUG 23016 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:43:21.983 DEBUG 23016 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:43:21.985 DEBUG 23016 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:43:21.991 DEBUG 23016 [io-8980-exec-10] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:43:21.992 DEBUG 23016 [io-8980-exec-10] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:43:21.999 DEBUG 23016 [io-8980-exec-10] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:43:22.008 DEBUG 23016 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:43:22.013 DEBUG 23016 [io-8980-exec-10] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 21:43:22.013 DEBUG 23016 [io-8980-exec-10] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_yuangong(String), t_yuangong(String)
2021-01-08 21:43:22.016 DEBUG 23016 [io-8980-exec-10] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 21:43:22.019 DEBUG 23016 [io-8980-exec-10] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 21:43:22.019 DEBUG 23016 [io-8980-exec-10] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:43:22.022 DEBUG 23016 [io-8980-exec-10] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 11
2021-01-08 21:43:22.029 DEBUG 23016 [io-8980-exec-10] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 21:43:22.029 DEBUG 23016 [io-8980-exec-10] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:43:22.032 DEBUG 23016 [io-8980-exec-10] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 2
2021-01-08 21:43:22.043 DEBUG 23016 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:43:22.043 DEBUG 23016 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will not be managed by Spring
2021-01-08 21:43:22.049 DEBUG 23016 [io-8980-exec-10] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:43:22.050 DEBUG 23016 [io-8980-exec-10] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 21:43:22.052 DEBUG 23016 [io-8980-exec-10] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 21:43:22.053 DEBUG 23016 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:43:22.053 DEBUG 23016 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will not be managed by Spring
2021-01-08 21:43:22.059 DEBUG 23016 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:43:22.059 DEBUG 23016 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 21:43:22.064 DEBUG 23016 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 5
2021-01-08 21:43:22.066 DEBUG 23016 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:43:22.073 DEBUG 23016 [io-8980-exec-10] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 21:43:22.074 DEBUG 23016 [io-8980-exec-10] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 21:43:22.075 DEBUG 23016 [io-8980-exec-10] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 21:43:22.076 INFO  23016 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:43:22.102 DEBUG 23016 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:43:22.101  用时: 129毫秒  URI: /js/a/gen/genTable/form  总内存: 552.5MB  已用内存: 456.930MB
2021-01-08 21:43:22.110 DEBUG 23016 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:43:22.111 DEBUG 23016 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:43:22.111 DEBUG 23016 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:43:22.116 DEBUG 23016 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539393346584576(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:43:22.102(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=t_yuangong(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 129(Long)
2021-01-08 21:43:22.117 DEBUG 23016 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:44:27.200 DEBUG 23016 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:44:27.200  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 21:44:27.216 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:44:27.216 DEBUG 23016 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:44:27.218 DEBUG 23016 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:44:27.219 DEBUG 23016 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:44:27.220 DEBUG 23016 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:44:27.221 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:44:27.224 DEBUG 23016 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:44:27.225 DEBUG 23016 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:44:27.227 DEBUG 23016 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:44:27.521 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 3毫秒: UPDATE `js_gen_table` SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2021-01-08 21:44:27.522 DEBUG 23016 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:44:27.522 DEBUG 23016 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE `js_gen_table` SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ?
2021-01-08 21:44:27.523 DEBUG 23016 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: Tyuangong(String), t_yuangong(String), (String), eid(String), (String), crud(String), com.jeesite.modules(String), employee(String), (String), employee(String), employee(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 21:44:27.519(Timestamp), (String), t_yuangong(String)
2021-01-08 21:44:27.524 DEBUG 23016 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2021-01-08 21:44:27.527 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:44:27.528 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:44:27.529 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), id(String), 10(Integer), int(String), id(String), id(String), id(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582120304640(String)
2021-01-08 21:44:27.531 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:44:27.532 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:44:27.533 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:44:27.534 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), org_id(String), 20(Integer), int(String), 部门(String), 部门(String), orgId(String), Long(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"digits","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582204190720(String)
2021-01-08 21:44:27.536 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:44:27.537 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:44:27.538 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:44:27.539 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), eid(String), 30(Integer), varchar(55)(String), 工号(String), 工号(String), eid(String), String(String), 1(String), 0(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582275493888(String)
2021-01-08 21:44:27.547 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:44:27.551 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 3毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:44:27.552 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:44:27.558 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), name(String), 40(Integer), varchar(50)(String), 姓名(String), 姓名(String), name(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), LIKE(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582569095168(String)
2021-01-08 21:44:27.559 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:44:27.564 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 5毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:44:27.565 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:44:27.566 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), sex(String), 50(Integer), varchar(50)(String), 性别(String), 性别(String), sex(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582594260992(String)
2021-01-08 21:44:27.567 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:44:27.569 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:44:27.570 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:44:27.572 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), age(String), 60(Integer), varchar(50)(String), 年龄(String), 年龄(String), age(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582611038208(String)
2021-01-08 21:44:27.573 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:44:27.576 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:44:27.577 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:44:27.578 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), zhiwei(String), 70(Integer), varchar(50)(String), 职位(String), 职位(String), zhiwei(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582627815424(String)
2021-01-08 21:44:27.579 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:44:27.582 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:44:27.583 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:44:27.584 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), shifoubumenlingdao(String), 80(Integer), varchar(50)(String), 是否为领导(String), 是否为领导(String), shifoubumenlingdao(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582661369856(String)
2021-01-08 21:44:27.585 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:44:27.586 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:44:27.587 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:44:27.588 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), loginname(String), 90(Integer), varchar(50)(String), 账户名(String), 账户名(String), loginname(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582682341376(String)
2021-01-08 21:44:27.589 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:44:27.590 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:44:27.591 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:44:27.592 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), loginpw(String), 100(Integer), varchar(50)(String), 密码(String), 密码(String), loginpw(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582703312896(String)
2021-01-08 21:44:27.593 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:44:27.594 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:44:27.595 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:44:27.597 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), del(String), 110(Integer), varchar(50)(String), del(String), del(String), del(String), String(String), (String), 1(String), (String), (String), (String), (String), EQ(String), (String), hidden(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347532582732673024(String)
2021-01-08 21:44:27.598 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:44:27.634 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:44:27.634 DEBUG 23016 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:44:27.638 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC
2021-01-08 21:44:27.639 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:44:27.641 DEBUG 23016 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 1
2021-01-08 21:44:27.642 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:44:27.646 DEBUG 23016 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:44:27.647 DEBUG 23016 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:44:27.653 DEBUG 23016 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 4
2021-01-08 21:44:27.663 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TchuqinDao.xml
2021-01-08 21:44:27.665 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.employee.dao.TchuqinDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tchuqin">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 21:44:27.667 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TchuqinDao.xml
2021-01-08 21:44:27.682 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tchuqin.java
2021-01-08 21:44:27.749 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.entity;

import org.hibernate.validator.constraints.Length;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * employeeEntity
 * @author LX
 * @version 2021-01-08
 */
@Table(name="t_chuqin", alias="a", columns={
		@Column(name="id", attrName="id", label="id", isPK=true),
		@Column(name="yuefen", attrName="yuefen", label="yuefen"),
		@Column(name="tianshu", attrName="tianshu", label="tianshu"),
		@Column(name="e_id", attrName="eid.id", label="e_id", isPK=true),
	}, orderBy="a.id ASC, a.e_id ASC"
)
public class Tchuqin extends DataEntity<Tchuqin> {
	
	private static final long serialVersionUID = 1L;
	private String yuefen;		// yuefen
	private Long tianshu;		// tianshu
	private Tyuangong eid;		// e_id 父类
	
	public Tchuqin() {
		this(null, null);
	}


	public Tchuqin(Tyuangong eid){
		this.eid = eid;
	}
	
	@Length(min=0, max=55, message="yuefen长度不能超过 55 个字符")
	public String getYuefen() {
		return yuefen;
	}

	public void setYuefen(String yuefen) {
		this.yuefen = yuefen;
	}
	
	public Long getTianshu() {
		return tianshu;
	}

	public void setTianshu(Long tianshu) {
		this.tianshu = tianshu;
	}
	
	public Tyuangong getEid() {
		return eid;
	}

	public void setEid(Tyuangong eid) {
		this.eid = eid;
	}
	
}
2021-01-08 21:44:27.752 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tchuqin.java
2021-01-08 21:44:27.753 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TchuqinDao.java
2021-01-08 21:44:27.758 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.employee.entity.Tchuqin;

/**
 * employeeDAO接口
 * @author LX
 * @version 2021-01-08
 */
@MyBatisDao
public interface TchuqinDao extends CrudDao<Tchuqin> {
	
}
2021-01-08 21:44:27.759 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TchuqinDao.java
2021-01-08 21:44:27.761 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TyuangongDao.xml
2021-01-08 21:44:27.761 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.employee.dao.TyuangongDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tyuangong">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 21:44:27.766 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TyuangongDao.xml
2021-01-08 21:44:27.766 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tyuangong.java
2021-01-08 21:44:27.779 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.entity;

import org.hibernate.validator.constraints.Length;
import java.util.List;
import com.jeesite.common.collect.ListUtils;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * employeeEntity
 * @author LX
 * @version 2021-01-08
 */
@Table(name="t_yuangong", alias="a", columns={
		@Column(name="id", attrName="id", label="id", isPK=true),
		@Column(name="org_id", attrName="orgId", label="部门"),
		@Column(name="eid", attrName="eid", label="工号", isPK=true),
		@Column(name="name", attrName="name", label="姓名", queryType=QueryType.LIKE),
		@Column(name="sex", attrName="sex", label="性别"),
		@Column(name="age", attrName="age", label="年龄"),
		@Column(name="zhiwei", attrName="zhiwei", label="职位"),
		@Column(name="shifoubumenlingdao", attrName="shifoubumenlingdao", label="是否为领导"),
		@Column(name="loginname", attrName="loginname", label="账户名"),
		@Column(name="loginpw", attrName="loginpw", label="密码"),
		@Column(name="del", attrName="del", label="del", isInsert=false, isUpdate=false, isQuery=false),
	}, orderBy="a.id DESC, a.eid DESC"
)
public class Tyuangong extends DataEntity<Tyuangong> {
	
	private static final long serialVersionUID = 1L;
	private Long orgId;		// 部门
	private String eid;		// 工号
	private String name;		// 姓名
	private String sex;		// 性别
	private String age;		// 年龄
	private String zhiwei;		// 职位
	private String shifoubumenlingdao;		// 是否为领导
	private String loginname;		// 账户名
	private String loginpw;		// 密码
	private String del;		// del
	private List<Tchuqin> tchuqinList = ListUtils.newArrayList();		// 子表列表
	
	public Tyuangong() {
		this(null, null);
	}

	public Tyuangong(Long id, String eid){
		this.id = id;
		this.eid = eid;
	}
	
	public Long getOrgId() {
		return orgId;
	}

	public void setOrgId(Long orgId) {
		this.orgId = orgId;
	}
	
	public String getEid() {
		return eid;
	}

	public void setEid(String eid) {
		this.eid = eid;
	}
	
	@Length(min=0, max=50, message="姓名长度不能超过 50 个字符")
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}
	
	@Length(min=0, max=50, message="性别长度不能超过 50 个字符")
	public String getSex() {
		return sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}
	
	@Length(min=0, max=50, message="年龄长度不能超过 50 个字符")
	public String getAge() {
		return age;
	}

	public void setAge(String age) {
		this.age = age;
	}
	
	@Length(min=0, max=50, message="职位长度不能超过 50 个字符")
	public String getZhiwei() {
		return zhiwei;
	}

	public void setZhiwei(String zhiwei) {
		this.zhiwei = zhiwei;
	}
	
	@Length(min=0, max=50, message="是否为领导长度不能超过 50 个字符")
	public String getShifoubumenlingdao() {
		return shifoubumenlingdao;
	}

	public void setShifoubumenlingdao(String shifoubumenlingdao) {
		this.shifoubumenlingdao = shifoubumenlingdao;
	}
	
	@Length(min=0, max=50, message="账户名长度不能超过 50 个字符")
	public String getLoginname() {
		return loginname;
	}

	public void setLoginname(String loginname) {
		this.loginname = loginname;
	}
	
	@Length(min=0, max=50, message="密码长度不能超过 50 个字符")
	public String getLoginpw() {
		return loginpw;
	}

	public void setLoginpw(String loginpw) {
		this.loginpw = loginpw;
	}
	
	public String getDel() {
		return del;
	}

	public void setDel(String del) {
		this.del = del;
	}
	
	public List<Tchuqin> getTchuqinList() {
		return tchuqinList;
	}

	public void setTchuqinList(List<Tchuqin> tchuqinList) {
		this.tchuqinList = tchuqinList;
	}
	
}
2021-01-08 21:44:27.783 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tyuangong.java
2021-01-08 21:44:27.784 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TyuangongDao.java
2021-01-08 21:44:27.784 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.employee.entity.Tyuangong;

/**
 * employeeDAO接口
 * @author LX
 * @version 2021-01-08
 */
@MyBatisDao
public interface TyuangongDao extends CrudDao<Tyuangong> {
	
}
2021-01-08 21:44:27.785 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TyuangongDao.java
2021-01-08 21:44:27.785 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\service\TyuangongService.java
2021-01-08 21:44:27.795 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.jeesite.common.entity.Page;
import com.jeesite.common.service.CrudService;
import com.jeesite.modules.employee.entity.Tyuangong;
import com.jeesite.modules.employee.dao.TyuangongDao;
import com.jeesite.modules.employee.entity.Tchuqin;
import com.jeesite.modules.employee.dao.TchuqinDao;

/**
 * employeeService
 * @author LX
 * @version 2021-01-08
 */
@Service
@Transactional(readOnly=true)
public class TyuangongService extends CrudService<TyuangongDao, Tyuangong> {
	
	@Autowired
	private TchuqinDao tchuqinDao;
	
	/**
	 * 获取单条数据
	 * @param tyuangong
	 * @return
	 */
	@Override
	public Tyuangong get(Tyuangong tyuangong) {
		Tyuangong entity = super.get(tyuangong);
		if (entity != null){
			Tchuqin tchuqin = new Tchuqin(entity);
			tchuqin.setStatus(Tchuqin.STATUS_NORMAL);
			entity.setTchuqinList(tchuqinDao.findList(tchuqin));
		}
		return entity;
	}
	
	/**
	 * 查询分页数据
	 * @param tyuangong 查询条件
	 * @param tyuangong.page 分页对象
	 * @return
	 */
	@Override
	public Page<Tyuangong> findPage(Tyuangong tyuangong) {
		return super.findPage(tyuangong);
	}
	
	/**
	 * 保存数据（插入或更新）
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void save(Tyuangong tyuangong) {
		super.save(tyuangong);
		// 保存 Tyuangong子表
		for (Tchuqin tchuqin : tyuangong.getTchuqinList()){
			if (!Tchuqin.STATUS_DELETE.equals(tchuqin.getStatus())){
				tchuqin.setEid(tyuangong);
				if (tchuqin.getIsNewRecord()){
					tchuqinDao.insert(tchuqin);
				}else{
					tchuqinDao.update(tchuqin);
				}
			}else{
				tchuqinDao.delete(tchuqin);
			}
		}
	}
	
	/**
	 * 更新状态
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void updateStatus(Tyuangong tyuangong) {
		super.updateStatus(tyuangong);
	}
	
	/**
	 * 删除数据
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void delete(Tyuangong tyuangong) {
		super.delete(tyuangong);
		Tchuqin tchuqin = new Tchuqin();
		tchuqin.setEid(tyuangong);
		tchuqinDao.deleteByEntity(tchuqin);
	}
	
}
2021-01-08 21:44:27.799 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\service\TyuangongService.java
2021-01-08 21:44:27.799 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\web\TyuangongController.java
2021-01-08 21:44:27.806 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.jeesite.common.config.Global;
import com.jeesite.common.entity.Page;
import com.jeesite.common.web.BaseController;
import com.jeesite.modules.employee.entity.Tyuangong;
import com.jeesite.modules.employee.service.TyuangongService;

/**
 * employeeController
 * @author LX
 * @version 2021-01-08
 */
@Controller
@RequestMapping(value = "${adminPath}/employee/tyuangong")
public class TyuangongController extends BaseController {

	@Autowired
	private TyuangongService tyuangongService;
	
	/**
	 * 获取数据
	 */
	@ModelAttribute
	public Tyuangong get(Long id, String eid, boolean isNewRecord) {
		Tyuangong tyuangong = new Tyuangong();
		tyuangong.setId(id);
		tyuangong.setEid(eid);
		tyuangong.setIsNewRecord(isNewRecord);
		return tyuangongService.getAndValid(tyuangong);
	}
	
	/**
	 * 查询列表
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = {"list", ""})
	public String list(Tyuangong tyuangong, Model model) {
		model.addAttribute("tyuangong", tyuangong);
		return "modules/employee/tyuangongList";
	}
	
	/**
	 * 查询列表数据
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = "listData")
	@ResponseBody
	public Page<Tyuangong> listData(Tyuangong tyuangong, HttpServletRequest request, HttpServletResponse response) {
		tyuangong.setPage(new Page<>(request, response));
		Page<Tyuangong> page = tyuangongService.findPage(tyuangong);
		return page;
	}

	/**
	 * 查看编辑表单
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = "form")
	public String form(Tyuangong tyuangong, Model model) {
		model.addAttribute("tyuangong", tyuangong);
		return "modules/employee/tyuangongForm";
	}

	/**
	 * 保存数据
	 */
	@RequiresPermissions("employee:tyuangong:edit")
	@PostMapping(value = "save")
	@ResponseBody
	public String save(@Validated Tyuangong tyuangong) {
		tyuangongService.save(tyuangong);
		return renderResult(Global.TRUE, text("保存employee成功！"));
	}
	
	/**
	 * 删除数据
	 */
	@RequiresPermissions("employee:tyuangong:edit")
	@RequestMapping(value = "delete")
	@ResponseBody
	public String delete(Tyuangong tyuangong) {
		tyuangongService.delete(tyuangong);
		return renderResult(Global.TRUE, text("删除employee成功！"));
	}
	
}
2021-01-08 21:44:27.808 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\web\TyuangongController.java
2021-01-08 21:44:27.809 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongList.html
2021-01-08 21:44:27.827 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: 'employee管理', libs: ['dataGrid']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header">
			<div class="box-title">
				<i class="fa icon-notebook"></i> ${text('employee管理')}
			</div>
			<div class="box-tools pull-right">
				<a href="#" class="btn btn-default" id="btnSearch" title="${text('查询')}"><i class="fa fa-filter"></i> ${text('查询')}</a>
				<% if(hasPermi('employee:tyuangong:edit')){ %>
					<a href="${ctx}/employee/tyuangong/form" class="btn btn-default btnTool" title="${text('新增employee')}"><i class="fa fa-plus"></i> ${text('新增')}</a>
				<% } %>
				<a href="#" class="btn btn-default" id="btnSetting" title="${text('设置')}"><i class="fa fa-navicon"></i></a>
			</div>
		</div>
		<div class="box-body">
			<#form:form id="searchForm" model="${tyuangong}" action="${ctx}/employee/tyuangong/listData" method="post" class="form-inline hide"
					data-page-no="${parameter.pageNo}" data-page-size="${parameter.pageSize}" data-order-by="${parameter.orderBy}">
				<div class="form-group">
					<label class="control-label">${text('部门')}：</label>
					<div class="control-inline">
						<#form:input path="orgId" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('工号')}：</label>
					<div class="control-inline">
						<#form:input path="eid" maxlength="55" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('姓名')}：</label>
					<div class="control-inline">
						<#form:input path="name" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('性别')}：</label>
					<div class="control-inline">
						<#form:input path="sex" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('年龄')}：</label>
					<div class="control-inline">
						<#form:input path="age" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('职位')}：</label>
					<div class="control-inline">
						<#form:input path="zhiwei" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('是否为领导')}：</label>
					<div class="control-inline">
						<#form:input path="shifoubumenlingdao" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('账户名')}：</label>
					<div class="control-inline">
						<#form:input path="loginname" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('密码')}：</label>
					<div class="control-inline">
						<#form:input path="loginpw" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<button type="submit" class="btn btn-primary btn-sm">${text('查询')}</button>
					<button type="reset" class="btn btn-default btn-sm">${text('重置')}</button>
				</div>
			</#form:form>
			<table id="dataGrid"></table>
			<div id="dataGridPage"></div>
		</div>
	</div>
</div>
<% } %>
<script>
// 初始化DataGrid对象
$('#dataGrid').dataGrid({
	searchForm: $("#searchForm"),
	columnModel: [
		{header:'${text("部门")}', name:'orgId', index:'a.org_id', width:150, align:"left", frozen:true, formatter: function(val, obj, row, act){
			return '<a href="${ctx}/employee/tyuangong/form?id='+row.id+'&eid='+row.eid+'" class="btnList" data-title="${text("编辑employee")}">'+(val||row.id)+'</a>';
		}},
		{header:'${text("工号")}', name:'eid', index:'a.eid', width:150, align:"left"},
		{header:'${text("姓名")}', name:'name', index:'a.name', width:150, align:"left"},
		{header:'${text("性别")}', name:'sex', index:'a.sex', width:150, align:"left"},
		{header:'${text("年龄")}', name:'age', index:'a.age', width:150, align:"left"},
		{header:'${text("职位")}', name:'zhiwei', index:'a.zhiwei', width:150, align:"left"},
		{header:'${text("是否为领导")}', name:'shifoubumenlingdao', index:'a.shifoubumenlingdao', width:150, align:"left"},
		{header:'${text("账户名")}', name:'loginname', index:'a.loginname', width:150, align:"left"},
		{header:'${text("密码")}', name:'loginpw', index:'a.loginpw', width:150, align:"left"},
		{header:'${text("操作")}', name:'actions', width:120, sortable:false, title:false, formatter: function(val, obj, row, act){
			var actions = [];
			<% if(hasPermi('employee:tyuangong:edit')){ %>
				actions.push('<a href="${ctx}/employee/tyuangong/form?id='+row.id+'&eid='+row.eid+'" class="btnList" title="${text("编辑employee")}"><i class="fa fa-pencil"></i></a>&nbsp;');
				actions.push('<a href="${ctx}/employee/tyuangong/delete?id='+row.id+'&eid='+row.eid+'" class="btnList" title="${text("删除employee")}" data-confirm="${text("确认要删除该employee吗？")}"><i class="fa fa-trash-o"></i></a>&nbsp;');
			<% } %>
			return actions.join('');
		}}
	],
	// 加载成功后执行事件
	ajaxSuccess: function(data){
		
	}
});
</script>
2021-01-08 21:44:27.828 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongList.html
2021-01-08 21:44:27.829 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongForm.html
2021-01-08 21:44:27.860 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: 'employee管理', libs: ['validate','dataGrid']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header with-border">
			<div class="box-title">
				<i class="fa icon-note"></i> ${text(tyuangong.isNewRecord ? '新增employee' : '编辑employee')}
			</div>
			<div class="box-tools pull-right">
				<button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
			</div>
		</div>
		<#form:form id="inputForm" model="${tyuangong}" action="${ctx}/employee/tyuangong/save" method="post" class="form-horizontal">
			<div class="box-body">
				<div class="form-unit">${text('基本信息')}</div>
				<#form:hidden path="id"/>
				<div class="row">
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('部门')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="orgId" class="form-control digits"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required ">*</span> ${text('工号')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="eid" maxlength="55" readonly="${!tyuangong.isNewRecord}" class="form-control required abc"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('姓名')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="name" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('性别')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="sex" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('年龄')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="age" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('职位')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="zhiwei" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('是否为领导')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="shifoubumenlingdao" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('账户名')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="loginname" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('密码')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="loginpw" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
				</div>
				<h4 class="form-unit">${text('t_chuqin')}</h4>
				<div class="ml10 mr10">
					<table id="tchuqinDataGrid"></table>
					<% if (hasPermi('employee:tyuangong:edit')){ %>
						<a href="#" id="tchuqinDataGridAddRowBtn" class="btn btn-primary btn-sm mt10 mb10"><i class="fa fa-plus"></i> ${text('增行')}</a>
					<% } %>
				</div>
			</div>
			<div class="box-footer">
				<div class="row">
					<div class="col-sm-offset-2 col-sm-10">
						<% if (hasPermi('employee:tyuangong:edit')){ %>
							<button type="submit" class="btn btn-sm btn-primary" id="btnSubmit"><i class="fa fa-check"></i> ${text('保 存')}</button>&nbsp;
						<% } %>
						<button type="button" class="btn btn-sm btn-default" id="btnCancel" onclick="js.closeCurrentTabPage()"><i class="fa fa-reply-all"></i> ${text('关 闭')}</button>
					</div>
				</div>
			</div>
		</#form:form>
	</div>
</div>
<% } %>
<script>
//初始化t_chuqinDataGrid对象
$("#tchuqinDataGrid").dataGrid({

	data: ${toJson(tyuangong.tchuqinList)},
	datatype: "local", // 设置本地数据
	autoGridHeight: function(){return 'auto'}, // 设置自动高度
	
	// 设置数据表格列
	columnModel: [
		{header:'状态', name:'status', editable:true, hidden:true},
		{header:'主键', name:'id', editable:true, hidden:true},
		{header:'${text("yuefen")}', name:'yuefen', width:150, editable:true, edittype:'text', editoptions:{'maxlength':'55', 'class':'form-control'}},
		{header:'${text("tianshu")}', name:'tianshu', width:150, editable:true, edittype:'text', editoptions:{'class':'form-control digits'}},
		{header:'${text("e_id")}', name:'eid.id', editable:true, hidden:true},
		{header:'${text("操作")}', name:'actions', width:80, sortable:false, fixed:true, formatter: function(val, obj, row, act){
			var actions = [];
			if (val == 'new'){
				actions.push('<a href="#" onclick="js.confirm(\'${text("你确认要删除这条数据吗？")}\', function(){$(\'#tchuqinDataGrid\').dataGrid(\'delRowData\',\''+obj.rowId+'\')});return false;"><i class="fa fa-trash-o"></i></a>&nbsp;');
			}else{
				actions.push('<a href="#" onclick="js.confirm(\'${text("你确认要删除这条数据吗？")}\', function(){$(\'#tchuqinDataGrid\').dataGrid(\'setRowData\',\''+obj.rowId+'\',null,{display:\'none\'});$(\'#'+obj.rowId+'_status\').val(\''+Global.STATUS_DELETE+'\');});return false;"><i class="fa fa-trash-o"></i></a>&nbsp;');
			}
			return actions.join('');
		}, editoptions: {defaultValue: 'new'}}
	],
	
	// 编辑表格参数
	editGrid: true,				// 是否是编辑表格
	editGridInitRowNum: 1,		// 编辑表格的初始化新增行数
	editGridAddRowBtn: $('#tchuqinDataGridAddRowBtn'),	// 子表增行按钮
	editGridAddRowInitData: {id: '', status: Global.STATUS_NORMAL},	// 新增行的时候初始化的数据
	
	// 编辑表格的提交数据参数
	editGridInputFormListName: 'tchuqinList', // 提交的数据列表名
	editGridInputFormListAttrs: 'status,id,yuefen,tianshu,eid.id,', // 提交数据列表的属性字段
	
	// 加载成功后执行事件
	ajaxSuccess: function(data){
		
	}
});
</script>
<script>
$("#inputForm").validate({
	submitHandler: function(form){
		js.ajaxSubmitForm($(form), function(data){
			js.showMessage(data.message);
			if(data.result == Global.TRUE){
				js.closeCurrentTabPage(function(contentWindow){
					contentWindow.page();
				});
			}
		}, "json");
    }
});
</script>
2021-01-08 21:44:27.861 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongForm.html
2021-01-08 21:44:27.874 DEBUG 23016 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:44:27.866  用时: 666毫秒  URI: /js/a/gen/genTable/save  总内存: 648MB  已用内存: 118.057MB
2021-01-08 21:44:27.879 DEBUG 23016 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:44:27.880 DEBUG 23016 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:44:27.881 DEBUG 23016 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:44:27.882 DEBUG 23016 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539669210152960(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:44:27.874(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=t_yuangong&comments=t_yuangong&className=Tyuangong&functionAuthor=LX&parentTableName=&parentTableFkName=eid&remarks=&columnList[0].id=1347532582120304640&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=id&columnList[0].columnType=int&columnList[0].attrType=Long&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=6/4/8&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1347532582204190720&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=org_id&columnList[1].comments=部门&columnList[1].columnType=int&columnList[1].attrType=Long&columnList[1].fullAttrName=orgId&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=6/4/8&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[1].optionMap['fieldValid']=digits&columnList[2].id=1347532582275493888&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=eid&columnList[2].comments=工号&columnList[2].columnType=varchar(55)&columnList[2].attrType=String&columnList[2].fullAttrName=eid&!columnList[2].isPk=&columnList[2].isPk=1&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&columnList[2].isUpdate=1&!columnList[2].isList=&columnList[2].isList=1&!columnList[2].isQuery=&columnList[2].isQuery=1&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].isRequired=1&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=6/4/8&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[2].optionMap['fieldValid']=abc&columnList[3].id=1347532582569095168&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=name&columnList[3].comments=姓名&columnList[3].columnType=varchar(50)&columnList[3].attrType=String&columnList[3].fullAttrName=name&!columnList[3].isPk=&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&columnList[3].isUpdate=1&!columnList[3].isList=&columnList[3].isList=1&!columnList[3].isQuery=&columnList[3].isQuery=1&columnList[3].queryType=LIKE&!columnList[3].isEdit=&columnList[3].isEdit=1&!columnList[3].isRequired=&columnList[3].showType=input&columnList[3].optionMap['gridRowCol']=6/4/8&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[4].id=1347532582594260992&columnList[4].status=&columnList[4].columnSort=50&columnList[4].columnName=sex&columnList[4].comments=性别&columnList[4].columnType=varchar(50)&columnList[4].attrType=String&columnList[4].fullAttrName=sex&!columnList[4].isPk=&!columnList[4].isInsert=&columnList[4].isInsert=1&!columnList[4].isUpdate=&columnList[4].isUpdate=1&!columnList[4].isList=&columnList[4].isList=1&!columnList[4].isQuery=&columnList[4].isQuery=1&columnList[4].queryType=EQ&!columnList[4].isEdit=&columnList[4].isEdit=1&!columnList[4].isRequired=&columnList[4].showType=input&columnList[4].optionMap['gridRowCol']=6/4/8&!columnList[4].optionMap['isNewLine']=&columnList[4].optionMap['dictName']=&columnList[4].optionMap['dictType']=&!columnList[4].optionMap['fieldValid']=&columnList[5].id=1347532582611038208&columnList[5].status=&columnList[5].columnSort=60&columnList[5].columnName=age&columnList[5].comments=年龄&columnList[5].columnType=varchar(50)&columnList[5].attrType=String&columnList[5].fullAttrName=age&!columnList[5].isPk=&!columnList[5].isInsert=&columnList[5].isInsert=1&!columnList[5].isUpdate=&columnList[5].isUpdate=1&!columnList[5].isList=&columnList[5].isList=1&!columnList[5].isQuery=&columnList[5].isQuery=1&columnList[5].queryType=EQ&!columnList[5].isEdit=&columnList[5].isEdit=1&!columnList[5].isRequired=&columnList[5].showType=input&columnList[5].optionMap['gridRowCol']=6/4/8&!columnList[5].optionMap['isNewLine']=&columnList[5].optionMap['dictName']=&columnList[5].optionMap['dictType']=&!columnList[5].optionMap['fieldValid']=&columnList[6].id=1347532582627815424&columnList[6].status=&columnList[6].columnSort=70&columnList[6].columnName=zhiwei&columnList[6].comments=职位&columnList[6].columnType=varchar(50)&columnList[6].attrType=String&columnList[6].fullAttrName=zhiwei&!columnList[6].isPk=&!columnList[6].isInsert=&columnList[6].isInsert=1&!columnList[6].isUpdate=&columnList[6].isUpdate=1&!columnList[6].isList=&columnList[6].isList=1&!columnList[6].isQuery=&columnList[6].isQuery=1&columnList[6].queryType=EQ&!columnList[6].isEdit=&columnList[6].isEdit=1&!columnList[6].isRequired=&columnList[6].showType=input&columnList[6].optionMap['gridRowCol']=6/4/8&!columnList[6].optionMap['isNewLine']=&columnList[6].optionMap['dictName']=&columnList[6].optionMap['dictType']=&!columnList[6].optionMap['fieldValid']=&columnList[7].id=1347532582661369856&columnList[7].status=&columnList[7].columnSort=80&columnList[7].columnName=shifoubumenlingdao&columnList[7].comments=是否为领导&columnList[7].columnType=varchar(50)&columnList[7].attrType=String&columnList[7].fullAttrName=shifoubumenlingdao&!columnList[7].isPk=&!columnList[7].isInsert=&columnList[7].isInsert=1&!columnList[7].isUpdate=&columnList[7].isUpdate=1&!columnList[7].isList=&columnList[7].isList=1&!columnList[7].isQuery=&columnList[7].isQuery=1&columnList[7].queryType=EQ&!columnList[7].isEdit=&columnList[7].isEdit=1&!columnList[7].isRequired=&columnList[7].showType=input&columnList[7].optionMap['gridRowCol']=6/4/8&!columnList[7].optionMap['isNewLine']=&columnList[7].optionMap['dictName']=&columnList[7].optionMap['dictType']=&!columnList[7].optionMap['fieldValid']=&columnList[8].id=1347532582682341376&columnList[8].status=&columnList[8].columnSort=90&columnList[8].columnName=loginname&columnList[8].comments=账户名&columnList[8].columnType=varchar(50)&columnList[8].attrType=String&columnList[8].fullAttrName=loginname&!columnList[8].isPk=&!columnList[8].isInsert=&columnList[8].isInsert=1&!columnList[8].isUpdate=&columnList[8].isUpdate=1&!columnList[8].isList=&columnList[8].isList=1&!columnList[8].isQuery=&columnList[8].isQuery=1&columnList[8].queryType=EQ&!columnList[8].isEdit=&columnList[8].isEdit=1&!columnList[8].isRequired=&columnList[8].showType=input&columnList[8].optionMap['gridRowCol']=6/4/8&!columnList[8].optionMap['isNewLine']=&columnList[8].optionMap['dictName']=&columnList[8].optionMap['dictType']=&!columnList[8].optionMap['fieldValid']=&columnList[9].id=1347532582703312896&columnList[9].status=&columnList[9].columnSort=100&columnList[9].columnName=loginpw&columnList[9].comments=密码&columnList[9].columnType=varchar(50)&columnList[9].attrType=String&columnList[9].fullAttrName=loginpw&!columnList[9].isPk=&!columnList[9].isInsert=&columnList[9].isInsert=1&!columnList[9].isUpdate=&columnList[9].isUpdate=1&!columnList[9].isList=&columnList[9].isList=1&!columnList[9].isQuery=&columnList[9].isQuery=1&columnList[9].queryType=EQ&!columnList[9].isEdit=&columnList[9].isEdit=1&!columnList[9].isRequired=&columnList[9].showType=input&columnList[9].optionMap['gridRowCol']=6/4/8&!columnList[9].optionMap['isNewLine']=&columnList[9].optionMap['dictName']=&columnList[9].optionMap['dictType']=&!columnList[9].optionMap['fieldValid']=&columnList[10].id=1347532582732673024&columnList[10].status=&columnList[10].columnSort=110&columnList[10].columnName=del&columnList[10].comments=del&columnList[10].columnType=varchar(50)&columnList[10].attrType=String&columnList[10].fullAttrName=del&!columnList[10].isPk=&!columnList[10].isInsert=&!columnList[10].isUpdate=&!columnList[10].isList=&!columnList[10].isQuery=&columnList[10].queryType=EQ&!columnList[10].isEdit=&!columnList[10].isRequired=&columnList[10].showType=hidden&columnList[10].optionMap['gridRowCol']=6/4/8&!columnList[10].optionMap['isNewLine']=&columnList[10].optionMap['dictName']=&columnList[10].optionMap['dictType']=&!columnList[10].optionMap['fieldValid']=&tplCategory=crud&packageName=com.jeesite.modules&moduleName=employee&subModuleName=&functionName=employee&functionNameSimple=employee&genBaseDir=C:\Users\Lx\work2\web&!optionMap['isHaveDisableEnable']=&optionMap['isHaveDisableEnable']=0&!optionMap['isHaveDelete']=&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&!optionMap['isImageUpload']=&optionMap['isImageUpload']=0&!optionMap['isFileUpload']=&optionMap['isFileUpload']=0&!optionMap['isBpmForm']=&optionMap['isBpmForm']=0&optionMap['bpmFormKey']=&genFlag=2&replaceFile=1&!replaceFile=0(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 666(Long)
2021-01-08 21:44:27.888 DEBUG 23016 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:44:27.906 DEBUG 23016 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:44:27.905  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:44:27.923 DEBUG 23016 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:44:27.924 DEBUG 23016 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6da7881b] will be managed by Spring
2021-01-08 21:44:27.933 DEBUG 23016 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:44:27.934 DEBUG 23016 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:44:27.936 DEBUG 23016 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:44:27.937 DEBUG 23016 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:44:27.940 DEBUG 23016 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:44:27.948 DEBUG 23016 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:44:27.945  用时: 40毫秒  URI: /js/a/gen/genTable/listData  总内存: 648MB  已用内存: 122.641MB
2021-01-08 21:44:27.952 DEBUG 23016 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:44:27.952 DEBUG 23016 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6da7881b] will be managed by Spring
2021-01-08 21:44:27.952 DEBUG 23016 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:44:27.953 DEBUG 23016 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539669520531456(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:44:27.947(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 40(Long)
2021-01-08 21:44:27.966 DEBUG 23016 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:44:35.812 DEBUG 23016 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:44:35.811  URI: /js/a/gen/genTable/createMenu  IP: 127.0.0.1
2021-01-08 21:44:35.814 DEBUG 23016 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:44:35.815 DEBUG 23016 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6da7881b] will be managed by Spring
2021-01-08 21:44:35.819 DEBUG 23016 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:44:35.820 DEBUG 23016 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:44:35.821 DEBUG 23016 [io-8980-exec-10] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:44:35.823 DEBUG 23016 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:44:35.828 DEBUG 23016 [io-8980-exec-10] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:44:35.830 DEBUG 23016 [io-8980-exec-10] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:44:35.833 DEBUG 23016 [io-8980-exec-10] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:44:35.838 INFO  23016 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: redirect:/a/sys/menu/form?menuName=employee&menuHref=/employee/tyuangong/list&permission=employee:tyuangong:view,employee:tyuangong:edit <<<<<<<<< /js/a/gen/genTable/createMenu >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#createMenu(GenTable, Model)
2021-01-08 21:44:35.853 DEBUG 23016 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:44:35.852  用时: 41毫秒  URI: /js/a/gen/genTable/createMenu  总内存: 648MB  已用内存: 128.939MB
2021-01-08 21:44:35.857 DEBUG 23016 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:44:35.857 DEBUG 23016 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6da7881b] will be managed by Spring
2021-01-08 21:44:35.858 DEBUG 23016 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:44:35.859 DEBUG 23016 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539702680698880(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:44:35.853(Timestamp), /js/a/gen/genTable/createMenu(String), GET(String), tableName=t_yuangong(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 41(Long)
2021-01-08 21:44:35.860 DEBUG 23016 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:44:35.875 DEBUG 23016 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:44:35.874  URI: /js/a/sys/menu/form  IP: 127.0.0.1
2021-01-08 21:44:35.940 DEBUG 23016 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} ORDER BY a.tree_sort DESC
2021-01-08 21:44:35.940 DEBUG 23016 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6da7881b] will be managed by Spring
2021-01-08 21:44:35.947 DEBUG 23016 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? ORDER BY a.tree_sort DESC LIMIT 1
2021-01-08 21:44:35.948 DEBUG 23016 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String)
2021-01-08 21:44:35.951 DEBUG 23016 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 1
2021-01-08 21:44:35.955 DEBUG 23016 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:44:35.955 DEBUG 23016 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6da7881b] will be managed by Spring
2021-01-08 21:44:35.965 DEBUG 23016 [nio-8980-exec-5] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2021-01-08 21:44:35.966 DEBUG 23016 [nio-8980-exec-5] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2021-01-08 21:44:35.971 DEBUG 23016 [nio-8980-exec-5] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2021-01-08 21:44:35.973 INFO  23016 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/menuForm <<<<<<<<< /js/a/sys/menu/form >>>>>>>>> com.jeesite.modules.sys.web.MenuController#form(Menu, Model)
2021-01-08 21:44:36.037 DEBUG 23016 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:44:36.037 DEBUG 23016 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6da7881b] will be managed by Spring
2021-01-08 21:44:36.042 DEBUG 23016 [nio-8980-exec-5] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:44:36.043 DEBUG 23016 [nio-8980-exec-5] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_show_hide(String), 1(String), 0(String)
2021-01-08 21:44:36.046 DEBUG 23016 [nio-8980-exec-5] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 21:44:36.052 DEBUG 23016 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:44:36.053 DEBUG 23016 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6da7881b] will be managed by Spring
2021-01-08 21:44:36.057 DEBUG 23016 [nio-8980-exec-5] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:44:36.058 DEBUG 23016 [nio-8980-exec-5] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_weight(String), 1(String), 0(String)
2021-01-08 21:44:36.064 DEBUG 23016 [nio-8980-exec-5] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 4
2021-01-08 21:44:36.086 DEBUG 23016 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:44:36.085  用时: 211毫秒  URI: /js/a/sys/menu/form  总内存: 648MB  已用内存: 147.723MB
2021-01-08 21:44:36.091 DEBUG 23016 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:44:36.091 DEBUG 23016 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6da7881b] will be managed by Spring
2021-01-08 21:44:36.092 DEBUG 23016 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:44:36.092 DEBUG 23016 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539703657971712(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 21:44:36.086(Timestamp), /js/a/sys/menu/form(String), GET(String), menuName=employee&menuHref=/employee/tyuangong/list&permission=employee:tyuangong:view,employee:tyuangong:edit(String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 211(Long)
2021-01-08 21:44:36.094 DEBUG 23016 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:44:50.822 DEBUG 23016 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:44:50.822 DEBUG 23016 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6da7881b] will be managed by Spring
2021-01-08 21:44:50.831 DEBUG 23016 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:44:50.832 DEBUG 23016 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 21:44:50.841 DEBUG 23016 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 21:44:53.119 DEBUG 23016 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:44:53.119  URI: /js/a/sys/menu/createNextNode  IP: 127.0.0.1
2021-01-08 21:44:53.125 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`menu_code` = #{menuCode}
2021-01-08 21:44:53.125 DEBUG 23016 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6da7881b] will not be managed by Spring
2021-01-08 21:44:53.128 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.sys.dao.MenuDao.get] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`menu_code` = ?
2021-01-08 21:44:53.128 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.sys.dao.MenuDao.get] - ==> Parameters: 1347532986212134912(String)
2021-01-08 21:44:53.130 DEBUG 23016 [nio-8980-exec-8] [com.jeesite.modules.sys.dao.MenuDao.get] - <==      Total: 1
2021-01-08 21:44:53.133 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} ORDER BY a.tree_sort DESC
2021-01-08 21:44:53.134 DEBUG 23016 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6da7881b] will be managed by Spring
2021-01-08 21:44:53.141 DEBUG 23016 [nio-8980-exec-8] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? ORDER BY a.tree_sort DESC LIMIT 1
2021-01-08 21:44:53.144 DEBUG 23016 [nio-8980-exec-8] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1347532986212134912(String)
2021-01-08 21:44:53.145 DEBUG 23016 [nio-8980-exec-8] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 0
2021-01-08 21:44:53.157 DEBUG 23016 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:44:53.156  用时: 37毫秒  URI: /js/a/sys/menu/createNextNode  总内存: 648MB  已用内存: 163.893MB
2021-01-08 21:44:53.165 DEBUG 23016 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 3毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:44:53.165 DEBUG 23016 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6da7881b] will be managed by Spring
2021-01-08 21:44:53.166 DEBUG 23016 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:44:53.166 DEBUG 23016 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539775258935296(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 21:44:53.157(Timestamp), /js/a/sys/menu/createNextNode(String), GET(String), parentCode=1347532986212134912(String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 37(Long)
2021-01-08 21:44:53.168 DEBUG 23016 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:44:54.413 DEBUG 23016 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:44:54.414 DEBUG 23016 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6da7881b] will be managed by Spring
2021-01-08 21:44:54.418 DEBUG 23016 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:44:54.419 DEBUG 23016 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 21:44:54.430 DEBUG 23016 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 21:44:55.869 DEBUG 23016 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:44:55.869  URI: /js/a/sys/menu/createNextNode  IP: 127.0.0.1
2021-01-08 21:44:55.874 DEBUG 23016 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} ORDER BY a.tree_sort DESC
2021-01-08 21:44:55.875 DEBUG 23016 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6da7881b] will be managed by Spring
2021-01-08 21:44:55.881 DEBUG 23016 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? ORDER BY a.tree_sort DESC LIMIT 1
2021-01-08 21:44:55.881 DEBUG 23016 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String)
2021-01-08 21:44:55.885 DEBUG 23016 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 1
2021-01-08 21:44:55.890 DEBUG 23016 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:44:55.889  用时: 20毫秒  URI: /js/a/sys/menu/createNextNode  总内存: 648MB  已用内存: 167.335MB
2021-01-08 21:44:55.894 DEBUG 23016 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:44:55.895 DEBUG 23016 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6da7881b] will be managed by Spring
2021-01-08 21:44:55.896 DEBUG 23016 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:44:55.897 DEBUG 23016 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539786717773824(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 21:44:55.889(Timestamp), /js/a/sys/menu/createNextNode(String), GET(String), parentCode=(String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 20(Long)
2021-01-08 21:44:55.898 DEBUG 23016 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:45:13.454 DEBUG 23016 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:45:13.453  URI: /js/a/sys/menu/save  IP: 127.0.0.1
2021-01-08 21:45:13.544 DEBUG 23016 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`menu_code` = #{menuCode}
2021-01-08 21:45:13.544 DEBUG 23016 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6da7881b] will be managed by Spring
2021-01-08 21:45:13.555 DEBUG 23016 [nio-8980-exec-9] [com.jeesite.modules.sys.dao.MenuDao.get] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`menu_code` = ?
2021-01-08 21:45:13.556 DEBUG 23016 [nio-8980-exec-9] [com.jeesite.modules.sys.dao.MenuDao.get] - ==> Parameters: (String)
2021-01-08 21:45:13.558 DEBUG 23016 [nio-8980-exec-9] [com.jeesite.modules.sys.dao.MenuDao.get] - <==      Total: 0
2021-01-08 21:45:13.561 DEBUG 23016 [nio-8980-exec-9] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_menu` (`status`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`, `parent_code`, `parent_codes`, `tree_sort`, `tree_sorts`, `tree_leaf`, `tree_level`, `tree_names`, `menu_code`, `menu_name`, `menu_type`, `menu_href`, `menu_target`, `menu_icon`, `menu_color`, `menu_title`, `permission`, `weight`, `is_show`, `sys_code`, `module_codes`, `extend_s1`, `extend_s2`, `extend_s3`, `extend_s4`, `extend_s5`, `extend_s6`, `extend_s7`, `extend_s8`) VALUES (#{status}, #{createBy}, #{createDate}, #{updateBy}, #{updateDate}, #{remarks}, #{parentCode}, #{parentCodes}, #{treeSort}, #{treeSorts}, #{treeLeaf}, #{treeLevel}, #{treeNames}, #{menuCode}, #{menuNameOrig}, #{menuType}, #{menuHref}, #{menuTarget}, #{menuIcon}, #{menuColor}, #{menuTitle}, #{permission}, #{weight}, #{isShow}, #{sysCode}, #{moduleCodes}, #{extend.extendS1}, #{extend.extendS2}, #{extend.extendS3}, #{extend.extendS4}, #{extend.extendS5}, #{extend.extendS6}, #{extend.extendS7}, #{extend.extendS8})
2021-01-08 21:45:13.562 DEBUG 23016 [nio-8980-exec-9] [c.j.modules.sys.dao.MenuDao.insert     ] - ==>  Preparing: INSERT INTO `js_sys_menu` (`status`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`, `parent_code`, `parent_codes`, `tree_sort`, `tree_sorts`, `tree_leaf`, `tree_level`, `tree_names`, `menu_code`, `menu_name`, `menu_type`, `menu_href`, `menu_target`, `menu_icon`, `menu_color`, `menu_title`, `permission`, `weight`, `is_show`, `sys_code`, `module_codes`, `extend_s1`, `extend_s2`, `extend_s3`, `extend_s4`, `extend_s5`, `extend_s6`, `extend_s7`, `extend_s8`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:45:13.567 DEBUG 23016 [nio-8980-exec-9] [c.j.modules.sys.dao.MenuDao.insert     ] - ==> Parameters: 0(String), system(String), 2021-01-08 21:45:13.559(Timestamp), system(String), 2021-01-08 21:45:13.559(Timestamp), (String), 0(String), 0,(String), 9070(Integer), 0000009070,(String), 1(String), 0(Integer), 员工信息(String), 1347539860831125504(String), 员工信息(String), 1(String), /employee/tyuangong/list(String), (String), icon-people(String), (String), (String), employee:tyuangong:view,employee:tyuangong:edit(String), 40(Integer), 1(String), default(String), cms(String), (String), (String), (String), (String), (String), (String), (String), (String)
2021-01-08 21:45:13.571 DEBUG 23016 [nio-8980-exec-9] [c.j.modules.sys.dao.MenuDao.insert     ] - <==    Updates: 1
2021-01-08 21:45:13.577 INFO  23016 [nio-8980-exec-9] [com.jeesite.common.cache.CacheUtils    ] - removeByKeyPrefix: userCache_system => [menuList_default_null_0__tree, menuList_default_null_0_]
2021-01-08 21:45:13.589 DEBUG 23016 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:45:13.588  用时: 135毫秒  URI: /js/a/sys/menu/save  总内存: 648MB  已用内存: 175.849MB
2021-01-08 21:45:13.595 DEBUG 23016 [  log-save-10-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:45:13.595 DEBUG 23016 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6da7881b] will be managed by Spring
2021-01-08 21:45:13.596 DEBUG 23016 [  log-save-10-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:45:13.597 DEBUG 23016 [  log-save-10-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 21:45:13.604 DEBUG 23016 [  log-save-10-3] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 75
2021-01-08 21:45:13.607 DEBUG 23016 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:45:13.671 DEBUG 23016 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6da7881b] will be managed by Spring
2021-01-08 21:45:13.672 DEBUG 23016 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:45:13.675 DEBUG 23016 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539860956954624(String), update(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 21:45:13.589(Timestamp), /js/a/sys/menu/save(String), POST(String), sysCode=default&menuCode=&parent.menuNameOrig=&parent.id=&!menuType=&menuType=1&menuNameOrig=员工信息&!moduleCodes=&moduleCodes=cms&menuHref=/employee/tyuangong/list&menuTarget=&treeSort=9070&permission=employee:tyuangong:view,employee:tyuangong:edit&menuIcon=icon-people&menuColor=&menuTitle=&!isShow=&isShow=1&weight=40&remarks=&extend.extendS1=&extend.extendS2=&extend.extendS3=&extend.extendS4=&extend.extendS5=&extend.extendS6=&extend.extendS7=&extend.extendS8=&extend.extendI1=&extend.extendI2=&extend.extendI3=&extend.extendI4=&extend.extendF1=&extend.extendF2=&extend.extendF3=&extend.extendF4=&extend.extendD1=&extend.extendD2=&extend.extendD3=&extend.extendD4=(String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 135(Long)
2021-01-08 21:45:13.678 DEBUG 23016 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:45:13.653 DEBUG 23016 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:45:13.653  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:45:13.704 DEBUG 23016 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:45:13.705 DEBUG 23016 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:13.713 DEBUG 23016 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:45:13.715 DEBUG 23016 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2021-01-08 21:45:13.736 DEBUG 23016 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 75
2021-01-08 21:45:13.746 DEBUG 23016 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:45:13.747 DEBUG 23016 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:13.764 DEBUG 23016 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:45:13.765 DEBUG 23016 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:45:13.767 DEBUG 23016 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:45:13.768 DEBUG 23016 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:45:13.770 DEBUG 23016 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:45:13.777 DEBUG 23016 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:45:13.776  用时: 123毫秒  URI: /js/a/gen/genTable/listData  总内存: 648MB  已用内存: 182.307MB
2021-01-08 21:45:13.785 DEBUG 23016 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:45:13.785 DEBUG 23016 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:13.786 DEBUG 23016 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:45:13.792 DEBUG 23016 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539861745483776(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:45:13.777(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 123(Long)
2021-01-08 21:45:13.793 DEBUG 23016 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:45:17.584 DEBUG 23016 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:45:17.584  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2021-01-08 21:45:17.589 INFO  23016 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2021-01-08 21:45:17.600 DEBUG 23016 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:45:17.598  用时: 14毫秒  URI: /js/a/gen/genTable/list  总内存: 648MB  已用内存: 189.111MB
2021-01-08 21:45:17.602 DEBUG 23016 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:45:17.603 DEBUG 23016 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:17.606 DEBUG 23016 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:45:17.609 DEBUG 23016 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539877776113664(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:45:17.6(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 14(Long)
2021-01-08 21:45:17.611 DEBUG 23016 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:45:17.814 DEBUG 23016 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:45:17.814  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:45:17.817 DEBUG 23016 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:45:17.817 DEBUG 23016 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:17.832 DEBUG 23016 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:45:17.833 DEBUG 23016 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:45:17.835 DEBUG 23016 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:45:17.835 DEBUG 23016 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:45:17.837 DEBUG 23016 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:45:17.851 DEBUG 23016 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:45:17.851  用时: 37毫秒  URI: /js/a/gen/genTable/listData  总内存: 648MB  已用内存: 190.743MB
2021-01-08 21:45:17.856 DEBUG 23016 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:45:17.860 DEBUG 23016 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:17.863 DEBUG 23016 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:45:17.864 DEBUG 23016 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539878833078272(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:45:17.851(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 37(Long)
2021-01-08 21:45:17.865 DEBUG 23016 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:45:19.066 DEBUG 23016 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:45:19.065  URI: /js/a/employee/tyuangong/list  IP: 127.0.0.1
2021-01-08 21:45:19.068 INFO  23016 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/employee/tyuangongList <<<<<<<<< /js/a/employee/tyuangong/list >>>>>>>>> com.jeesite.modules.employee.web.TyuangongController#list(Tyuangong, Model)
2021-01-08 21:45:19.082 DEBUG 23016 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:45:19.081  用时: 16毫秒  URI: /js/a/employee/tyuangong/list  总内存: 648MB  已用内存: 191.450MB
2021-01-08 21:45:19.096 DEBUG 23016 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:45:19.096 DEBUG 23016 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:19.097 DEBUG 23016 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:45:19.098 DEBUG 23016 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539883996266496(String), access(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:45:19.082(Timestamp), /js/a/employee/tyuangong/list(String), GET(String), (String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 16(Long)
2021-01-08 21:45:19.099 DEBUG 23016 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:45:19.186 DEBUG 23016 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:45:19.186  URI: /js/a/employee/tyuangong/listData  IP: 127.0.0.1
2021-01-08 21:45:19.191 DEBUG 23016 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.id DESC, a.eid DESC
2021-01-08 21:45:19.191 DEBUG 23016 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:19.201 DEBUG 23016 [nio-8980-exec-6] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT count(0) FROM `t_yuangong` a
2021-01-08 21:45:19.201 DEBUG 23016 [nio-8980-exec-6] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:45:19.215 DEBUG 23016 [nio-8980-exec-6] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.id DESC, a.eid DESC LIMIT 20
2021-01-08 21:45:19.216 DEBUG 23016 [nio-8980-exec-6] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:45:19.217 DEBUG 23016 [nio-8980-exec-6] [c.j.m.e.dao.TyuangongDao.findList      ] - <==      Total: 8
2021-01-08 21:45:19.229 DEBUG 23016 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:45:19.224  用时: 38毫秒  URI: /js/a/employee/tyuangong/listData  总内存: 648MB  已用内存: 192.022MB
2021-01-08 21:45:19.235 DEBUG 23016 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:45:19.235 DEBUG 23016 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:19.236 DEBUG 23016 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:45:19.237 DEBUG 23016 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539884608634880(String), select(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:45:19.228(Timestamp), /js/a/employee/tyuangong/listData(String), POST(String), orgId=&name=&sex=&age=&zhiwei=&shifoubumenlingdao=&loginname=&loginpw=&del=&pageNo=&pageSize=&orderBy=(String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 38(Long)
2021-01-08 21:45:19.238 DEBUG 23016 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:45:20.323 DEBUG 23016 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:45:20.323  URI: /js/a/employee/tyuangong/list  IP: 127.0.0.1
2021-01-08 21:45:20.328 INFO  23016 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/employee/tyuangongList <<<<<<<<< /js/a/employee/tyuangong/list >>>>>>>>> com.jeesite.modules.employee.web.TyuangongController#list(Tyuangong, Model)
2021-01-08 21:45:20.342 DEBUG 23016 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:45:20.335  用时: 12毫秒  URI: /js/a/employee/tyuangong/list  总内存: 648MB  已用内存: 193.411MB
2021-01-08 21:45:20.345 DEBUG 23016 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:45:20.345 DEBUG 23016 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:20.346 DEBUG 23016 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:45:20.347 DEBUG 23016 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539889255923712(String), access(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:45:20.336(Timestamp), /js/a/employee/tyuangong/list(String), GET(String), (String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 12(Long)
2021-01-08 21:45:20.349 DEBUG 23016 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:45:20.405 DEBUG 23016 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:45:20.405  URI: /js/a/employee/tyuangong/listData  IP: 127.0.0.1
2021-01-08 21:45:20.410 DEBUG 23016 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.id DESC, a.eid DESC
2021-01-08 21:45:20.410 DEBUG 23016 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:20.417 DEBUG 23016 [nio-8980-exec-7] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT count(0) FROM `t_yuangong` a
2021-01-08 21:45:20.417 DEBUG 23016 [nio-8980-exec-7] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:45:20.422 DEBUG 23016 [nio-8980-exec-7] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.id DESC, a.eid DESC LIMIT 20
2021-01-08 21:45:20.423 DEBUG 23016 [nio-8980-exec-7] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:45:20.426 DEBUG 23016 [nio-8980-exec-7] [c.j.m.e.dao.TyuangongDao.findList      ] - <==      Total: 8
2021-01-08 21:45:20.431 DEBUG 23016 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:45:20.431  用时: 26毫秒  URI: /js/a/employee/tyuangong/listData  总内存: 648MB  已用内存: 194.729MB
2021-01-08 21:45:20.440 DEBUG 23016 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:45:20.442 DEBUG 23016 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:20.443 DEBUG 23016 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:45:20.444 DEBUG 23016 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539889654382592(String), select(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:45:20.431(Timestamp), /js/a/employee/tyuangong/listData(String), POST(String), orgId=&name=&sex=&age=&zhiwei=&shifoubumenlingdao=&loginname=&loginpw=&del=&pageNo=&pageSize=&orderBy=(String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 26(Long)
2021-01-08 21:45:20.448 DEBUG 23016 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:45:33.766 DEBUG 23016 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:45:33.766  URI: /js/a/sys/menu/list  IP: 127.0.0.1
2021-01-08 21:45:33.772 INFO  23016 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/menuList <<<<<<<<< /js/a/sys/menu/list >>>>>>>>> com.jeesite.modules.sys.web.MenuController#list(Menu, Model)
2021-01-08 21:45:33.801 DEBUG 23016 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:45:33.800  用时: 34毫秒  URI: /js/a/sys/menu/list  总内存: 648MB  已用内存: 199.514MB
2021-01-08 21:45:33.804 DEBUG 23016 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:45:33.805 DEBUG 23016 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:33.807 DEBUG 23016 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:45:33.807 DEBUG 23016 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539945732227072(String), access(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 21:45:33.801(Timestamp), /js/a/sys/menu/list(String), GET(String), (String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 34(Long)
2021-01-08 21:45:33.809 DEBUG 23016 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:45:33.893 DEBUG 23016 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:45:33.893  URI: /js/a/sys/menu/listData  IP: 127.0.0.1
2021-01-08 21:45:33.898 DEBUG 23016 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:45:33.898 DEBUG 23016 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:33.904 DEBUG 23016 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? AND a.`sys_code` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:45:33.904 DEBUG 23016 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String), default(String)
2021-01-08 21:45:33.909 DEBUG 23016 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 4
2021-01-08 21:45:33.919 DEBUG 23016 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:45:33.916  用时: 23毫秒  URI: /js/a/sys/menu/listData  总内存: 648MB  已用内存: 202.002MB
2021-01-08 21:45:33.926 DEBUG 23016 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:45:33.926 DEBUG 23016 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:33.926 DEBUG 23016 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:45:33.927 DEBUG 23016 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539946222960640(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 21:45:33.918(Timestamp), /js/a/sys/menu/listData(String), POST(String), moduleCodes=&sysCode=default&menuNameOrig=&pageNo=&pageSize=&orderBy=(String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 23(Long)
2021-01-08 21:45:33.928 DEBUG 23016 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:45:37.189 DEBUG 23016 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:45:37.189  URI: /js/a/sys/menu/delete  IP: 127.0.0.1
2021-01-08 21:45:37.191 DEBUG 23016 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`menu_code` = #{menuCode}
2021-01-08 21:45:37.191 DEBUG 23016 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will not be managed by Spring
2021-01-08 21:45:37.195 DEBUG 23016 [nio-8980-exec-9] [com.jeesite.modules.sys.dao.MenuDao.get] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`menu_code` = ?
2021-01-08 21:45:37.195 DEBUG 23016 [nio-8980-exec-9] [com.jeesite.modules.sys.dao.MenuDao.get] - ==> Parameters: 1347539860831125504(String)
2021-01-08 21:45:37.199 DEBUG 23016 [nio-8980-exec-9] [com.jeesite.modules.sys.dao.MenuDao.get] - <==      Total: 1
2021-01-08 21:45:37.208 DEBUG 23016 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 4毫秒: UPDATE `js_sys_menu` SET `status` = #{status}, `update_by` = #{updateBy}, `update_date` = #{updateDate} WHERE `status` != #{STATUS_DELETE} AND ( `menu_code` = #{sqlMap.where._menu_code_#EQ1.val} OR parent_codes LIKE #{sqlMap.where.parent_codes#LIKE1.val} )
2021-01-08 21:45:37.209 DEBUG 23016 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:37.210 DEBUG 23016 [nio-8980-exec-9] [c.j.m.sys.dao.MenuDao.deleteByEntity   ] - ==>  Preparing: UPDATE `js_sys_menu` SET `status` = ?, `update_by` = ?, `update_date` = ? WHERE `status` != ? AND ( `menu_code` = ? OR parent_codes LIKE ? )
2021-01-08 21:45:37.211 DEBUG 23016 [nio-8980-exec-9] [c.j.m.sys.dao.MenuDao.deleteByEntity   ] - ==> Parameters: 1(String), system(String), 2021-01-08 21:45:37.207(Timestamp), 1(String), 1347539860831125504(String), %,1347539860831125504,%(String)
2021-01-08 21:45:37.213 DEBUG 23016 [nio-8980-exec-9] [c.j.m.sys.dao.MenuDao.deleteByEntity   ] - <==    Updates: 1
2021-01-08 21:45:37.214 INFO  23016 [nio-8980-exec-9] [com.jeesite.common.cache.CacheUtils    ] - removeByKeyPrefix: userCache_system => [menuList_default_null_0__tree, menuList_default_null_0_]
2021-01-08 21:45:37.219 DEBUG 23016 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:45:37.218  用时: 29毫秒  URI: /js/a/sys/menu/delete  总内存: 648MB  已用内存: 205.558MB
2021-01-08 21:45:37.226 DEBUG 23016 [  log-save-10-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:45:37.226 DEBUG 23016 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:37.227 DEBUG 23016 [  log-save-10-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:45:37.227 DEBUG 23016 [  log-save-10-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 21:45:37.242 DEBUG 23016 [  log-save-10-3] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 21:45:37.245 DEBUG 23016 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:45:37.245 DEBUG 23016 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:37.246 DEBUG 23016 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:45:37.247 DEBUG 23016 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539960068358144(String), update(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 21:45:37.219(Timestamp), /js/a/sys/menu/delete(String), POST(String), menuCode=1347539860831125504(String), 1347539860831125504(String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 29(Long)
2021-01-08 21:45:37.248 DEBUG 23016 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:45:40.281 DEBUG 23016 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:45:40.281  URI: /js/a/sys/menu/listData  IP: 127.0.0.1
2021-01-08 21:45:40.287 DEBUG 23016 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:45:40.288 DEBUG 23016 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:40.294 DEBUG 23016 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:45:40.295 DEBUG 23016 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2021-01-08 21:45:40.311 DEBUG 23016 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 21:45:40.315 DEBUG 23016 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:45:40.316 DEBUG 23016 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:40.324 DEBUG 23016 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? AND a.`sys_code` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:45:40.325 DEBUG 23016 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String), default(String)
2021-01-08 21:45:40.328 DEBUG 23016 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2021-01-08 21:45:40.333 DEBUG 23016 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:45:40.332  用时: 51毫秒  URI: /js/a/sys/menu/listData  总内存: 648MB  已用内存: 212.012MB
2021-01-08 21:45:40.335 DEBUG 23016 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:45:40.336 DEBUG 23016 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:40.336 DEBUG 23016 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:45:40.337 DEBUG 23016 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539973129420800(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 21:45:40.333(Timestamp), /js/a/sys/menu/listData(String), POST(String), moduleCodes=&sysCode=default&menuNameOrig=&pageNo=1&pageSize=&orderBy=(String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 51(Long)
2021-01-08 21:45:40.341 DEBUG 23016 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:45:44.025 DEBUG 23016 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:45:44.025  URI: /js/a/sys/menu/delete  IP: 127.0.0.1
2021-01-08 21:45:44.026 DEBUG 23016 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`menu_code` = #{menuCode}
2021-01-08 21:45:44.027 DEBUG 23016 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will not be managed by Spring
2021-01-08 21:45:44.032 DEBUG 23016 [nio-8980-exec-4] [com.jeesite.modules.sys.dao.MenuDao.get] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`menu_code` = ?
2021-01-08 21:45:44.034 DEBUG 23016 [nio-8980-exec-4] [com.jeesite.modules.sys.dao.MenuDao.get] - ==> Parameters: 1347532986212134912(String)
2021-01-08 21:45:44.039 DEBUG 23016 [nio-8980-exec-4] [com.jeesite.modules.sys.dao.MenuDao.get] - <==      Total: 1
2021-01-08 21:45:44.049 DEBUG 23016 [nio-8980-exec-4] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE `js_sys_menu` SET `status` = #{status}, `update_by` = #{updateBy}, `update_date` = #{updateDate} WHERE `status` != #{STATUS_DELETE} AND ( `menu_code` = #{sqlMap.where._menu_code_#EQ1.val} OR parent_codes LIKE #{sqlMap.where.parent_codes#LIKE1.val} )
2021-01-08 21:45:44.050 DEBUG 23016 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:44.050 DEBUG 23016 [nio-8980-exec-4] [c.j.m.sys.dao.MenuDao.deleteByEntity   ] - ==>  Preparing: UPDATE `js_sys_menu` SET `status` = ?, `update_by` = ?, `update_date` = ? WHERE `status` != ? AND ( `menu_code` = ? OR parent_codes LIKE ? )
2021-01-08 21:45:44.051 DEBUG 23016 [nio-8980-exec-4] [c.j.m.sys.dao.MenuDao.deleteByEntity   ] - ==> Parameters: 1(String), system(String), 2021-01-08 21:45:44.049(Timestamp), 1(String), 1347532986212134912(String), %,1347532986212134912,%(String)
2021-01-08 21:45:44.053 DEBUG 23016 [nio-8980-exec-4] [c.j.m.sys.dao.MenuDao.deleteByEntity   ] - <==    Updates: 1
2021-01-08 21:45:44.057 INFO  23016 [nio-8980-exec-4] [com.jeesite.common.cache.CacheUtils    ] - removeByKeyPrefix: userCache_system => [menuList_default_null_0_]
2021-01-08 21:45:44.063 DEBUG 23016 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:45:44.063  用时: 38毫秒  URI: /js/a/sys/menu/delete  总内存: 648MB  已用内存: 214.179MB
2021-01-08 21:45:44.067 DEBUG 23016 [  log-save-10-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:45:44.067 DEBUG 23016 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:44.068 DEBUG 23016 [  log-save-10-5] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:45:44.068 DEBUG 23016 [  log-save-10-5] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 21:45:44.077 DEBUG 23016 [  log-save-10-5] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 73
2021-01-08 21:45:44.080 DEBUG 23016 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:45:44.097 DEBUG 23016 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:44.098 DEBUG 23016 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:45:44.098 DEBUG 23016 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347539988774174720(String), update(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 21:45:44.063(Timestamp), /js/a/sys/menu/delete(String), POST(String), menuCode=1347532986212134912(String), 1347532986212134912(String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 38(Long)
2021-01-08 21:45:44.101 DEBUG 23016 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:45:58.913 DEBUG 23016 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:45:58.912  URI: /js/a/gen/genTable/delete  IP: 127.0.0.1
2021-01-08 21:45:58.914 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:45:58.915 DEBUG 23016 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:58.918 DEBUG 23016 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:45:58.918 DEBUG 23016 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:45:58.919 DEBUG 23016 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:45:58.920 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:45:58.924 DEBUG 23016 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:45:58.924 DEBUG 23016 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:45:58.927 DEBUG 23016 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:45:58.941 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:45:58.941 DEBUG 23016 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:58.945 DEBUG 23016 [nio-8980-exec-8] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:45:58.946 DEBUG 23016 [nio-8980-exec-8] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2021-01-08 21:45:58.958 DEBUG 23016 [nio-8980-exec-8] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 73
2021-01-08 21:45:58.962 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: DELETE FROM `js_gen_table` WHERE `table_name` = #{tableName}
2021-01-08 21:45:58.962 DEBUG 23016 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:58.963 DEBUG 23016 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.delete ] - ==>  Preparing: DELETE FROM `js_gen_table` WHERE `table_name` = ?
2021-01-08 21:45:58.963 DEBUG 23016 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.delete ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:45:58.964 DEBUG 23016 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.delete ] - <==    Updates: 1
2021-01-08 21:45:58.966 DEBUG 23016 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: DELETE FROM `js_gen_table_column` WHERE `table_name` = #{sqlMap.where#table_name#EQ1}
2021-01-08 21:45:58.966 DEBUG 23016 [nio-8980-exec-8] [c.j.m.g.d.G.deleteByEntity             ] - ==>  Preparing: DELETE FROM `js_gen_table_column` WHERE `table_name` = ?
2021-01-08 21:45:58.967 DEBUG 23016 [nio-8980-exec-8] [c.j.m.g.d.G.deleteByEntity             ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:45:58.970 DEBUG 23016 [nio-8980-exec-8] [c.j.m.g.d.G.deleteByEntity             ] - <==    Updates: 11
2021-01-08 21:45:58.976 DEBUG 23016 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:45:58.975  用时: 63毫秒  URI: /js/a/gen/genTable/delete  总内存: 648MB  已用内存: 222.865MB
2021-01-08 21:45:58.980 DEBUG 23016 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:45:58.980 DEBUG 23016 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4d4337f9] will be managed by Spring
2021-01-08 21:45:58.981 DEBUG 23016 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:45:58.981 DEBUG 23016 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347540051319635968(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:45:58.975(Timestamp), /js/a/gen/genTable/delete(String), POST(String), tableName=t_yuangong(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 63(Long)
2021-01-08 21:45:58.991 DEBUG 23016 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:45:58.991  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:45:58.993 DEBUG 23016 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:45:58.995 DEBUG 23016 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:45:58.995 DEBUG 23016 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6da7881b] will be managed by Spring
2021-01-08 21:45:59.015 DEBUG 23016 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:45:59.015 DEBUG 23016 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:45:59.020 DEBUG 23016 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:45:59.021 DEBUG 23016 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:45:59.024 DEBUG 23016 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 2
2021-01-08 21:45:59.042 DEBUG 23016 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:45:59.040  用时: 49毫秒  URI: /js/a/gen/genTable/listData  总内存: 648MB  已用内存: 224.370MB
2021-01-08 21:45:59.051 DEBUG 23016 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:45:59.052 DEBUG 23016 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6da7881b] will be managed by Spring
2021-01-08 21:45:59.054 DEBUG 23016 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:45:59.056 DEBUG 23016 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347540051596460032(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:45:59.041(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 49(Long)
2021-01-08 21:45:59.058 DEBUG 23016 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:46:58.061 INFO  25420 [           main] [com.jeesite.modules.Application        ] - Starting Application on DESKTOP-0IUV8EB with PID 25420 (C:\Users\Lx\work2\web\src\main\webapp\WEB-INF\classes started by Lx in C:\Users\Lx\work2\web)
2021-01-08 21:46:58.068 DEBUG 25420 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2021-01-08 21:46:58.068 INFO  25420 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2021-01-08 21:47:01.862 INFO  25420 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2021-01-08 21:47:01.865 INFO  25420 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2021-01-08 21:47:04.183 INFO  25420 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/Lx
2021-01-08 21:47:04.184 INFO  25420 [           main] [com.jeesite.common.config.Global       ] - user.dir: C:/Users/Lx/work2/web
2021-01-08 21:47:04.185 INFO  25420 [           main] [com.jeesite.common.config.Global       ] - logPath: C:/Users/Lx/work2/web/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.2 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：adfb80499b32e1492729a84d62f8cd98
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2021-01-08 21:47:05.678 DEBUG 25420 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2021-01-08 21:47:06.613 INFO  25420 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2021-01-08 21:47:08.524 INFO  25420 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2021-01-08 21:47:13.497 DEBUG 25420 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:47:14.125 DEBUG 25420 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 21:47:14.149 DEBUG 25420 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 21:47:14.179 DEBUG 25420 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 21:47:14.187 DEBUG 25420 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:47:14.190 DEBUG 25420 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2021-01-08 21:47:14.191 DEBUG 25420 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2021-01-08 21:47:14.196 DEBUG 25420 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2021-01-08 21:47:14.239 INFO  25420 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2021-01-08 21:47:16.430 INFO  25420 [           main] [com.jeesite.modules.Application        ] - Started Application in 19.723 seconds (JVM running for 20.867)
2021-01-08 21:48:18.416 DEBUG 25420 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2021-01-08 21:48:18.417 DEBUG 25420 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:48:18.419 DEBUG 25420 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2021-01-08 21:48:18.420 DEBUG 25420 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2021-01-08 21:48:18.442 DEBUG 25420 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2021-01-08 21:48:31.872 DEBUG 25420 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:48:31.875 DEBUG 25420 [nio-8980-exec-5] [c.j.m.sys.dao.UserDao.getByLoginCode   ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.status != ? AND upper(a.login_code) = upper(?)
2021-01-08 21:48:31.875 DEBUG 25420 [nio-8980-exec-5] [c.j.m.sys.dao.UserDao.getByLoginCode   ] - ==> Parameters: 1(String), system(String)
2021-01-08 21:48:31.883 DEBUG 25420 [nio-8980-exec-5] [c.j.m.sys.dao.UserDao.getByLoginCode   ] - <==      Total: 1
2021-01-08 21:48:32.112 INFO  25420 [nio-8980-exec-5] [com.jeesite.common.cache.CacheUtils    ] - removeCache: userCache_system
2021-01-08 21:48:32.122 DEBUG 25420 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:48:32.123 DEBUG 25420 [nio-8980-exec-5] [c.j.m.sys.dao.UserDao.updateLoginInfo  ] - ==>  Preparing: UPDATE js_sys_user SET last_login_ip = ?, last_login_date = ? WHERE user_code = ?
2021-01-08 21:48:32.127 DEBUG 25420 [nio-8980-exec-5] [c.j.m.sys.dao.UserDao.updateLoginInfo  ] - ==> Parameters: 127.0.0.1(String), 2021-01-08 21:48:32.121(Timestamp), system(String)
2021-01-08 21:48:32.129 DEBUG 25420 [nio-8980-exec-5] [c.j.m.sys.dao.UserDao.updateLoginInfo  ] - <==    Updates: 1
2021-01-08 21:48:32.181 DEBUG 25420 [   log-save-8-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:48:32.184 DEBUG 25420 [   log-save-8-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:48:32.184 DEBUG 25420 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:48:32.187 DEBUG 25420 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347540693839958016(String), loginLogout(String), 系统登录(String), system(String), 超级管理员(String), 2021-01-08 21:48:32.163(Timestamp), /js/a/login(String), POST(String), username=c3lzdGVt&password=*&validCode=&loginValidCode=&rememberUserCode=on&__url=http://127.0.0.1:8980/js/a/index#/js/a/gen/genTable/list#%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 0(Long)
2021-01-08 21:48:32.190 DEBUG 25420 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:48:32.289 DEBUG 25420 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 9毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:48:32.294 DEBUG 25420 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:48:32.304 DEBUG 25420 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:48:32.306 DEBUG 25420 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2021-01-08 21:48:32.400 DEBUG 25420 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 73
2021-01-08 21:48:32.676 DEBUG 25420 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:48:32.679 DEBUG 25420 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:48:32.686 DEBUG 25420 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:48:32.689 DEBUG 25420 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_sys_code(String), 1(String), 0(String)
2021-01-08 21:48:32.694 DEBUG 25420 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2021-01-08 21:48:33.363 DEBUG 25420 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:48:33.361  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2021-01-08 21:48:33.403 INFO  25420 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2021-01-08 21:48:33.506 DEBUG 25420 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:48:33.500  用时: 139毫秒  URI: /js/a/gen/genTable/list  总内存: 600MB  已用内存: 199.455MB
2021-01-08 21:48:33.535 DEBUG 25420 [   log-save-8-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 6毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:48:33.537 DEBUG 25420 [   log-save-8-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:48:33.538 DEBUG 25420 [   log-save-8-2] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:48:33.539 DEBUG 25420 [   log-save-8-2] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 21:48:33.563 DEBUG 25420 [   log-save-8-2] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 73
2021-01-08 21:48:33.570 DEBUG 25420 [   log-save-8-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:48:33.573 DEBUG 25420 [   log-save-8-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:48:33.575 DEBUG 25420 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:48:33.588 DEBUG 25420 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347540699456131072(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:48:33.502(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 139(Long)
2021-01-08 21:48:33.590 DEBUG 25420 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:48:34.356 DEBUG 25420 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:48:34.355  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:48:34.772 DEBUG 25420 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 10毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:48:34.775 DEBUG 25420 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:48:35.037 DEBUG 25420 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:48:35.039 DEBUG 25420 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:48:35.044 DEBUG 25420 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:48:35.045 DEBUG 25420 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:48:35.052 DEBUG 25420 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 2
2021-01-08 21:48:35.090 DEBUG 25420 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:48:35.089  用时: 734毫秒  URI: /js/a/gen/genTable/listData  总内存: 600MB  已用内存: 236.201MB
2021-01-08 21:48:35.112 DEBUG 25420 [   log-save-8-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:48:35.113 DEBUG 25420 [   log-save-8-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:48:35.113 DEBUG 25420 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:48:35.116 DEBUG 25420 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347540706116685824(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:48:35.09(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 734(Long)
2021-01-08 21:48:35.118 DEBUG 25420 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:48:36.518 DEBUG 25420 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:48:36.518  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:48:36.662 DEBUG 25420 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:48:36.667 DEBUG 25420 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will not be managed by Spring
2021-01-08 21:48:36.672 DEBUG 25420 [nio-8980-exec-8] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:48:36.673 DEBUG 25420 [nio-8980-exec-8] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 21:48:36.685 DEBUG 25420 [nio-8980-exec-8] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 21:48:36.691 DEBUG 25420 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:48:36.696 DEBUG 25420 [nio-8980-exec-8] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 21:48:36.697 DEBUG 25420 [nio-8980-exec-8] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 21:48:36.713 DEBUG 25420 [nio-8980-exec-8] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 21:48:36.729 INFO  25420 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableFormSelect <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:48:36.908 DEBUG 25420 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:48:36.904  用时: 386毫秒  URI: /js/a/gen/genTable/form  总内存: 600MB  已用内存: 266.847MB
2021-01-08 21:48:36.915 DEBUG 25420 [   log-save-8-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:48:36.915 DEBUG 25420 [   log-save-8-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:48:36.917 DEBUG 25420 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:48:36.918 DEBUG 25420 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347540713737736192(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:48:36.907(Timestamp), /js/a/gen/genTable/form(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 386(Long)
2021-01-08 21:48:36.920 DEBUG 25420 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:48:40.465 DEBUG 25420 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:48:40.465  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:48:40.469 DEBUG 25420 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:48:40.469 DEBUG 25420 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:48:40.472 DEBUG 25420 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:48:40.473 DEBUG 25420 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:48:40.475 DEBUG 25420 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2021-01-08 21:48:40.501 DEBUG 25420 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:48:40.501 DEBUG 25420 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:48:40.504 DEBUG 25420 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:48:40.505 DEBUG 25420 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:48:40.507 DEBUG 25420 [nio-8980-exec-7] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2021-01-08 21:48:40.510 DEBUG 25420 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:48:40.513 DEBUG 25420 [nio-8980-exec-7] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 21:48:40.513 DEBUG 25420 [nio-8980-exec-7] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_yuangong(String), t_yuangong(String)
2021-01-08 21:48:40.516 DEBUG 25420 [nio-8980-exec-7] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 21:48:40.520 DEBUG 25420 [nio-8980-exec-7] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 21:48:40.520 DEBUG 25420 [nio-8980-exec-7] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:48:40.526 DEBUG 25420 [nio-8980-exec-7] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 11
2021-01-08 21:48:40.532 DEBUG 25420 [nio-8980-exec-7] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 21:48:40.533 DEBUG 25420 [nio-8980-exec-7] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:48:40.535 DEBUG 25420 [nio-8980-exec-7] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 2
2021-01-08 21:48:40.546 DEBUG 25420 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:48:40.547 DEBUG 25420 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will not be managed by Spring
2021-01-08 21:48:40.550 DEBUG 25420 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:48:40.551 DEBUG 25420 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 21:48:40.554 DEBUG 25420 [nio-8980-exec-7] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 21:48:40.556 DEBUG 25420 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:48:40.557 DEBUG 25420 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will not be managed by Spring
2021-01-08 21:48:40.559 DEBUG 25420 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:48:40.560 DEBUG 25420 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 21:48:40.561 DEBUG 25420 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 4
2021-01-08 21:48:40.563 DEBUG 25420 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:48:40.568 DEBUG 25420 [nio-8980-exec-7] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 21:48:40.568 DEBUG 25420 [nio-8980-exec-7] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 21:48:40.570 DEBUG 25420 [nio-8980-exec-7] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 21:48:40.579 INFO  25420 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:48:40.661 DEBUG 25420 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:48:40.662 DEBUG 25420 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:48:40.682 DEBUG 25420 [nio-8980-exec-7] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:48:40.686 DEBUG 25420 [nio-8980-exec-7] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_yes_no(String), 1(String), 0(String)
2021-01-08 21:48:40.694 DEBUG 25420 [nio-8980-exec-7] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 21:48:40.907 DEBUG 25420 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:48:40.903  用时: 438毫秒  URI: /js/a/gen/genTable/form  总内存: 600MB  已用内存: 294.330MB
2021-01-08 21:48:40.922 DEBUG 25420 [   log-save-8-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:48:40.923 DEBUG 25420 [   log-save-8-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:48:40.924 DEBUG 25420 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:48:40.925 DEBUG 25420 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347540730510757888(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:48:40.906(Timestamp), /js/a/gen/genTable/form(String), POST(String), isNewRecord=true&tableName=t_yuangong(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 438(Long)
2021-01-08 21:48:40.927 DEBUG 25420 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:49:26.416 DEBUG 25420 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:49:26.416  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 21:49:26.419 DEBUG 25420 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:49:26.419 DEBUG 25420 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:49:26.424 DEBUG 25420 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:49:26.425 DEBUG 25420 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:49:26.426 DEBUG 25420 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 0
2021-01-08 21:49:26.768 DEBUG 25420 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 6毫秒: INSERT INTO `js_gen_table` (`table_name`, `class_name`, `comments`, `parent_table_name`, `parent_table_fk_name`, `data_source_name`, `tpl_category`, `package_name`, `module_name`, `sub_module_name`, `function_name`, `function_name_simple`, `function_author`, `gen_base_dir`, `options`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`) VALUES (#{tableName}, #{className}, #{comments}, #{parentTableName}, #{parentTableFkName}, #{dataSourceName}, #{tplCategory}, #{packageName}, #{moduleName}, #{subModuleName}, #{functionName}, #{functionNameSimple}, #{functionAuthor}, #{genBaseDir}, #{options}, #{createBy}, #{createDate}, #{updateBy}, #{updateDate}, #{remarks})
2021-01-08 21:49:26.768 DEBUG 25420 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:49:26.769 DEBUG 25420 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table` (`table_name`, `class_name`, `comments`, `parent_table_name`, `parent_table_fk_name`, `data_source_name`, `tpl_category`, `package_name`, `module_name`, `sub_module_name`, `function_name`, `function_name_simple`, `function_author`, `gen_base_dir`, `options`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:49:26.771 DEBUG 25420 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.insert ] - ==> Parameters: t_yuangong(String), Tyuangong(String), t_yuangong(String), (String), (String), (String), (String), com.jeesite.modules(String), t(String), (String), t_yuangong(String), t_yuangong(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 21:49:26.766(Timestamp), system(String), 2021-01-08 21:49:26.766(Timestamp), (String)
2021-01-08 21:49:26.772 DEBUG 25420 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.insert ] - <==    Updates: 1
2021-01-08 21:49:26.775 DEBUG 25420 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:49:26.776 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:49:26.777 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347540922890899456(String), t_yuangong(String), id(String), 10(Integer), int(String), id(String), id(String), id(String), Long(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2021-01-08 21:49:26.778 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:49:26.780 DEBUG 25420 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:49:26.781 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:49:26.782 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347540922916065280(String), t_yuangong(String), org_id(String), 20(Integer), int(String), org_id(String), org_id(String), orgId(String), Long(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"digits","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2021-01-08 21:49:26.784 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:49:26.792 DEBUG 25420 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 7毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:49:26.794 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:49:26.795 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347540922941231104(String), t_yuangong(String), eid(String), 30(Integer), varchar(55)(String), eid(String), eid(String), eid(String), String(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2021-01-08 21:49:26.797 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:49:26.801 DEBUG 25420 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 4毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:49:26.803 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:49:26.803 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347540922991562752(String), t_yuangong(String), name(String), 40(Integer), varchar(50)(String), name(String), name(String), name(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), LIKE(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2021-01-08 21:49:26.804 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:49:26.807 DEBUG 25420 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:49:26.808 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:49:26.810 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347540923025117184(String), t_yuangong(String), sex(String), 50(Integer), varchar(50)(String), sex(String), sex(String), sex(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2021-01-08 21:49:26.812 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:49:26.813 DEBUG 25420 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:49:26.815 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:49:26.816 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347540923058671616(String), t_yuangong(String), age(String), 60(Integer), varchar(50)(String), age(String), age(String), age(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2021-01-08 21:49:26.817 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:49:26.819 DEBUG 25420 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:49:26.820 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:49:26.821 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347540923079643136(String), t_yuangong(String), zhiwei(String), 70(Integer), varchar(50)(String), zhiwei(String), zhiwei(String), zhiwei(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2021-01-08 21:49:26.822 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:49:26.825 DEBUG 25420 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:49:26.827 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:49:26.829 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347540923100614656(String), t_yuangong(String), shifoubumenlingdao(String), 80(Integer), varchar(50)(String), shifoubumenlingdao(String), shifoubumenlingdao(String), shifoubumenlingdao(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2021-01-08 21:49:26.831 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:49:26.833 DEBUG 25420 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:49:26.834 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:49:26.835 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347540923138363392(String), t_yuangong(String), loginname(String), 90(Integer), varchar(50)(String), loginname(String), loginname(String), loginname(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2021-01-08 21:49:26.837 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:49:26.840 DEBUG 25420 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:49:26.842 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:49:26.850 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347540923167723520(String), t_yuangong(String), loginpw(String), 100(Integer), varchar(50)(String), loginpw(String), loginpw(String), loginpw(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2021-01-08 21:49:26.852 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:49:26.859 DEBUG 25420 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2021-01-08 21:49:26.860 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:49:26.861 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1347540923243220992(String), t_yuangong(String), del(String), 110(Integer), varchar(50)(String), del(String), del(String), del(String), String(String), (String), 1(String), (String), (String), (String), (String), EQ(String), (String), hidden(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2021-01-08 21:49:26.866 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2021-01-08 21:49:26.883 DEBUG 25420 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:49:26.877  用时: 461毫秒  URI: /js/a/gen/genTable/save  总内存: 600MB  已用内存: 330.463MB
2021-01-08 21:49:26.888 DEBUG 25420 [   log-save-8-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:49:26.889 DEBUG 25420 [   log-save-8-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:49:26.896 DEBUG 25420 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:49:26.899 DEBUG 25420 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347540923348078592(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:49:26.882(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=true&tableName=t_yuangong&comments=t_yuangong&className=Tyuangong&functionAuthor=LX&parentTableName=&parentTableFkName=&remarks=&columnList[0].id=&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=id&columnList[0].columnType=int&columnList[0].attrType=Long&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=6/4/8&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=org_id&columnList[1].comments=org_id&columnList[1].columnType=int&columnList[1].attrType=Long&columnList[1].fullAttrName=orgId&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=6/4/8&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[1].optionMap['fieldValid']=digits&columnList[2].id=&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=eid&columnList[2].comments=eid&columnList[2].columnType=varchar(55)&columnList[2].attrType=String&columnList[2].fullAttrName=eid&!columnList[2].isPk=&columnList[2].isPk=1&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&!columnList[2].isList=&!columnList[2].isQuery=&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].isRequired=1&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=6/4/8&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[2].optionMap['fieldValid']=abc&columnList[3].id=&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=name&columnList[3].comments=name&columnList[3].columnType=varchar(50)&columnList[3].attrType=String&columnList[3].fullAttrName=name&!columnList[3].isPk=&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&columnList[3].isUpdate=1&!columnList[3].isList=&columnList[3].isList=1&!columnList[3].isQuery=&columnList[3].isQuery=1&columnList[3].queryType=LIKE&!columnList[3].isEdit=&columnList[3].isEdit=1&!columnList[3].isRequired=&columnList[3].showType=input&columnList[3].optionMap['gridRowCol']=6/4/8&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[4].id=&columnList[4].status=&columnList[4].columnSort=50&columnList[4].columnName=sex&columnList[4].comments=sex&columnList[4].columnType=varchar(50)&columnList[4].attrType=String&columnList[4].fullAttrName=sex&!columnList[4].isPk=&!columnList[4].isInsert=&columnList[4].isInsert=1&!columnList[4].isUpdate=&columnList[4].isUpdate=1&!columnList[4].isList=&columnList[4].isList=1&!columnList[4].isQuery=&columnList[4].isQuery=1&columnList[4].queryType=EQ&!columnList[4].isEdit=&columnList[4].isEdit=1&!columnList[4].isRequired=&columnList[4].showType=input&columnList[4].optionMap['gridRowCol']=6/4/8&!columnList[4].optionMap['isNewLine']=&columnList[4].optionMap['dictName']=&columnList[4].optionMap['dictType']=&!columnList[4].optionMap['fieldValid']=&columnList[5].id=&columnList[5].status=&columnList[5].columnSort=60&columnList[5].columnName=age&columnList[5].comments=age&columnList[5].columnType=varchar(50)&columnList[5].attrType=String&columnList[5].fullAttrName=age&!columnList[5].isPk=&!columnList[5].isInsert=&columnList[5].isInsert=1&!columnList[5].isUpdate=&columnList[5].isUpdate=1&!columnList[5].isList=&columnList[5].isList=1&!columnList[5].isQuery=&columnList[5].isQuery=1&columnList[5].queryType=EQ&!columnList[5].isEdit=&columnList[5].isEdit=1&!columnList[5].isRequired=&columnList[5].showType=input&columnList[5].optionMap['gridRowCol']=6/4/8&!columnList[5].optionMap['isNewLine']=&columnList[5].optionMap['dictName']=&columnList[5].optionMap['dictType']=&!columnList[5].optionMap['fieldValid']=&columnList[6].id=&columnList[6].status=&columnList[6].columnSort=70&columnList[6].columnName=zhiwei&columnList[6].comments=zhiwei&columnList[6].columnType=varchar(50)&columnList[6].attrType=String&columnList[6].fullAttrName=zhiwei&!columnList[6].isPk=&!columnList[6].isInsert=&columnList[6].isInsert=1&!columnList[6].isUpdate=&columnList[6].isUpdate=1&!columnList[6].isList=&columnList[6].isList=1&!columnList[6].isQuery=&columnList[6].isQuery=1&columnList[6].queryType=EQ&!columnList[6].isEdit=&columnList[6].isEdit=1&!columnList[6].isRequired=&columnList[6].showType=input&columnList[6].optionMap['gridRowCol']=6/4/8&!columnList[6].optionMap['isNewLine']=&columnList[6].optionMap['dictName']=&columnList[6].optionMap['dictType']=&!columnList[6].optionMap['fieldValid']=&columnList[7].id=&columnList[7].status=&columnList[7].columnSort=80&columnList[7].columnName=shifoubumenlingdao&columnList[7].comments=shifoubumenlingdao&columnList[7].columnType=varchar(50)&columnList[7].attrType=String&columnList[7].fullAttrName=shifoubumenlingdao&!columnList[7].isPk=&!columnList[7].isInsert=&columnList[7].isInsert=1&!columnList[7].isUpdate=&columnList[7].isUpdate=1&!columnList[7].isList=&columnList[7].isList=1&!columnList[7].isQuery=&columnList[7].isQuery=1&columnList[7].queryType=EQ&!columnList[7].isEdit=&columnList[7].isEdit=1&!columnList[7].isRequired=&columnList[7].showType=input&columnList[7].optionMap['gridRowCol']=6/4/8&!columnList[7].optionMap['isNewLine']=&columnList[7].optionMap['dictName']=&columnList[7].optionMap['dictType']=&!columnList[7].optionMap['fieldValid']=&columnList[8].id=&columnList[8].status=&columnList[8].columnSort=90&columnList[8].columnName=loginname&columnList[8].comments=loginname&columnList[8].columnType=varchar(50)&columnList[8].attrType=String&columnList[8].fullAttrName=loginname&!columnList[8].isPk=&!columnList[8].isInsert=&columnList[8].isInsert=1&!columnList[8].isUpdate=&columnList[8].isUpdate=1&!columnList[8].isList=&columnList[8].isList=1&!columnList[8].isQuery=&columnList[8].isQuery=1&columnList[8].queryType=EQ&!columnList[8].isEdit=&columnList[8].isEdit=1&!columnList[8].isRequired=&columnList[8].showType=input&columnList[8].optionMap['gridRowCol']=6/4/8&!columnList[8].optionMap['isNewLine']=&columnList[8].optionMap['dictName']=&columnList[8].optionMap['dictType']=&!columnList[8].optionMap['fieldValid']=&columnList[9].id=&columnList[9].status=&columnList[9].columnSort=100&columnList[9].columnName=loginpw&columnList[9].comments=loginpw&columnList[9].columnType=varchar(50)&columnList[9].attrType=String&columnList[9].fullAttrName=loginpw&!columnList[9].isPk=&!columnList[9].isInsert=&columnList[9].isInsert=1&!columnList[9].isUpdate=&columnList[9].isUpdate=1&!columnList[9].isList=&columnList[9].isList=1&!columnList[9].isQuery=&columnList[9].isQuery=1&columnList[9].queryType=EQ&!columnList[9].isEdit=&columnList[9].isEdit=1&!columnList[9].isRequired=&columnList[9].showType=input&columnList[9].optionMap['gridRowCol']=6/4/8&!columnList[9].optionMap['isNewLine']=&columnList[9].optionMap['dictName']=&columnList[9].optionMap['dictType']=&!columnList[9].optionMap['fieldValid']=&columnList[10].id=&columnList[10].status=&columnList[10].columnSort=110&columnList[10].columnName=del&columnList[10].comments=del&columnList[10].columnType=varchar(50)&columnList[10].attrType=String&columnList[10].fullAttrName=del&!columnList[10].isPk=&!columnList[10].isInsert=&!columnList[10].isUpdate=&!columnList[10].isList=&!columnList[10].isQuery=&columnList[10].queryType=EQ&!columnList[10].isEdit=&!columnList[10].isRequired=&columnList[10].showType=hidden&columnList[10].optionMap['gridRowCol']=6/4/8&!columnList[10].optionMap['isNewLine']=&columnList[10].optionMap['dictName']=&columnList[10].optionMap['dictType']=&!columnList[10].optionMap['fieldValid']=&tplCategory=&packageName=com.jeesite.modules&moduleName=t&subModuleName=&functionName=t_yuangong&functionNameSimple=t_yuangong&genBaseDir=C:\Users\Lx\work2\web&!optionMap['isHaveDisableEnable']=&optionMap['isHaveDisableEnable']=0&!optionMap['isHaveDelete']=&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&!optionMap['isImageUpload']=&optionMap['isImageUpload']=0&!optionMap['isFileUpload']=&optionMap['isFileUpload']=0&!optionMap['isBpmForm']=&optionMap['isBpmForm']=0&optionMap['bpmFormKey']=&genFlag=0&!replaceFile=0(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 461(Long)
2021-01-08 21:49:26.936 DEBUG 25420 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:49:26.951 DEBUG 25420 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:49:26.950  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:49:26.953 DEBUG 25420 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:49:26.953 DEBUG 25420 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:49:26.957 DEBUG 25420 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:49:26.958 DEBUG 25420 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:49:26.961 DEBUG 25420 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:49:26.962 DEBUG 25420 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:49:26.967 DEBUG 25420 [nio-8980-exec-3] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:49:26.967 DEBUG 25420 [nio-8980-exec-3] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:49:26.973 DEBUG 25420 [nio-8980-exec-3] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:49:27.056 DEBUG 25420 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:49:27.062 DEBUG 25420 [nio-8980-exec-3] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 21:49:27.062 DEBUG 25420 [nio-8980-exec-3] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_yuangong(String), t_yuangong(String)
2021-01-08 21:49:27.066 DEBUG 25420 [nio-8980-exec-3] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 21:49:27.072 DEBUG 25420 [nio-8980-exec-3] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 21:49:27.073 DEBUG 25420 [nio-8980-exec-3] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:49:27.077 DEBUG 25420 [nio-8980-exec-3] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 11
2021-01-08 21:49:27.082 DEBUG 25420 [nio-8980-exec-3] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 21:49:27.083 DEBUG 25420 [nio-8980-exec-3] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:49:27.086 DEBUG 25420 [nio-8980-exec-3] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 2
2021-01-08 21:49:27.094 DEBUG 25420 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:49:27.095 DEBUG 25420 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will not be managed by Spring
2021-01-08 21:49:27.098 DEBUG 25420 [nio-8980-exec-3] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:49:27.099 DEBUG 25420 [nio-8980-exec-3] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 21:49:27.102 DEBUG 25420 [nio-8980-exec-3] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 21:49:27.104 DEBUG 25420 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:49:27.104 DEBUG 25420 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will not be managed by Spring
2021-01-08 21:49:27.108 DEBUG 25420 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:49:27.109 DEBUG 25420 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 21:49:27.112 DEBUG 25420 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 5
2021-01-08 21:49:27.115 DEBUG 25420 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:49:27.121 DEBUG 25420 [nio-8980-exec-3] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 21:49:27.121 DEBUG 25420 [nio-8980-exec-3] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 21:49:27.123 DEBUG 25420 [nio-8980-exec-3] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 21:49:27.128 INFO  25420 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:49:27.183 DEBUG 25420 [   log-save-8-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:49:27.184 DEBUG 25420 [   log-save-8-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:49:27.185 DEBUG 25420 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:49:27.186 DEBUG 25420 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347540924597981184(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:49:27.18(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=t_yuangong&op=step3(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 215(Long)
2021-01-08 21:49:27.187 DEBUG 25420 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:49:27.193 DEBUG 25420 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:49:27.165  用时: 215毫秒  URI: /js/a/gen/genTable/form  总内存: 600MB  已用内存: 339.226MB
2021-01-08 21:51:20.624 DEBUG 25420 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:51:20.624  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 21:51:20.642 DEBUG 25420 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:51:20.642 DEBUG 25420 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:51:20.647 DEBUG 25420 [nio-8980-exec-2] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:51:20.648 DEBUG 25420 [nio-8980-exec-2] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:51:20.650 DEBUG 25420 [nio-8980-exec-2] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:51:20.652 DEBUG 25420 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:51:20.656 DEBUG 25420 [nio-8980-exec-2] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:51:20.657 DEBUG 25420 [nio-8980-exec-2] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:51:20.665 DEBUG 25420 [nio-8980-exec-2] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:51:20.772 DEBUG 25420 [nio-8980-exec-2] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 3毫秒: UPDATE `js_gen_table` SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2021-01-08 21:51:20.773 DEBUG 25420 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:51:20.774 DEBUG 25420 [nio-8980-exec-2] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE `js_gen_table` SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ?
2021-01-08 21:51:20.775 DEBUG 25420 [nio-8980-exec-2] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: Tyuangong(String), t_yuangong(String), (String), (String), (String), crud(String), com.jeesite.modules(String), employee(String), (String), employee(String), employee(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 21:51:20.771(Timestamp), (String), t_yuangong(String)
2021-01-08 21:51:20.777 DEBUG 25420 [nio-8980-exec-2] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2021-01-08 21:51:20.779 DEBUG 25420 [nio-8980-exec-2] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:51:20.780 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:51:20.781 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), id(String), 10(Integer), int(String), id(String), id(String), id(String), String(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347540922890899456(String)
2021-01-08 21:51:20.783 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:51:20.784 DEBUG 25420 [nio-8980-exec-2] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:51:20.785 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:51:20.785 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), org_id(String), 20(Integer), int(String), 部门号(String), 部门号(String), orgId(String), Long(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"digits","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347540922916065280(String)
2021-01-08 21:51:20.786 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:51:20.788 DEBUG 25420 [nio-8980-exec-2] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:51:20.790 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:51:20.792 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), eid(String), 30(Integer), varchar(55)(String), 员工号(String), 员工号(String), eid(String), String(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347540922941231104(String)
2021-01-08 21:51:20.794 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:51:20.795 DEBUG 25420 [nio-8980-exec-2] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:51:20.796 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:51:20.798 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), name(String), 40(Integer), varchar(50)(String), 姓名(String), 姓名(String), name(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), LIKE(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347540922991562752(String)
2021-01-08 21:51:20.799 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:51:20.801 DEBUG 25420 [nio-8980-exec-2] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:51:20.802 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:51:20.803 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), sex(String), 50(Integer), varchar(50)(String), 性别(String), 性别(String), sex(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347540923025117184(String)
2021-01-08 21:51:20.804 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:51:20.805 DEBUG 25420 [nio-8980-exec-2] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:51:20.806 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:51:20.807 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), age(String), 60(Integer), varchar(50)(String), 年龄(String), 年龄(String), age(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347540923058671616(String)
2021-01-08 21:51:20.808 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:51:20.809 DEBUG 25420 [nio-8980-exec-2] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:51:20.811 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:51:20.812 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), zhiwei(String), 70(Integer), varchar(50)(String), 职位(String), 职位(String), zhiwei(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347540923079643136(String)
2021-01-08 21:51:20.813 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:51:20.814 DEBUG 25420 [nio-8980-exec-2] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:51:20.815 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:51:20.816 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), shifoubumenlingdao(String), 80(Integer), varchar(50)(String), 是否部门经理(String), 是否部门经理(String), shifoubumenlingdao(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347540923100614656(String)
2021-01-08 21:51:20.817 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:51:20.819 DEBUG 25420 [nio-8980-exec-2] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:51:20.820 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:51:20.820 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), loginname(String), 90(Integer), varchar(50)(String), 登录名(String), 登录名(String), loginname(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347540923138363392(String)
2021-01-08 21:51:20.822 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:51:20.823 DEBUG 25420 [nio-8980-exec-2] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:51:20.824 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:51:20.824 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), loginpw(String), 100(Integer), varchar(50)(String), 密码(String), 密码(String), loginpw(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347540923167723520(String)
2021-01-08 21:51:20.825 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:51:20.826 DEBUG 25420 [nio-8980-exec-2] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:51:20.828 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:51:20.829 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), del(String), 110(Integer), varchar(50)(String), del(String), del(String), del(String), String(String), (String), 1(String), (String), (String), (String), (String), EQ(String), (String), hidden(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347540923243220992(String)
2021-01-08 21:51:20.830 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:51:20.850 DEBUG 25420 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:51:20.850 DEBUG 25420 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:51:20.855 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC
2021-01-08 21:51:20.856 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:51:20.858 DEBUG 25420 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 1
2021-01-08 21:51:20.859 DEBUG 25420 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:51:20.865 DEBUG 25420 [nio-8980-exec-2] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:51:20.866 DEBUG 25420 [nio-8980-exec-2] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:51:20.868 DEBUG 25420 [nio-8980-exec-2] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 4
2021-01-08 21:51:20.877 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TchuqinDao.xml
2021-01-08 21:51:20.879 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.employee.dao.TchuqinDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tchuqin">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 21:51:20.881 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TchuqinDao.xml
2021-01-08 21:51:20.882 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tchuqin.java
2021-01-08 21:51:21.016 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.entity;

import org.hibernate.validator.constraints.Length;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * employeeEntity
 * @author LX
 * @version 2021-01-08
 */
@Table(name="t_chuqin", alias="a", columns={
		@Column(name="id", attrName="id", label="id", isPK=true),
		@Column(name="yuefen", attrName="yuefen", label="yuefen"),
		@Column(name="tianshu", attrName="tianshu", label="tianshu"),
		@Column(name="e_id", attrName="eid.id", label="e_id", isPK=true),
	}, orderBy="a.id ASC, a.e_id ASC"
)
public class Tchuqin extends DataEntity<Tchuqin> {
	
	private static final long serialVersionUID = 1L;
	private String yuefen;		// yuefen
	private Long tianshu;		// tianshu
	private Tyuangong eid;		// e_id 父类
	
	public Tchuqin() {
		this(null, null);
	}


	public Tchuqin(Tyuangong eid){
		this.eid = eid;
	}
	
	@Length(min=0, max=55, message="yuefen长度不能超过 55 个字符")
	public String getYuefen() {
		return yuefen;
	}

	public void setYuefen(String yuefen) {
		this.yuefen = yuefen;
	}
	
	public Long getTianshu() {
		return tianshu;
	}

	public void setTianshu(Long tianshu) {
		this.tianshu = tianshu;
	}
	
	public Tyuangong getEid() {
		return eid;
	}

	public void setEid(Tyuangong eid) {
		this.eid = eid;
	}
	
}
2021-01-08 21:51:21.020 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tchuqin.java
2021-01-08 21:51:21.031 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TchuqinDao.java
2021-01-08 21:51:21.035 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.employee.entity.Tchuqin;

/**
 * employeeDAO接口
 * @author LX
 * @version 2021-01-08
 */
@MyBatisDao
public interface TchuqinDao extends CrudDao<Tchuqin> {
	
}
2021-01-08 21:51:21.042 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TchuqinDao.java
2021-01-08 21:51:21.048 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TyuangongDao.xml
2021-01-08 21:51:21.048 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.employee.dao.TyuangongDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tyuangong">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 21:51:21.049 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TyuangongDao.xml
2021-01-08 21:51:21.050 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tyuangong.java
2021-01-08 21:51:21.056 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.entity;

import org.hibernate.validator.constraints.Length;
import java.util.List;
import com.jeesite.common.collect.ListUtils;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * employeeEntity
 * @author LX
 * @version 2021-01-08
 */
@Table(name="t_yuangong", alias="a", columns={
		@Column(name="id", attrName="id", label="id", isPK=true),
		@Column(name="org_id", attrName="orgId", label="部门号"),
		@Column(name="eid", attrName="eid", label="员工号", isPK=true),
		@Column(name="name", attrName="name", label="姓名", queryType=QueryType.LIKE),
		@Column(name="sex", attrName="sex", label="性别"),
		@Column(name="age", attrName="age", label="年龄"),
		@Column(name="zhiwei", attrName="zhiwei", label="职位"),
		@Column(name="shifoubumenlingdao", attrName="shifoubumenlingdao", label="是否部门经理"),
		@Column(name="loginname", attrName="loginname", label="登录名"),
		@Column(name="loginpw", attrName="loginpw", label="密码"),
		@Column(name="del", attrName="del", label="del", isInsert=false, isUpdate=false, isQuery=false),
	}, orderBy="a.id DESC, a.eid DESC"
)
public class Tyuangong extends DataEntity<Tyuangong> {
	
	private static final long serialVersionUID = 1L;
	private Long orgId;		// 部门号
	private String eid;		// 员工号
	private String name;		// 姓名
	private String sex;		// 性别
	private String age;		// 年龄
	private String zhiwei;		// 职位
	private String shifoubumenlingdao;		// 是否部门经理
	private String loginname;		// 登录名
	private String loginpw;		// 密码
	private String del;		// del
	private List<Tchuqin> tchuqinList = ListUtils.newArrayList();		// 子表列表
	
	public Tyuangong() {
		this(null, null);
	}

	public Tyuangong(String id, String eid){
		this.id = id;
		this.eid = eid;
	}
	
	public Long getOrgId() {
		return orgId;
	}

	public void setOrgId(Long orgId) {
		this.orgId = orgId;
	}
	
	public String getEid() {
		return eid;
	}

	public void setEid(String eid) {
		this.eid = eid;
	}
	
	@Length(min=0, max=50, message="姓名长度不能超过 50 个字符")
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}
	
	@Length(min=0, max=50, message="性别长度不能超过 50 个字符")
	public String getSex() {
		return sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}
	
	@Length(min=0, max=50, message="年龄长度不能超过 50 个字符")
	public String getAge() {
		return age;
	}

	public void setAge(String age) {
		this.age = age;
	}
	
	@Length(min=0, max=50, message="职位长度不能超过 50 个字符")
	public String getZhiwei() {
		return zhiwei;
	}

	public void setZhiwei(String zhiwei) {
		this.zhiwei = zhiwei;
	}
	
	@Length(min=0, max=50, message="是否部门经理长度不能超过 50 个字符")
	public String getShifoubumenlingdao() {
		return shifoubumenlingdao;
	}

	public void setShifoubumenlingdao(String shifoubumenlingdao) {
		this.shifoubumenlingdao = shifoubumenlingdao;
	}
	
	@Length(min=0, max=50, message="登录名长度不能超过 50 个字符")
	public String getLoginname() {
		return loginname;
	}

	public void setLoginname(String loginname) {
		this.loginname = loginname;
	}
	
	@Length(min=0, max=50, message="密码长度不能超过 50 个字符")
	public String getLoginpw() {
		return loginpw;
	}

	public void setLoginpw(String loginpw) {
		this.loginpw = loginpw;
	}
	
	public String getDel() {
		return del;
	}

	public void setDel(String del) {
		this.del = del;
	}
	
	public List<Tchuqin> getTchuqinList() {
		return tchuqinList;
	}

	public void setTchuqinList(List<Tchuqin> tchuqinList) {
		this.tchuqinList = tchuqinList;
	}
	
}
2021-01-08 21:51:21.060 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tyuangong.java
2021-01-08 21:51:21.061 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TyuangongDao.java
2021-01-08 21:51:21.062 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.employee.entity.Tyuangong;

/**
 * employeeDAO接口
 * @author LX
 * @version 2021-01-08
 */
@MyBatisDao
public interface TyuangongDao extends CrudDao<Tyuangong> {
	
}
2021-01-08 21:51:21.063 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TyuangongDao.java
2021-01-08 21:51:21.065 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\service\TyuangongService.java
2021-01-08 21:51:21.081 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.jeesite.common.entity.Page;
import com.jeesite.common.service.CrudService;
import com.jeesite.modules.employee.entity.Tyuangong;
import com.jeesite.modules.employee.dao.TyuangongDao;
import com.jeesite.modules.employee.entity.Tchuqin;
import com.jeesite.modules.employee.dao.TchuqinDao;

/**
 * employeeService
 * @author LX
 * @version 2021-01-08
 */
@Service
@Transactional(readOnly=true)
public class TyuangongService extends CrudService<TyuangongDao, Tyuangong> {
	
	@Autowired
	private TchuqinDao tchuqinDao;
	
	/**
	 * 获取单条数据
	 * @param tyuangong
	 * @return
	 */
	@Override
	public Tyuangong get(Tyuangong tyuangong) {
		Tyuangong entity = super.get(tyuangong);
		if (entity != null){
			Tchuqin tchuqin = new Tchuqin(entity);
			tchuqin.setStatus(Tchuqin.STATUS_NORMAL);
			entity.setTchuqinList(tchuqinDao.findList(tchuqin));
		}
		return entity;
	}
	
	/**
	 * 查询分页数据
	 * @param tyuangong 查询条件
	 * @param tyuangong.page 分页对象
	 * @return
	 */
	@Override
	public Page<Tyuangong> findPage(Tyuangong tyuangong) {
		return super.findPage(tyuangong);
	}
	
	/**
	 * 保存数据（插入或更新）
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void save(Tyuangong tyuangong) {
		super.save(tyuangong);
		// 保存 Tyuangong子表
		for (Tchuqin tchuqin : tyuangong.getTchuqinList()){
			if (!Tchuqin.STATUS_DELETE.equals(tchuqin.getStatus())){
				tchuqin.setEid(tyuangong);
				if (tchuqin.getIsNewRecord()){
					tchuqinDao.insert(tchuqin);
				}else{
					tchuqinDao.update(tchuqin);
				}
			}else{
				tchuqinDao.delete(tchuqin);
			}
		}
	}
	
	/**
	 * 更新状态
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void updateStatus(Tyuangong tyuangong) {
		super.updateStatus(tyuangong);
	}
	
	/**
	 * 删除数据
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void delete(Tyuangong tyuangong) {
		super.delete(tyuangong);
		Tchuqin tchuqin = new Tchuqin();
		tchuqin.setEid(tyuangong);
		tchuqinDao.deleteByEntity(tchuqin);
	}
	
}
2021-01-08 21:51:21.083 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\service\TyuangongService.java
2021-01-08 21:51:21.084 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\web\TyuangongController.java
2021-01-08 21:51:21.102 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.jeesite.common.config.Global;
import com.jeesite.common.entity.Page;
import com.jeesite.common.web.BaseController;
import com.jeesite.modules.employee.entity.Tyuangong;
import com.jeesite.modules.employee.service.TyuangongService;

/**
 * employeeController
 * @author LX
 * @version 2021-01-08
 */
@Controller
@RequestMapping(value = "${adminPath}/employee/tyuangong")
public class TyuangongController extends BaseController {

	@Autowired
	private TyuangongService tyuangongService;
	
	/**
	 * 获取数据
	 */
	@ModelAttribute
	public Tyuangong get(String id, String eid, boolean isNewRecord) {
		Tyuangong tyuangong = new Tyuangong();
		tyuangong.setId(id);
		tyuangong.setEid(eid);
		tyuangong.setIsNewRecord(isNewRecord);
		return tyuangongService.getAndValid(tyuangong);
	}
	
	/**
	 * 查询列表
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = {"list", ""})
	public String list(Tyuangong tyuangong, Model model) {
		model.addAttribute("tyuangong", tyuangong);
		return "modules/employee/tyuangongList";
	}
	
	/**
	 * 查询列表数据
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = "listData")
	@ResponseBody
	public Page<Tyuangong> listData(Tyuangong tyuangong, HttpServletRequest request, HttpServletResponse response) {
		tyuangong.setPage(new Page<>(request, response));
		Page<Tyuangong> page = tyuangongService.findPage(tyuangong);
		return page;
	}

	/**
	 * 查看编辑表单
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = "form")
	public String form(Tyuangong tyuangong, Model model) {
		model.addAttribute("tyuangong", tyuangong);
		return "modules/employee/tyuangongForm";
	}

	/**
	 * 保存数据
	 */
	@RequiresPermissions("employee:tyuangong:edit")
	@PostMapping(value = "save")
	@ResponseBody
	public String save(@Validated Tyuangong tyuangong) {
		tyuangongService.save(tyuangong);
		return renderResult(Global.TRUE, text("保存employee成功！"));
	}
	
	/**
	 * 删除数据
	 */
	@RequiresPermissions("employee:tyuangong:edit")
	@RequestMapping(value = "delete")
	@ResponseBody
	public String delete(Tyuangong tyuangong) {
		tyuangongService.delete(tyuangong);
		return renderResult(Global.TRUE, text("删除employee成功！"));
	}
	
}
2021-01-08 21:51:21.104 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\web\TyuangongController.java
2021-01-08 21:51:21.105 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongList.html
2021-01-08 21:51:21.123 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: 'employee管理', libs: ['dataGrid']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header">
			<div class="box-title">
				<i class="fa icon-notebook"></i> ${text('employee管理')}
			</div>
			<div class="box-tools pull-right">
				<a href="#" class="btn btn-default" id="btnSearch" title="${text('查询')}"><i class="fa fa-filter"></i> ${text('查询')}</a>
				<% if(hasPermi('employee:tyuangong:edit')){ %>
					<a href="${ctx}/employee/tyuangong/form" class="btn btn-default btnTool" title="${text('新增employee')}"><i class="fa fa-plus"></i> ${text('新增')}</a>
				<% } %>
				<a href="#" class="btn btn-default" id="btnSetting" title="${text('设置')}"><i class="fa fa-navicon"></i></a>
			</div>
		</div>
		<div class="box-body">
			<#form:form id="searchForm" model="${tyuangong}" action="${ctx}/employee/tyuangong/listData" method="post" class="form-inline hide"
					data-page-no="${parameter.pageNo}" data-page-size="${parameter.pageSize}" data-order-by="${parameter.orderBy}">
				<div class="form-group">
					<label class="control-label">${text('部门号')}：</label>
					<div class="control-inline">
						<#form:input path="orgId" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('姓名')}：</label>
					<div class="control-inline">
						<#form:input path="name" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('性别')}：</label>
					<div class="control-inline">
						<#form:input path="sex" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('年龄')}：</label>
					<div class="control-inline">
						<#form:input path="age" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('职位')}：</label>
					<div class="control-inline">
						<#form:input path="zhiwei" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('是否部门经理')}：</label>
					<div class="control-inline">
						<#form:input path="shifoubumenlingdao" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('登录名')}：</label>
					<div class="control-inline">
						<#form:input path="loginname" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('密码')}：</label>
					<div class="control-inline">
						<#form:input path="loginpw" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<button type="submit" class="btn btn-primary btn-sm">${text('查询')}</button>
					<button type="reset" class="btn btn-default btn-sm">${text('重置')}</button>
				</div>
			</#form:form>
			<table id="dataGrid"></table>
			<div id="dataGridPage"></div>
		</div>
	</div>
</div>
<% } %>
<script>
// 初始化DataGrid对象
$('#dataGrid').dataGrid({
	searchForm: $("#searchForm"),
	columnModel: [
		{header:'${text("部门号")}', name:'orgId', index:'a.org_id', width:150, align:"left", frozen:true, formatter: function(val, obj, row, act){
			return '<a href="${ctx}/employee/tyuangong/form?id='+row.id+'&eid='+row.eid+'" class="btnList" data-title="${text("编辑employee")}">'+(val||row.id)+'</a>';
		}},
		{header:'${text("姓名")}', name:'name', index:'a.name', width:150, align:"left"},
		{header:'${text("性别")}', name:'sex', index:'a.sex', width:150, align:"left"},
		{header:'${text("年龄")}', name:'age', index:'a.age', width:150, align:"left"},
		{header:'${text("职位")}', name:'zhiwei', index:'a.zhiwei', width:150, align:"left"},
		{header:'${text("是否部门经理")}', name:'shifoubumenlingdao', index:'a.shifoubumenlingdao', width:150, align:"left"},
		{header:'${text("登录名")}', name:'loginname', index:'a.loginname', width:150, align:"left"},
		{header:'${text("密码")}', name:'loginpw', index:'a.loginpw', width:150, align:"left"},
		{header:'${text("操作")}', name:'actions', width:120, sortable:false, title:false, formatter: function(val, obj, row, act){
			var actions = [];
			<% if(hasPermi('employee:tyuangong:edit')){ %>
				actions.push('<a href="${ctx}/employee/tyuangong/form?id='+row.id+'&eid='+row.eid+'" class="btnList" title="${text("编辑employee")}"><i class="fa fa-pencil"></i></a>&nbsp;');
				actions.push('<a href="${ctx}/employee/tyuangong/delete?id='+row.id+'&eid='+row.eid+'" class="btnList" title="${text("删除employee")}" data-confirm="${text("确认要删除该employee吗？")}"><i class="fa fa-trash-o"></i></a>&nbsp;');
			<% } %>
			return actions.join('');
		}}
	],
	// 加载成功后执行事件
	ajaxSuccess: function(data){
		
	}
});
</script>
2021-01-08 21:51:21.124 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongList.html
2021-01-08 21:51:21.125 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongForm.html
2021-01-08 21:51:21.150 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: 'employee管理', libs: ['validate','dataGrid']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header with-border">
			<div class="box-title">
				<i class="fa icon-note"></i> ${text(tyuangong.isNewRecord ? '新增employee' : '编辑employee')}
			</div>
			<div class="box-tools pull-right">
				<button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
			</div>
		</div>
		<#form:form id="inputForm" model="${tyuangong}" action="${ctx}/employee/tyuangong/save" method="post" class="form-horizontal">
			<div class="box-body">
				<div class="form-unit">${text('基本信息')}</div>
				<#form:hidden path="id"/>
				<div class="row">
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('部门号')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="orgId" class="form-control digits"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required ">*</span> ${text('员工号')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="eid" maxlength="55" readonly="${!tyuangong.isNewRecord}" class="form-control required abc"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('姓名')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="name" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('性别')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="sex" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('年龄')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="age" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('职位')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="zhiwei" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('是否部门经理')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="shifoubumenlingdao" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('登录名')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="loginname" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('密码')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="loginpw" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
				</div>
				<h4 class="form-unit">${text('t_chuqin')}</h4>
				<div class="ml10 mr10">
					<table id="tchuqinDataGrid"></table>
					<% if (hasPermi('employee:tyuangong:edit')){ %>
						<a href="#" id="tchuqinDataGridAddRowBtn" class="btn btn-primary btn-sm mt10 mb10"><i class="fa fa-plus"></i> ${text('增行')}</a>
					<% } %>
				</div>
			</div>
			<div class="box-footer">
				<div class="row">
					<div class="col-sm-offset-2 col-sm-10">
						<% if (hasPermi('employee:tyuangong:edit')){ %>
							<button type="submit" class="btn btn-sm btn-primary" id="btnSubmit"><i class="fa fa-check"></i> ${text('保 存')}</button>&nbsp;
						<% } %>
						<button type="button" class="btn btn-sm btn-default" id="btnCancel" onclick="js.closeCurrentTabPage()"><i class="fa fa-reply-all"></i> ${text('关 闭')}</button>
					</div>
				</div>
			</div>
		</#form:form>
	</div>
</div>
<% } %>
<script>
//初始化t_chuqinDataGrid对象
$("#tchuqinDataGrid").dataGrid({

	data: ${toJson(tyuangong.tchuqinList)},
	datatype: "local", // 设置本地数据
	autoGridHeight: function(){return 'auto'}, // 设置自动高度
	
	// 设置数据表格列
	columnModel: [
		{header:'状态', name:'status', editable:true, hidden:true},
		{header:'主键', name:'id', editable:true, hidden:true},
		{header:'${text("yuefen")}', name:'yuefen', width:150, editable:true, edittype:'text', editoptions:{'maxlength':'55', 'class':'form-control'}},
		{header:'${text("tianshu")}', name:'tianshu', width:150, editable:true, edittype:'text', editoptions:{'class':'form-control digits'}},
		{header:'${text("e_id")}', name:'eid.id', editable:true, hidden:true},
		{header:'${text("操作")}', name:'actions', width:80, sortable:false, fixed:true, formatter: function(val, obj, row, act){
			var actions = [];
			if (val == 'new'){
				actions.push('<a href="#" onclick="js.confirm(\'${text("你确认要删除这条数据吗？")}\', function(){$(\'#tchuqinDataGrid\').dataGrid(\'delRowData\',\''+obj.rowId+'\')});return false;"><i class="fa fa-trash-o"></i></a>&nbsp;');
			}else{
				actions.push('<a href="#" onclick="js.confirm(\'${text("你确认要删除这条数据吗？")}\', function(){$(\'#tchuqinDataGrid\').dataGrid(\'setRowData\',\''+obj.rowId+'\',null,{display:\'none\'});$(\'#'+obj.rowId+'_status\').val(\''+Global.STATUS_DELETE+'\');});return false;"><i class="fa fa-trash-o"></i></a>&nbsp;');
			}
			return actions.join('');
		}, editoptions: {defaultValue: 'new'}}
	],
	
	// 编辑表格参数
	editGrid: true,				// 是否是编辑表格
	editGridInitRowNum: 1,		// 编辑表格的初始化新增行数
	editGridAddRowBtn: $('#tchuqinDataGridAddRowBtn'),	// 子表增行按钮
	editGridAddRowInitData: {id: '', status: Global.STATUS_NORMAL},	// 新增行的时候初始化的数据
	
	// 编辑表格的提交数据参数
	editGridInputFormListName: 'tchuqinList', // 提交的数据列表名
	editGridInputFormListAttrs: 'status,id,yuefen,tianshu,eid.id,', // 提交数据列表的属性字段
	
	// 加载成功后执行事件
	ajaxSuccess: function(data){
		
	}
});
</script>
<script>
$("#inputForm").validate({
	submitHandler: function(form){
		js.ajaxSubmitForm($(form), function(data){
			js.showMessage(data.message);
			if(data.result == Global.TRUE){
				js.closeCurrentTabPage(function(contentWindow){
					contentWindow.page();
				});
			}
		}, "json");
    }
});
</script>
2021-01-08 21:51:21.152 DEBUG 25420 [nio-8980-exec-2] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongForm.html
2021-01-08 21:51:21.162 DEBUG 25420 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:51:21.154  用时: 530毫秒  URI: /js/a/gen/genTable/save  总内存: 600MB  已用内存: 382.724MB
2021-01-08 21:51:21.169 DEBUG 25420 [   log-save-8-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:51:21.169 DEBUG 25420 [   log-save-8-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:51:21.170 DEBUG 25420 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:51:21.175 DEBUG 25420 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347541402673139712(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:51:21.162(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=t_yuangong&comments=t_yuangong&className=Tyuangong&functionAuthor=LX&parentTableName=&parentTableFkName=&remarks=&columnList[0].id=1347540922890899456&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=id&columnList[0].columnType=int&columnList[0].attrType=String&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=6/4/8&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1347540922916065280&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=org_id&columnList[1].comments=部门号&columnList[1].columnType=int&columnList[1].attrType=Long&columnList[1].fullAttrName=orgId&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=6/4/8&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[1].optionMap['fieldValid']=digits&columnList[2].id=1347540922941231104&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=eid&columnList[2].comments=员工号&columnList[2].columnType=varchar(55)&columnList[2].attrType=String&columnList[2].fullAttrName=eid&!columnList[2].isPk=&columnList[2].isPk=1&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&!columnList[2].isList=&!columnList[2].isQuery=&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].isRequired=1&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=6/4/8&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[2].optionMap['fieldValid']=abc&columnList[3].id=1347540922991562752&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=name&columnList[3].comments=姓名&columnList[3].columnType=varchar(50)&columnList[3].attrType=String&columnList[3].fullAttrName=name&!columnList[3].isPk=&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&columnList[3].isUpdate=1&!columnList[3].isList=&columnList[3].isList=1&!columnList[3].isQuery=&columnList[3].isQuery=1&columnList[3].queryType=LIKE&!columnList[3].isEdit=&columnList[3].isEdit=1&!columnList[3].isRequired=&columnList[3].showType=input&columnList[3].optionMap['gridRowCol']=6/4/8&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[4].id=1347540923025117184&columnList[4].status=&columnList[4].columnSort=50&columnList[4].columnName=sex&columnList[4].comments=性别&columnList[4].columnType=varchar(50)&columnList[4].attrType=String&columnList[4].fullAttrName=sex&!columnList[4].isPk=&!columnList[4].isInsert=&columnList[4].isInsert=1&!columnList[4].isUpdate=&columnList[4].isUpdate=1&!columnList[4].isList=&columnList[4].isList=1&!columnList[4].isQuery=&columnList[4].isQuery=1&columnList[4].queryType=EQ&!columnList[4].isEdit=&columnList[4].isEdit=1&!columnList[4].isRequired=&columnList[4].showType=input&columnList[4].optionMap['gridRowCol']=6/4/8&!columnList[4].optionMap['isNewLine']=&columnList[4].optionMap['dictName']=&columnList[4].optionMap['dictType']=&!columnList[4].optionMap['fieldValid']=&columnList[5].id=1347540923058671616&columnList[5].status=&columnList[5].columnSort=60&columnList[5].columnName=age&columnList[5].comments=年龄&columnList[5].columnType=varchar(50)&columnList[5].attrType=String&columnList[5].fullAttrName=age&!columnList[5].isPk=&!columnList[5].isInsert=&columnList[5].isInsert=1&!columnList[5].isUpdate=&columnList[5].isUpdate=1&!columnList[5].isList=&columnList[5].isList=1&!columnList[5].isQuery=&columnList[5].isQuery=1&columnList[5].queryType=EQ&!columnList[5].isEdit=&columnList[5].isEdit=1&!columnList[5].isRequired=&columnList[5].showType=input&columnList[5].optionMap['gridRowCol']=6/4/8&!columnList[5].optionMap['isNewLine']=&columnList[5].optionMap['dictName']=&columnList[5].optionMap['dictType']=&!columnList[5].optionMap['fieldValid']=&columnList[6].id=1347540923079643136&columnList[6].status=&columnList[6].columnSort=70&columnList[6].columnName=zhiwei&columnList[6].comments=职位&columnList[6].columnType=varchar(50)&columnList[6].attrType=String&columnList[6].fullAttrName=zhiwei&!columnList[6].isPk=&!columnList[6].isInsert=&columnList[6].isInsert=1&!columnList[6].isUpdate=&columnList[6].isUpdate=1&!columnList[6].isList=&columnList[6].isList=1&!columnList[6].isQuery=&columnList[6].isQuery=1&columnList[6].queryType=EQ&!columnList[6].isEdit=&columnList[6].isEdit=1&!columnList[6].isRequired=&columnList[6].showType=input&columnList[6].optionMap['gridRowCol']=6/4/8&!columnList[6].optionMap['isNewLine']=&columnList[6].optionMap['dictName']=&columnList[6].optionMap['dictType']=&!columnList[6].optionMap['fieldValid']=&columnList[7].id=1347540923100614656&columnList[7].status=&columnList[7].columnSort=80&columnList[7].columnName=shifoubumenlingdao&columnList[7].comments=是否部门经理&columnList[7].columnType=varchar(50)&columnList[7].attrType=String&columnList[7].fullAttrName=shifoubumenlingdao&!columnList[7].isPk=&!columnList[7].isInsert=&columnList[7].isInsert=1&!columnList[7].isUpdate=&columnList[7].isUpdate=1&!columnList[7].isList=&columnList[7].isList=1&!columnList[7].isQuery=&columnList[7].isQuery=1&columnList[7].queryType=EQ&!columnList[7].isEdit=&columnList[7].isEdit=1&!columnList[7].isRequired=&columnList[7].showType=input&columnList[7].optionMap['gridRowCol']=6/4/8&!columnList[7].optionMap['isNewLine']=&columnList[7].optionMap['dictName']=&columnList[7].optionMap['dictType']=&!columnList[7].optionMap['fieldValid']=&columnList[8].id=1347540923138363392&columnList[8].status=&columnList[8].columnSort=90&columnList[8].columnName=loginname&columnList[8].comments=登录名&columnList[8].columnType=varchar(50)&columnList[8].attrType=String&columnList[8].fullAttrName=loginname&!columnList[8].isPk=&!columnList[8].isInsert=&columnList[8].isInsert=1&!columnList[8].isUpdate=&columnList[8].isUpdate=1&!columnList[8].isList=&columnList[8].isList=1&!columnList[8].isQuery=&columnList[8].isQuery=1&columnList[8].queryType=EQ&!columnList[8].isEdit=&columnList[8].isEdit=1&!columnList[8].isRequired=&columnList[8].showType=input&columnList[8].optionMap['gridRowCol']=6/4/8&!columnList[8].optionMap['isNewLine']=&columnList[8].optionMap['dictName']=&columnList[8].optionMap['dictType']=&!columnList[8].optionMap['fieldValid']=&columnList[9].id=1347540923167723520&columnList[9].status=&columnList[9].columnSort=100&columnList[9].columnName=loginpw&columnList[9].comments=密码&columnList[9].columnType=varchar(50)&columnList[9].attrType=String&columnList[9].fullAttrName=loginpw&!columnList[9].isPk=&!columnList[9].isInsert=&columnList[9].isInsert=1&!columnList[9].isUpdate=&columnList[9].isUpdate=1&!columnList[9].isList=&columnList[9].isList=1&!columnList[9].isQuery=&columnList[9].isQuery=1&columnList[9].queryType=EQ&!columnList[9].isEdit=&columnList[9].isEdit=1&!columnList[9].isRequired=&columnList[9].showType=input&columnList[9].optionMap['gridRowCol']=6/4/8&!columnList[9].optionMap['isNewLine']=&columnList[9].optionMap['dictName']=&columnList[9].optionMap['dictType']=&!columnList[9].optionMap['fieldValid']=&columnList[10].id=1347540923243220992&columnList[10].status=&columnList[10].columnSort=110&columnList[10].columnName=del&columnList[10].comments=del&columnList[10].columnType=varchar(50)&columnList[10].attrType=String&columnList[10].fullAttrName=del&!columnList[10].isPk=&!columnList[10].isInsert=&!columnList[10].isUpdate=&!columnList[10].isList=&!columnList[10].isQuery=&columnList[10].queryType=EQ&!columnList[10].isEdit=&!columnList[10].isRequired=&columnList[10].showType=hidden&columnList[10].optionMap['gridRowCol']=6/4/8&!columnList[10].optionMap['isNewLine']=&columnList[10].optionMap['dictName']=&columnList[10].optionMap['dictType']=&!columnList[10].optionMap['fieldValid']=&tplCategory=crud&packageName=com.jeesite.modules&moduleName=employee&subModuleName=&functionName=employee&functionNameSimple=employee&genBaseDir=C:\Users\Lx\work2\web&!optionMap['isHaveDisableEnable']=&optionMap['isHaveDisableEnable']=0&!optionMap['isHaveDelete']=&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&!optionMap['isImageUpload']=&optionMap['isImageUpload']=0&!optionMap['isFileUpload']=&optionMap['isFileUpload']=0&!optionMap['isBpmForm']=&optionMap['isBpmForm']=0&optionMap['bpmFormKey']=&genFlag=2&!replaceFile=0(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 530(Long)
2021-01-08 21:51:21.178 DEBUG 25420 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:51:21.220 DEBUG 25420 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:51:21.220  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:51:21.234 DEBUG 25420 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:51:21.235 DEBUG 25420 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:51:21.255 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:51:21.255 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:51:21.258 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:51:21.259 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:51:21.264 DEBUG 25420 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:51:21.277 DEBUG 25420 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:51:21.274  用时: 54毫秒  URI: /js/a/gen/genTable/listData  总内存: 600MB  已用内存: 385.052MB
2021-01-08 21:51:21.280 DEBUG 25420 [   log-save-8-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:51:21.280 DEBUG 25420 [   log-save-8-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:51:21.281 DEBUG 25420 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:51:21.282 DEBUG 25420 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347541403147096064(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:51:21.275(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 54(Long)
2021-01-08 21:51:21.285 DEBUG 25420 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:51:24.047 DEBUG 25420 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:51:24.047  URI: /js/a/gen/genTable/createMenu  IP: 127.0.0.1
2021-01-08 21:51:24.049 DEBUG 25420 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:51:24.050 DEBUG 25420 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:51:24.055 DEBUG 25420 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:51:24.055 DEBUG 25420 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:51:24.057 DEBUG 25420 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:51:24.063 DEBUG 25420 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:51:24.069 DEBUG 25420 [nio-8980-exec-3] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:51:24.072 DEBUG 25420 [nio-8980-exec-3] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:51:24.077 DEBUG 25420 [nio-8980-exec-3] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:51:24.086 INFO  25420 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: redirect:/a/sys/menu/form?menuName=employee&menuHref=/employee/tyuangong/list&permission=employee:tyuangong:view,employee:tyuangong:edit <<<<<<<<< /js/a/gen/genTable/createMenu >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#createMenu(GenTable, Model)
2021-01-08 21:51:24.099 DEBUG 25420 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:51:24.098  用时: 51毫秒  URI: /js/a/gen/genTable/createMenu  总内存: 600MB  已用内存: 387.803MB
2021-01-08 21:51:24.105 DEBUG 25420 [   log-save-8-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 3毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:51:24.106 DEBUG 25420 [   log-save-8-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:51:24.106 DEBUG 25420 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:51:24.107 DEBUG 25420 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347541414991810560(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:51:24.099(Timestamp), /js/a/gen/genTable/createMenu(String), GET(String), tableName=t_yuangong(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 51(Long)
2021-01-08 21:51:24.111 DEBUG 25420 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:51:24.117 DEBUG 25420 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:51:24.117  URI: /js/a/sys/menu/form  IP: 127.0.0.1
2021-01-08 21:51:24.239 DEBUG 25420 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} ORDER BY a.tree_sort DESC
2021-01-08 21:51:24.239 DEBUG 25420 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:51:24.247 DEBUG 25420 [io-8980-exec-10] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? ORDER BY a.tree_sort DESC LIMIT 1
2021-01-08 21:51:24.249 DEBUG 25420 [io-8980-exec-10] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String)
2021-01-08 21:51:24.253 DEBUG 25420 [io-8980-exec-10] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 1
2021-01-08 21:51:24.264 DEBUG 25420 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:51:24.265 DEBUG 25420 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:51:24.278 DEBUG 25420 [io-8980-exec-10] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2021-01-08 21:51:24.280 DEBUG 25420 [io-8980-exec-10] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2021-01-08 21:51:24.297 DEBUG 25420 [io-8980-exec-10] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2021-01-08 21:51:24.300 INFO  25420 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/menuForm <<<<<<<<< /js/a/sys/menu/form >>>>>>>>> com.jeesite.modules.sys.web.MenuController#form(Menu, Model)
2021-01-08 21:51:24.367 DEBUG 25420 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:51:24.368 DEBUG 25420 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:51:24.385 DEBUG 25420 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:51:24.387 DEBUG 25420 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_type(String), 1(String), 0(String)
2021-01-08 21:51:24.390 DEBUG 25420 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 21:51:24.410 DEBUG 25420 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:51:24.411 DEBUG 25420 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:51:24.417 DEBUG 25420 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:51:24.418 DEBUG 25420 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_show_hide(String), 1(String), 0(String)
2021-01-08 21:51:24.421 DEBUG 25420 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 21:51:24.427 DEBUG 25420 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:51:24.428 DEBUG 25420 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:51:24.433 DEBUG 25420 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:51:24.433 DEBUG 25420 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_weight(String), 1(String), 0(String)
2021-01-08 21:51:24.438 DEBUG 25420 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 4
2021-01-08 21:51:24.467 DEBUG 25420 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:51:24.464  用时: 347毫秒  URI: /js/a/sys/menu/form  总内存: 600MB  已用内存: 408.015MB
2021-01-08 21:51:24.472 DEBUG 25420 [   log-save-8-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:51:24.472 DEBUG 25420 [   log-save-8-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:51:24.472 DEBUG 25420 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:51:24.473 DEBUG 25420 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347541416531120128(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 21:51:24.466(Timestamp), /js/a/sys/menu/form(String), GET(String), menuName=employee&menuHref=/employee/tyuangong/list&permission=employee:tyuangong:view,employee:tyuangong:edit(String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 347(Long)
2021-01-08 21:51:24.475 DEBUG 25420 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:51:47.391 DEBUG 25420 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:51:47.391  URI: /js/a/sys/menu/save  IP: 127.0.0.1
2021-01-08 21:51:47.529 DEBUG 25420 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`menu_code` = #{menuCode}
2021-01-08 21:51:47.530 DEBUG 25420 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:51:47.536 DEBUG 25420 [nio-8980-exec-8] [com.jeesite.modules.sys.dao.MenuDao.get] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`menu_code` = ?
2021-01-08 21:51:47.537 DEBUG 25420 [nio-8980-exec-8] [com.jeesite.modules.sys.dao.MenuDao.get] - ==> Parameters: (String)
2021-01-08 21:51:47.539 DEBUG 25420 [nio-8980-exec-8] [com.jeesite.modules.sys.dao.MenuDao.get] - <==      Total: 0
2021-01-08 21:51:47.546 DEBUG 25420 [nio-8980-exec-8] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_menu` (`status`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`, `parent_code`, `parent_codes`, `tree_sort`, `tree_sorts`, `tree_leaf`, `tree_level`, `tree_names`, `menu_code`, `menu_name`, `menu_type`, `menu_href`, `menu_target`, `menu_icon`, `menu_color`, `menu_title`, `permission`, `weight`, `is_show`, `sys_code`, `module_codes`, `extend_s1`, `extend_s2`, `extend_s3`, `extend_s4`, `extend_s5`, `extend_s6`, `extend_s7`, `extend_s8`) VALUES (#{status}, #{createBy}, #{createDate}, #{updateBy}, #{updateDate}, #{remarks}, #{parentCode}, #{parentCodes}, #{treeSort}, #{treeSorts}, #{treeLeaf}, #{treeLevel}, #{treeNames}, #{menuCode}, #{menuNameOrig}, #{menuType}, #{menuHref}, #{menuTarget}, #{menuIcon}, #{menuColor}, #{menuTitle}, #{permission}, #{weight}, #{isShow}, #{sysCode}, #{moduleCodes}, #{extend.extendS1}, #{extend.extendS2}, #{extend.extendS3}, #{extend.extendS4}, #{extend.extendS5}, #{extend.extendS6}, #{extend.extendS7}, #{extend.extendS8})
2021-01-08 21:51:47.552 DEBUG 25420 [nio-8980-exec-8] [c.j.modules.sys.dao.MenuDao.insert     ] - ==>  Preparing: INSERT INTO `js_sys_menu` (`status`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`, `parent_code`, `parent_codes`, `tree_sort`, `tree_sorts`, `tree_leaf`, `tree_level`, `tree_names`, `menu_code`, `menu_name`, `menu_type`, `menu_href`, `menu_target`, `menu_icon`, `menu_color`, `menu_title`, `permission`, `weight`, `is_show`, `sys_code`, `module_codes`, `extend_s1`, `extend_s2`, `extend_s3`, `extend_s4`, `extend_s5`, `extend_s6`, `extend_s7`, `extend_s8`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:51:47.555 DEBUG 25420 [nio-8980-exec-8] [c.j.modules.sys.dao.MenuDao.insert     ] - ==> Parameters: 0(String), system(String), 2021-01-08 21:51:47.545(Timestamp), system(String), 2021-01-08 21:51:47.545(Timestamp), (String), 0(String), 0,(String), 9040(Integer), 0000009040,(String), 1(String), 0(Integer), 员工信息(String), 1347541513331462144(String), 员工信息(String), 1(String), /employee/tyuangong/list(String), (String), icon-people(String), (String), (String), employee:tyuangong:view,employee:tyuangong:edit(String), 40(Integer), 1(String), default(String), cms(String), (String), (String), (String), (String), (String), (String), (String), (String)
2021-01-08 21:51:47.560 DEBUG 25420 [nio-8980-exec-8] [c.j.modules.sys.dao.MenuDao.insert     ] - <==    Updates: 1
2021-01-08 21:51:47.567 INFO  25420 [nio-8980-exec-8] [com.jeesite.common.cache.CacheUtils    ] - removeByKeyPrefix: userCache_system => [menuList_default_null_0__tree, menuList_default_null_0_]
2021-01-08 21:51:47.582 DEBUG 25420 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:51:47.581  用时: 190毫秒  URI: /js/a/sys/menu/save  总内存: 600MB  已用内存: 418.618MB
2021-01-08 21:51:47.600 DEBUG 25420 [   log-save-8-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:51:47.600 DEBUG 25420 [   log-save-8-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:51:47.601 DEBUG 25420 [   log-save-8-2] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:51:47.603 DEBUG 25420 [   log-save-8-2] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 21:51:47.616 DEBUG 25420 [   log-save-8-2] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 21:51:47.620 DEBUG 25420 [   log-save-8-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:51:47.685 DEBUG 25420 [   log-save-8-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:51:47.656 DEBUG 25420 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:51:47.656  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:51:47.686 DEBUG 25420 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:51:47.687 DEBUG 25420 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347541513486651392(String), update(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 21:51:47.582(Timestamp), /js/a/sys/menu/save(String), POST(String), sysCode=default&menuCode=&parent.menuNameOrig=&parent.id=&!menuType=&menuType=1&menuNameOrig=员工信息&!moduleCodes=&moduleCodes=cms&menuHref=/employee/tyuangong/list&menuTarget=&treeSort=9040&permission=employee:tyuangong:view,employee:tyuangong:edit&menuIcon=icon-people&menuColor=&menuTitle=&!isShow=&isShow=1&weight=40&remarks=&extend.extendS1=&extend.extendS2=&extend.extendS3=&extend.extendS4=&extend.extendS5=&extend.extendS6=&extend.extendS7=&extend.extendS8=&extend.extendI1=&extend.extendI2=&extend.extendI3=&extend.extendI4=&extend.extendF1=&extend.extendF2=&extend.extendF3=&extend.extendF4=&extend.extendD1=&extend.extendD2=&extend.extendD3=&extend.extendD4=(String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 190(Long)
2021-01-08 21:51:47.689 DEBUG 25420 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:51:47.702 DEBUG 25420 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:51:47.703 DEBUG 25420 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:51:47.710 DEBUG 25420 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:51:47.710 DEBUG 25420 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2021-01-08 21:51:47.726 DEBUG 25420 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 21:51:47.730 DEBUG 25420 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:51:47.746 DEBUG 25420 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:51:47.776 DEBUG 25420 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:51:47.777 DEBUG 25420 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:51:47.779 DEBUG 25420 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:51:47.781 DEBUG 25420 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:51:47.783 DEBUG 25420 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:51:47.789 DEBUG 25420 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:51:47.788  用时: 132毫秒  URI: /js/a/gen/genTable/listData  总内存: 600MB  已用内存: 426.117MB
2021-01-08 21:51:47.796 DEBUG 25420 [   log-save-8-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:51:47.797 DEBUG 25420 [   log-save-8-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@72e9f0f7] will be managed by Spring
2021-01-08 21:51:47.798 DEBUG 25420 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:51:47.799 DEBUG 25420 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347541514354872320(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:51:47.789(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 132(Long)
2021-01-08 21:51:47.800 DEBUG 25420 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:52:01.291 INFO  12672 [           main] [com.jeesite.modules.Application        ] - Starting Application on DESKTOP-0IUV8EB with PID 12672 (C:\Users\Lx\work2\web\src\main\webapp\WEB-INF\classes started by Lx in C:\Users\Lx\work2\web)
2021-01-08 21:52:01.297 DEBUG 12672 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2021-01-08 21:52:01.298 INFO  12672 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2021-01-08 21:52:04.964 INFO  12672 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2021-01-08 21:52:04.965 INFO  12672 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2021-01-08 21:52:07.023 INFO  12672 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/Lx
2021-01-08 21:52:07.041 INFO  12672 [           main] [com.jeesite.common.config.Global       ] - user.dir: C:/Users/Lx/work2/web
2021-01-08 21:52:07.042 INFO  12672 [           main] [com.jeesite.common.config.Global       ] - logPath: C:/Users/Lx/work2/web/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.2 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：adfb80499b32e1492729a84d62f8cd98
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2021-01-08 21:52:08.457 DEBUG 12672 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2021-01-08 21:52:09.396 INFO  12672 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2021-01-08 21:52:11.690 INFO  12672 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2021-01-08 21:52:17.463 DEBUG 12672 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:52:18.094 DEBUG 12672 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 21:52:18.119 DEBUG 12672 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 21:52:18.160 DEBUG 12672 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 21:52:18.173 DEBUG 12672 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 7毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:52:18.177 DEBUG 12672 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2021-01-08 21:52:18.180 DEBUG 12672 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2021-01-08 21:52:18.189 DEBUG 12672 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2021-01-08 21:52:18.264 INFO  12672 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2021-01-08 21:52:20.278 INFO  12672 [           main] [com.jeesite.modules.Application        ] - Started Application in 20.411 seconds (JVM running for 21.613)
2021-01-08 21:52:29.402 DEBUG 12672 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2021-01-08 21:52:29.403 DEBUG 12672 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:52:29.405 DEBUG 12672 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2021-01-08 21:52:29.405 DEBUG 12672 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2021-01-08 21:52:29.420 DEBUG 12672 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2021-01-08 21:52:33.149 DEBUG 12672 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:52:33.154 DEBUG 12672 [nio-8980-exec-3] [c.j.m.sys.dao.UserDao.getByLoginCode   ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.status != ? AND upper(a.login_code) = upper(?)
2021-01-08 21:52:33.155 DEBUG 12672 [nio-8980-exec-3] [c.j.m.sys.dao.UserDao.getByLoginCode   ] - ==> Parameters: 1(String), system(String)
2021-01-08 21:52:33.163 DEBUG 12672 [nio-8980-exec-3] [c.j.m.sys.dao.UserDao.getByLoginCode   ] - <==      Total: 1
2021-01-08 21:52:33.476 INFO  12672 [nio-8980-exec-3] [com.jeesite.common.cache.CacheUtils    ] - removeCache: userCache_system
2021-01-08 21:52:33.485 DEBUG 12672 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:52:33.487 DEBUG 12672 [nio-8980-exec-3] [c.j.m.sys.dao.UserDao.updateLoginInfo  ] - ==>  Preparing: UPDATE js_sys_user SET last_login_ip = ?, last_login_date = ? WHERE user_code = ?
2021-01-08 21:52:33.490 DEBUG 12672 [nio-8980-exec-3] [c.j.m.sys.dao.UserDao.updateLoginInfo  ] - ==> Parameters: 127.0.0.1(String), 2021-01-08 21:52:33.483(Timestamp), system(String)
2021-01-08 21:52:33.492 DEBUG 12672 [nio-8980-exec-3] [c.j.m.sys.dao.UserDao.updateLoginInfo  ] - <==    Updates: 1
2021-01-08 21:52:33.562 DEBUG 12672 [   log-save-9-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:52:33.564 DEBUG 12672 [   log-save-9-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:52:33.565 DEBUG 12672 [   log-save-9-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:52:33.568 DEBUG 12672 [   log-save-9-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347541706189795328(String), loginLogout(String), 系统登录(String), system(String), 超级管理员(String), 2021-01-08 21:52:33.526(Timestamp), /js/a/login(String), POST(String), username=c3lzdGVt&password=*&validCode=&loginValidCode=&rememberUserCode=on&rememberMe=on&__url=http://127.0.0.1:8980/js/a/index#/js/a/gen/genTable/list#%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 0(Long)
2021-01-08 21:52:33.570 DEBUG 12672 [   log-save-9-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:52:33.681 DEBUG 12672 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 14毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:52:33.686 DEBUG 12672 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:52:33.693 DEBUG 12672 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:52:33.696 DEBUG 12672 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2021-01-08 21:52:33.771 DEBUG 12672 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 21:52:34.059 DEBUG 12672 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:52:34.062 DEBUG 12672 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:52:34.067 DEBUG 12672 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:52:34.070 DEBUG 12672 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_sys_code(String), 1(String), 0(String)
2021-01-08 21:52:34.081 DEBUG 12672 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2021-01-08 21:52:34.531 DEBUG 12672 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:52:34.529  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2021-01-08 21:52:34.563 INFO  12672 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2021-01-08 21:52:34.694 DEBUG 12672 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:52:34.688  用时: 159毫秒  URI: /js/a/gen/genTable/list  总内存: 603MB  已用内存: 194.380MB
2021-01-08 21:52:34.702 DEBUG 12672 [   log-save-9-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:52:34.703 DEBUG 12672 [   log-save-9-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:52:34.704 DEBUG 12672 [   log-save-9-2] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:52:34.705 DEBUG 12672 [   log-save-9-2] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 21:52:34.762 DEBUG 12672 [   log-save-9-2] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 21:52:34.768 DEBUG 12672 [   log-save-9-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:52:34.772 DEBUG 12672 [   log-save-9-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:52:34.773 DEBUG 12672 [   log-save-9-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:52:34.775 DEBUG 12672 [   log-save-9-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347541711071965184(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:52:34.69(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 159(Long)
2021-01-08 21:52:34.780 DEBUG 12672 [   log-save-9-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:52:35.329 DEBUG 12672 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:52:35.329  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:52:35.457 DEBUG 12672 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:52:35.458 DEBUG 12672 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:52:35.614 DEBUG 12672 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:52:35.615 DEBUG 12672 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:52:35.621 DEBUG 12672 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:52:35.622 DEBUG 12672 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:52:35.624 DEBUG 12672 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:52:35.656 DEBUG 12672 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:52:35.650  用时: 321毫秒  URI: /js/a/gen/genTable/listData  总内存: 603MB  已用内存: 226.919MB
2021-01-08 21:52:35.664 DEBUG 12672 [   log-save-9-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:52:35.665 DEBUG 12672 [   log-save-9-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:52:35.666 DEBUG 12672 [   log-save-9-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:52:35.673 DEBUG 12672 [   log-save-9-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347541715123662848(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:52:35.656(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 321(Long)
2021-01-08 21:52:35.677 DEBUG 12672 [   log-save-9-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:54:02.744 DEBUG 12672 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:54:02.744  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2021-01-08 21:54:02.749 INFO  12672 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2021-01-08 21:54:02.759 DEBUG 12672 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:54:02.754  用时: 10毫秒  URI: /js/a/gen/genTable/list  总内存: 603MB  已用内存: 246.074MB
2021-01-08 21:54:02.776 DEBUG 12672 [   log-save-9-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:54:02.778 DEBUG 12672 [   log-save-9-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:02.778 DEBUG 12672 [   log-save-9-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:54:02.780 DEBUG 12672 [   log-save-9-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347542080451735552(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:54:02.757(Timestamp), /js/a/gen/genTable/list(String), GET(String), parentTableName=t_yuangong(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 10(Long)
2021-01-08 21:54:02.781 DEBUG 12672 [   log-save-9-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:54:02.843 DEBUG 12672 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:54:02.843  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:54:02.851 DEBUG 12672 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:54:02.851 DEBUG 12672 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:02.868 DEBUG 12672 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE a.`parent_table_name` = ?
2021-01-08 21:54:02.869 DEBUG 12672 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:54:02.870 DEBUG 12672 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:54:02.871 DEBUG 12672 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:54:02.876 DEBUG 12672 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 1
2021-01-08 21:54:02.884 DEBUG 12672 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:54:02.882  用时: 39毫秒  URI: /js/a/gen/genTable/listData  总内存: 603MB  已用内存: 248.907MB
2021-01-08 21:54:02.895 DEBUG 12672 [   log-save-9-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 6毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:54:02.896 DEBUG 12672 [   log-save-9-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:02.897 DEBUG 12672 [   log-save-9-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:54:02.899 DEBUG 12672 [   log-save-9-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347542080980217856(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:54:02.883(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=t_yuangong&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 39(Long)
2021-01-08 21:54:02.900 DEBUG 12672 [   log-save-9-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:54:05.328 DEBUG 12672 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:54:05.328  URI: /js/a/gen/genTable/delete  IP: 127.0.0.1
2021-01-08 21:54:05.331 DEBUG 12672 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:54:05.332 DEBUG 12672 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:05.336 DEBUG 12672 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:54:05.337 DEBUG 12672 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:54:05.354 DEBUG 12672 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:54:05.358 DEBUG 12672 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:54:05.365 DEBUG 12672 [nio-8980-exec-9] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:54:05.365 DEBUG 12672 [nio-8980-exec-9] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:54:05.368 DEBUG 12672 [nio-8980-exec-9] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 4
2021-01-08 21:54:05.423 DEBUG 12672 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 4毫秒: DELETE FROM `js_gen_table` WHERE `table_name` = #{tableName}
2021-01-08 21:54:05.424 DEBUG 12672 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:05.424 DEBUG 12672 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.delete ] - ==>  Preparing: DELETE FROM `js_gen_table` WHERE `table_name` = ?
2021-01-08 21:54:05.425 DEBUG 12672 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.delete ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:54:05.426 DEBUG 12672 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.delete ] - <==    Updates: 1
2021-01-08 21:54:05.429 DEBUG 12672 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: DELETE FROM `js_gen_table_column` WHERE `table_name` = #{sqlMap.where#table_name#EQ1}
2021-01-08 21:54:05.430 DEBUG 12672 [nio-8980-exec-9] [c.j.m.g.d.G.deleteByEntity             ] - ==>  Preparing: DELETE FROM `js_gen_table_column` WHERE `table_name` = ?
2021-01-08 21:54:05.431 DEBUG 12672 [nio-8980-exec-9] [c.j.m.g.d.G.deleteByEntity             ] - ==> Parameters: t_chuqin(String)
2021-01-08 21:54:05.433 DEBUG 12672 [nio-8980-exec-9] [c.j.m.g.d.G.deleteByEntity             ] - <==    Updates: 4
2021-01-08 21:54:05.450 DEBUG 12672 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:54:05.445  用时: 117毫秒  URI: /js/a/gen/genTable/delete  总内存: 603MB  已用内存: 253.597MB
2021-01-08 21:54:05.455 DEBUG 12672 [   log-save-9-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:54:05.457 DEBUG 12672 [   log-save-9-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:05.457 DEBUG 12672 [   log-save-9-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:54:05.459 DEBUG 12672 [   log-save-9-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347542091746996224(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:54:05.45(Timestamp), /js/a/gen/genTable/delete(String), POST(String), tableName=t_chuqin(String), t_chuqin(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 117(Long)
2021-01-08 21:54:05.465 DEBUG 12672 [   log-save-9-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:54:05.485 DEBUG 12672 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:54:05.484  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:54:05.493 DEBUG 12672 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:54:05.493 DEBUG 12672 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:05.503 DEBUG 12672 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE a.`parent_table_name` = ?
2021-01-08 21:54:05.504 DEBUG 12672 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:54:05.509 DEBUG 12672 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:54:05.511 DEBUG 12672 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:54:05.512 DEBUG 12672 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 0
2021-01-08 21:54:05.517 DEBUG 12672 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:54:05.516  用时: 32毫秒  URI: /js/a/gen/genTable/listData  总内存: 603MB  已用内存: 254.535MB
2021-01-08 21:54:05.525 DEBUG 12672 [   log-save-9-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:54:05.528 DEBUG 12672 [   log-save-9-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:05.529 DEBUG 12672 [   log-save-9-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:54:05.532 DEBUG 12672 [   log-save-9-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347542092028014592(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:54:05.517(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=t_yuangong&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 32(Long)
2021-01-08 21:54:05.533 DEBUG 12672 [   log-save-9-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:54:14.087 DEBUG 12672 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:54:14.087  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2021-01-08 21:54:14.091 INFO  12672 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2021-01-08 21:54:14.099 DEBUG 12672 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:54:14.097  用时: 10毫秒  URI: /js/a/gen/genTable/list  总内存: 603MB  已用内存: 264.224MB
2021-01-08 21:54:14.103 DEBUG 12672 [   log-save-9-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:54:14.104 DEBUG 12672 [   log-save-9-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:14.106 DEBUG 12672 [   log-save-9-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:54:14.112 DEBUG 12672 [   log-save-9-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347542128023531520(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:54:14.099(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 10(Long)
2021-01-08 21:54:14.114 DEBUG 12672 [   log-save-9-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:54:14.201 DEBUG 12672 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:54:14.201  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:54:14.211 DEBUG 12672 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:54:14.212 DEBUG 12672 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:14.229 DEBUG 12672 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:54:14.229 DEBUG 12672 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:54:14.233 DEBUG 12672 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:54:14.234 DEBUG 12672 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:54:14.247 DEBUG 12672 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:54:14.263 DEBUG 12672 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:54:14.262  用时: 61毫秒  URI: /js/a/gen/genTable/listData  总内存: 603MB  已用内存: 265.163MB
2021-01-08 21:54:14.269 DEBUG 12672 [   log-save-9-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:54:14.270 DEBUG 12672 [   log-save-9-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:14.271 DEBUG 12672 [   log-save-9-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:54:14.278 DEBUG 12672 [   log-save-9-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347542128711397376(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:54:14.263(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 61(Long)
2021-01-08 21:54:14.280 DEBUG 12672 [   log-save-9-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:54:20.281 DEBUG 12672 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:54:20.281  URI: /js/a/gen/genTable/createMenu  IP: 127.0.0.1
2021-01-08 21:54:20.283 DEBUG 12672 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:54:20.283 DEBUG 12672 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:20.286 DEBUG 12672 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:54:20.287 DEBUG 12672 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:54:20.288 DEBUG 12672 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:54:20.290 DEBUG 12672 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:54:20.293 DEBUG 12672 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:54:20.294 DEBUG 12672 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:54:20.300 DEBUG 12672 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:54:20.330 INFO  12672 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: redirect:/a/sys/menu/form?menuName=employee&menuHref=/employee/tyuangong/list&permission=employee:tyuangong:view,employee:tyuangong:edit <<<<<<<<< /js/a/gen/genTable/createMenu >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#createMenu(GenTable, Model)
2021-01-08 21:54:20.339 DEBUG 12672 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:54:20.336  用时: 55毫秒  URI: /js/a/gen/genTable/createMenu  总内存: 603MB  已用内存: 271.855MB
2021-01-08 21:54:20.344 DEBUG 12672 [   log-save-9-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:54:20.345 DEBUG 12672 [   log-save-9-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:20.346 DEBUG 12672 [   log-save-9-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:54:20.347 DEBUG 12672 [   log-save-9-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347542154195988480(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:54:20.339(Timestamp), /js/a/gen/genTable/createMenu(String), GET(String), tableName=t_yuangong(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 55(Long)
2021-01-08 21:54:20.349 DEBUG 12672 [   log-save-9-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:54:20.351 DEBUG 12672 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:54:20.351  URI: /js/a/sys/menu/form  IP: 127.0.0.1
2021-01-08 21:54:20.461 DEBUG 12672 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} ORDER BY a.tree_sort DESC
2021-01-08 21:54:20.461 DEBUG 12672 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:20.466 DEBUG 12672 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? ORDER BY a.tree_sort DESC LIMIT 1
2021-01-08 21:54:20.467 DEBUG 12672 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String)
2021-01-08 21:54:20.472 DEBUG 12672 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 1
2021-01-08 21:54:20.478 DEBUG 12672 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:54:20.478 DEBUG 12672 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:20.483 DEBUG 12672 [nio-8980-exec-7] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2021-01-08 21:54:20.484 DEBUG 12672 [nio-8980-exec-7] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2021-01-08 21:54:20.490 DEBUG 12672 [nio-8980-exec-7] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2021-01-08 21:54:20.492 INFO  12672 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/menuForm <<<<<<<<< /js/a/sys/menu/form >>>>>>>>> com.jeesite.modules.sys.web.MenuController#form(Menu, Model)
2021-01-08 21:54:20.613 DEBUG 12672 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:54:20.614 DEBUG 12672 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:20.619 DEBUG 12672 [nio-8980-exec-7] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:54:20.623 DEBUG 12672 [nio-8980-exec-7] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_type(String), 1(String), 0(String)
2021-01-08 21:54:20.627 DEBUG 12672 [nio-8980-exec-7] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 21:54:20.686 DEBUG 12672 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:54:20.688 DEBUG 12672 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:20.695 DEBUG 12672 [nio-8980-exec-7] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:54:20.712 DEBUG 12672 [nio-8980-exec-7] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_show_hide(String), 1(String), 0(String)
2021-01-08 21:54:20.723 DEBUG 12672 [nio-8980-exec-7] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 21:54:20.731 DEBUG 12672 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:54:20.732 DEBUG 12672 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:20.739 DEBUG 12672 [nio-8980-exec-7] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:54:20.751 DEBUG 12672 [nio-8980-exec-7] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_weight(String), 1(String), 0(String)
2021-01-08 21:54:20.760 DEBUG 12672 [nio-8980-exec-7] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 4
2021-01-08 21:54:20.803 DEBUG 12672 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:54:20.800  用时: 449毫秒  URI: /js/a/sys/menu/form  总内存: 603MB  已用内存: 310.373MB
2021-01-08 21:54:20.814 DEBUG 12672 [   log-save-9-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:54:20.815 DEBUG 12672 [   log-save-9-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:20.816 DEBUG 12672 [   log-save-9-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:54:20.817 DEBUG 12672 [   log-save-9-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347542156142145536(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2021-01-08 21:54:20.803(Timestamp), /js/a/sys/menu/form(String), GET(String), menuName=employee&menuHref=/employee/tyuangong/list&permission=employee:tyuangong:view,employee:tyuangong:edit(String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 449(Long)
2021-01-08 21:54:20.819 DEBUG 12672 [   log-save-9-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:54:22.700 DEBUG 12672 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:54:22.700  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2021-01-08 21:54:22.702 DEBUG 12672 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:54:22.702 DEBUG 12672 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:22.706 DEBUG 12672 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:54:22.707 DEBUG 12672 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:54:22.709 DEBUG 12672 [nio-8980-exec-5] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:54:22.710 DEBUG 12672 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:54:22.715 DEBUG 12672 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:54:22.716 DEBUG 12672 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:54:22.726 DEBUG 12672 [nio-8980-exec-5] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:54:22.759 DEBUG 12672 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:22.764 DEBUG 12672 [nio-8980-exec-5] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2021-01-08 21:54:22.764 DEBUG 12672 [nio-8980-exec-5] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: t_yuangong(String), t_yuangong(String)
2021-01-08 21:54:22.766 DEBUG 12672 [nio-8980-exec-5] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2021-01-08 21:54:22.775 DEBUG 12672 [nio-8980-exec-5] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2021-01-08 21:54:22.776 DEBUG 12672 [nio-8980-exec-5] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:54:22.779 DEBUG 12672 [nio-8980-exec-5] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 11
2021-01-08 21:54:22.784 DEBUG 12672 [nio-8980-exec-5] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2021-01-08 21:54:22.785 DEBUG 12672 [nio-8980-exec-5] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:54:22.788 DEBUG 12672 [nio-8980-exec-5] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 2
2021-01-08 21:54:22.991 DEBUG 12672 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:54:22.994 DEBUG 12672 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will not be managed by Spring
2021-01-08 21:54:22.999 DEBUG 12672 [nio-8980-exec-5] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2021-01-08 21:54:23.000 DEBUG 12672 [nio-8980-exec-5] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2021-01-08 21:54:23.009 DEBUG 12672 [nio-8980-exec-5] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 31
2021-01-08 21:54:23.012 DEBUG 12672 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:54:23.012 DEBUG 12672 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will not be managed by Spring
2021-01-08 21:54:23.017 DEBUG 12672 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2021-01-08 21:54:23.017 DEBUG 12672 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2021-01-08 21:54:23.021 DEBUG 12672 [nio-8980-exec-5] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 4
2021-01-08 21:54:23.026 DEBUG 12672 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:23.032 DEBUG 12672 [nio-8980-exec-5] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2021-01-08 21:54:23.032 DEBUG 12672 [nio-8980-exec-5] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2021-01-08 21:54:23.034 DEBUG 12672 [nio-8980-exec-5] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2021-01-08 21:54:23.038 INFO  12672 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2021-01-08 21:54:23.094 DEBUG 12672 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:54:23.094 DEBUG 12672 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:23.101 DEBUG 12672 [nio-8980-exec-5] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:54:23.102 DEBUG 12672 [nio-8980-exec-5] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_yes_no(String), 1(String), 0(String)
2021-01-08 21:54:23.107 DEBUG 12672 [nio-8980-exec-5] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2021-01-08 21:54:23.163 DEBUG 12672 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:54:23.160  用时: 460毫秒  URI: /js/a/gen/genTable/form  总内存: 603MB  已用内存: 341.412MB
2021-01-08 21:54:23.169 DEBUG 12672 [   log-save-9-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:54:23.169 DEBUG 12672 [   log-save-9-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:23.170 DEBUG 12672 [   log-save-9-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:54:23.171 DEBUG 12672 [   log-save-9-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347542166040702976(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:54:23.163(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=t_yuangong(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 460(Long)
2021-01-08 21:54:23.173 DEBUG 12672 [   log-save-9-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:54:28.552 DEBUG 12672 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:54:28.552  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2021-01-08 21:54:28.554 DEBUG 12672 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2021-01-08 21:54:28.555 DEBUG 12672 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:28.560 DEBUG 12672 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2021-01-08 21:54:28.561 DEBUG 12672 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:54:28.562 DEBUG 12672 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2021-01-08 21:54:28.565 DEBUG 12672 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2021-01-08 21:54:28.570 DEBUG 12672 [nio-8980-exec-9] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2021-01-08 21:54:28.572 DEBUG 12672 [nio-8980-exec-9] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:54:28.577 DEBUG 12672 [nio-8980-exec-9] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 11
2021-01-08 21:54:28.887 DEBUG 12672 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE `js_gen_table` SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2021-01-08 21:54:28.888 DEBUG 12672 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:28.889 DEBUG 12672 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE `js_gen_table` SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ?
2021-01-08 21:54:28.891 DEBUG 12672 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: Tyuangong(String), t_yuangong(String), (String), (String), (String), crud(String), com.jeesite.modules(String), employee(String), (String), employee(String), employee(String), LX(String), C:\Users\Lx\work2\web(String), {"treeViewName":"","isHaveDelete":"1","bpmFormKey":"","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isBpmForm":"0","isImageUpload":"0"}(String), system(String), 2021-01-08 21:54:28.886(Timestamp), (String), t_yuangong(String)
2021-01-08 21:54:28.893 DEBUG 12672 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2021-01-08 21:54:28.894 DEBUG 12672 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:54:28.895 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:54:28.896 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), id(String), 10(Integer), int(String), id(String), id(String), id(String), String(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347540922890899456(String)
2021-01-08 21:54:28.897 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:54:28.899 DEBUG 12672 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:54:28.900 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:54:28.901 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), org_id(String), 20(Integer), int(String), 部门号(String), 部门号(String), orgId(String), Long(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"digits","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347540922916065280(String)
2021-01-08 21:54:28.903 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:54:28.905 DEBUG 12672 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:54:28.907 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:54:28.908 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), eid(String), 30(Integer), varchar(55)(String), 员工号(String), 员工号(String), eid(String), String(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347540922941231104(String)
2021-01-08 21:54:28.909 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:54:28.910 DEBUG 12672 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:54:28.911 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:54:28.912 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), name(String), 40(Integer), varchar(50)(String), 姓名(String), 姓名(String), name(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), LIKE(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347540922991562752(String)
2021-01-08 21:54:28.914 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:54:28.915 DEBUG 12672 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:54:28.916 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:54:28.917 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), sex(String), 50(Integer), varchar(50)(String), 性别(String), 性别(String), sex(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347540923025117184(String)
2021-01-08 21:54:28.918 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:54:28.920 DEBUG 12672 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:54:28.921 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:54:28.921 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), age(String), 60(Integer), varchar(50)(String), 年龄(String), 年龄(String), age(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347540923058671616(String)
2021-01-08 21:54:28.923 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:54:28.924 DEBUG 12672 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:54:28.925 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:54:28.926 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), zhiwei(String), 70(Integer), varchar(50)(String), 职位(String), 职位(String), zhiwei(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347540923079643136(String)
2021-01-08 21:54:28.927 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:54:28.929 DEBUG 12672 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:54:28.929 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:54:28.930 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), shifoubumenlingdao(String), 80(Integer), varchar(50)(String), 是否部门经理(String), 是否部门经理(String), shifoubumenlingdao(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347540923100614656(String)
2021-01-08 21:54:28.931 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:54:28.933 DEBUG 12672 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:54:28.933 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:54:28.934 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), loginname(String), 90(Integer), varchar(50)(String), 登录名(String), 登录名(String), loginname(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347540923138363392(String)
2021-01-08 21:54:28.938 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:54:28.939 DEBUG 12672 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:54:28.940 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:54:28.944 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), loginpw(String), 100(Integer), varchar(50)(String), 密码(String), 密码(String), loginpw(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347540923167723520(String)
2021-01-08 21:54:28.945 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:54:28.947 DEBUG 12672 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2021-01-08 21:54:28.949 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2021-01-08 21:54:28.949 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: t_yuangong(String), del(String), 110(Integer), varchar(50)(String), del(String), del(String), del(String), String(String), (String), 1(String), (String), (String), (String), (String), EQ(String), (String), hidden(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1347540923243220992(String)
2021-01-08 21:54:28.951 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2021-01-08 21:54:28.997 DEBUG 12672 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:54:28.997 DEBUG 12672 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:29.006 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC
2021-01-08 21:54:29.007 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: t_yuangong(String)
2021-01-08 21:54:29.009 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 0
2021-01-08 21:54:29.020 DEBUG 12672 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TyuangongDao.xml
2021-01-08 21:54:29.022 DEBUG 12672 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.employee.dao.TyuangongDao">
	
	<!-- 查询数据
	<select id="findList" resultType="Tyuangong">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2021-01-08 21:54:29.024 DEBUG 12672 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\mappings\modules\employee\TyuangongDao.xml
2021-01-08 21:54:29.025 DEBUG 12672 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tyuangong.java
2021-01-08 21:54:29.102 DEBUG 12672 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.entity;

import org.hibernate.validator.constraints.Length;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * employeeEntity
 * @author LX
 * @version 2021-01-08
 */
@Table(name="t_yuangong", alias="a", columns={
		@Column(name="id", attrName="id", label="id", isPK=true),
		@Column(name="org_id", attrName="orgId", label="部门号"),
		@Column(name="eid", attrName="eid", label="员工号", isPK=true),
		@Column(name="name", attrName="name", label="姓名", queryType=QueryType.LIKE),
		@Column(name="sex", attrName="sex", label="性别"),
		@Column(name="age", attrName="age", label="年龄"),
		@Column(name="zhiwei", attrName="zhiwei", label="职位"),
		@Column(name="shifoubumenlingdao", attrName="shifoubumenlingdao", label="是否部门经理"),
		@Column(name="loginname", attrName="loginname", label="登录名"),
		@Column(name="loginpw", attrName="loginpw", label="密码"),
		@Column(name="del", attrName="del", label="del", isInsert=false, isUpdate=false, isQuery=false),
	}, orderBy="a.id DESC, a.eid DESC"
)
public class Tyuangong extends DataEntity<Tyuangong> {
	
	private static final long serialVersionUID = 1L;
	private Long orgId;		// 部门号
	private String eid;		// 员工号
	private String name;		// 姓名
	private String sex;		// 性别
	private String age;		// 年龄
	private String zhiwei;		// 职位
	private String shifoubumenlingdao;		// 是否部门经理
	private String loginname;		// 登录名
	private String loginpw;		// 密码
	private String del;		// del
	
	public Tyuangong() {
		this(null, null);
	}

	public Tyuangong(String id, String eid){
		this.id = id;
		this.eid = eid;
	}
	
	public Long getOrgId() {
		return orgId;
	}

	public void setOrgId(Long orgId) {
		this.orgId = orgId;
	}
	
	public String getEid() {
		return eid;
	}

	public void setEid(String eid) {
		this.eid = eid;
	}
	
	@Length(min=0, max=50, message="姓名长度不能超过 50 个字符")
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}
	
	@Length(min=0, max=50, message="性别长度不能超过 50 个字符")
	public String getSex() {
		return sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}
	
	@Length(min=0, max=50, message="年龄长度不能超过 50 个字符")
	public String getAge() {
		return age;
	}

	public void setAge(String age) {
		this.age = age;
	}
	
	@Length(min=0, max=50, message="职位长度不能超过 50 个字符")
	public String getZhiwei() {
		return zhiwei;
	}

	public void setZhiwei(String zhiwei) {
		this.zhiwei = zhiwei;
	}
	
	@Length(min=0, max=50, message="是否部门经理长度不能超过 50 个字符")
	public String getShifoubumenlingdao() {
		return shifoubumenlingdao;
	}

	public void setShifoubumenlingdao(String shifoubumenlingdao) {
		this.shifoubumenlingdao = shifoubumenlingdao;
	}
	
	@Length(min=0, max=50, message="登录名长度不能超过 50 个字符")
	public String getLoginname() {
		return loginname;
	}

	public void setLoginname(String loginname) {
		this.loginname = loginname;
	}
	
	@Length(min=0, max=50, message="密码长度不能超过 50 个字符")
	public String getLoginpw() {
		return loginpw;
	}

	public void setLoginpw(String loginpw) {
		this.loginpw = loginpw;
	}
	
	public String getDel() {
		return del;
	}

	public void setDel(String del) {
		this.del = del;
	}
	
}
2021-01-08 21:54:29.106 DEBUG 12672 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\entity\Tyuangong.java
2021-01-08 21:54:29.107 DEBUG 12672 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TyuangongDao.java
2021-01-08 21:54:29.109 DEBUG 12672 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.employee.entity.Tyuangong;

/**
 * employeeDAO接口
 * @author LX
 * @version 2021-01-08
 */
@MyBatisDao
public interface TyuangongDao extends CrudDao<Tyuangong> {
	
}
2021-01-08 21:54:29.110 DEBUG 12672 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\dao\TyuangongDao.java
2021-01-08 21:54:29.111 DEBUG 12672 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\service\TyuangongService.java
2021-01-08 21:54:29.125 DEBUG 12672 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.service;

import java.util.List;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.jeesite.common.entity.Page;
import com.jeesite.common.service.CrudService;
import com.jeesite.modules.employee.entity.Tyuangong;
import com.jeesite.modules.employee.dao.TyuangongDao;

/**
 * employeeService
 * @author LX
 * @version 2021-01-08
 */
@Service
@Transactional(readOnly=true)
public class TyuangongService extends CrudService<TyuangongDao, Tyuangong> {
	
	/**
	 * 获取单条数据
	 * @param tyuangong
	 * @return
	 */
	@Override
	public Tyuangong get(Tyuangong tyuangong) {
		return super.get(tyuangong);
	}
	
	/**
	 * 查询分页数据
	 * @param tyuangong 查询条件
	 * @param tyuangong.page 分页对象
	 * @return
	 */
	@Override
	public Page<Tyuangong> findPage(Tyuangong tyuangong) {
		return super.findPage(tyuangong);
	}
	
	/**
	 * 保存数据（插入或更新）
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void save(Tyuangong tyuangong) {
		super.save(tyuangong);
	}
	
	/**
	 * 更新状态
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void updateStatus(Tyuangong tyuangong) {
		super.updateStatus(tyuangong);
	}
	
	/**
	 * 删除数据
	 * @param tyuangong
	 */
	@Override
	@Transactional(readOnly=false)
	public void delete(Tyuangong tyuangong) {
		super.delete(tyuangong);
	}
	
}
2021-01-08 21:54:29.126 DEBUG 12672 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\service\TyuangongService.java
2021-01-08 21:54:29.127 DEBUG 12672 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\web\TyuangongController.java
2021-01-08 21:54:29.140 DEBUG 12672 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.employee.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.jeesite.common.config.Global;
import com.jeesite.common.entity.Page;
import com.jeesite.common.web.BaseController;
import com.jeesite.modules.employee.entity.Tyuangong;
import com.jeesite.modules.employee.service.TyuangongService;

/**
 * employeeController
 * @author LX
 * @version 2021-01-08
 */
@Controller
@RequestMapping(value = "${adminPath}/employee/tyuangong")
public class TyuangongController extends BaseController {

	@Autowired
	private TyuangongService tyuangongService;
	
	/**
	 * 获取数据
	 */
	@ModelAttribute
	public Tyuangong get(String id, String eid, boolean isNewRecord) {
		Tyuangong tyuangong = new Tyuangong();
		tyuangong.setId(id);
		tyuangong.setEid(eid);
		tyuangong.setIsNewRecord(isNewRecord);
		return tyuangongService.getAndValid(tyuangong);
	}
	
	/**
	 * 查询列表
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = {"list", ""})
	public String list(Tyuangong tyuangong, Model model) {
		model.addAttribute("tyuangong", tyuangong);
		return "modules/employee/tyuangongList";
	}
	
	/**
	 * 查询列表数据
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = "listData")
	@ResponseBody
	public Page<Tyuangong> listData(Tyuangong tyuangong, HttpServletRequest request, HttpServletResponse response) {
		tyuangong.setPage(new Page<>(request, response));
		Page<Tyuangong> page = tyuangongService.findPage(tyuangong);
		return page;
	}

	/**
	 * 查看编辑表单
	 */
	@RequiresPermissions("employee:tyuangong:view")
	@RequestMapping(value = "form")
	public String form(Tyuangong tyuangong, Model model) {
		model.addAttribute("tyuangong", tyuangong);
		return "modules/employee/tyuangongForm";
	}

	/**
	 * 保存数据
	 */
	@RequiresPermissions("employee:tyuangong:edit")
	@PostMapping(value = "save")
	@ResponseBody
	public String save(@Validated Tyuangong tyuangong) {
		tyuangongService.save(tyuangong);
		return renderResult(Global.TRUE, text("保存employee成功！"));
	}
	
	/**
	 * 删除数据
	 */
	@RequiresPermissions("employee:tyuangong:edit")
	@RequestMapping(value = "delete")
	@ResponseBody
	public String delete(Tyuangong tyuangong) {
		tyuangongService.delete(tyuangong);
		return renderResult(Global.TRUE, text("删除employee成功！"));
	}
	
}
2021-01-08 21:54:29.142 DEBUG 12672 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\java\com\jeesite\modules\employee\web\TyuangongController.java
2021-01-08 21:54:29.142 DEBUG 12672 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongList.html
2021-01-08 21:54:29.162 DEBUG 12672 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: 'employee管理', libs: ['dataGrid']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header">
			<div class="box-title">
				<i class="fa icon-notebook"></i> ${text('employee管理')}
			</div>
			<div class="box-tools pull-right">
				<a href="#" class="btn btn-default" id="btnSearch" title="${text('查询')}"><i class="fa fa-filter"></i> ${text('查询')}</a>
				<% if(hasPermi('employee:tyuangong:edit')){ %>
					<a href="${ctx}/employee/tyuangong/form" class="btn btn-default btnTool" title="${text('新增employee')}"><i class="fa fa-plus"></i> ${text('新增')}</a>
				<% } %>
				<a href="#" class="btn btn-default" id="btnSetting" title="${text('设置')}"><i class="fa fa-navicon"></i></a>
			</div>
		</div>
		<div class="box-body">
			<#form:form id="searchForm" model="${tyuangong}" action="${ctx}/employee/tyuangong/listData" method="post" class="form-inline hide"
					data-page-no="${parameter.pageNo}" data-page-size="${parameter.pageSize}" data-order-by="${parameter.orderBy}">
				<div class="form-group">
					<label class="control-label">${text('部门号')}：</label>
					<div class="control-inline">
						<#form:input path="orgId" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('姓名')}：</label>
					<div class="control-inline">
						<#form:input path="name" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('性别')}：</label>
					<div class="control-inline">
						<#form:input path="sex" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('年龄')}：</label>
					<div class="control-inline">
						<#form:input path="age" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('职位')}：</label>
					<div class="control-inline">
						<#form:input path="zhiwei" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('是否部门经理')}：</label>
					<div class="control-inline">
						<#form:input path="shifoubumenlingdao" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('登录名')}：</label>
					<div class="control-inline">
						<#form:input path="loginname" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('密码')}：</label>
					<div class="control-inline">
						<#form:input path="loginpw" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<button type="submit" class="btn btn-primary btn-sm">${text('查询')}</button>
					<button type="reset" class="btn btn-default btn-sm">${text('重置')}</button>
				</div>
			</#form:form>
			<table id="dataGrid"></table>
			<div id="dataGridPage"></div>
		</div>
	</div>
</div>
<% } %>
<script>
// 初始化DataGrid对象
$('#dataGrid').dataGrid({
	searchForm: $("#searchForm"),
	columnModel: [
		{header:'${text("部门号")}', name:'orgId', index:'a.org_id', width:150, align:"left", frozen:true, formatter: function(val, obj, row, act){
			return '<a href="${ctx}/employee/tyuangong/form?id='+row.id+'&eid='+row.eid+'" class="btnList" data-title="${text("编辑employee")}">'+(val||row.id)+'</a>';
		}},
		{header:'${text("姓名")}', name:'name', index:'a.name', width:150, align:"left"},
		{header:'${text("性别")}', name:'sex', index:'a.sex', width:150, align:"left"},
		{header:'${text("年龄")}', name:'age', index:'a.age', width:150, align:"left"},
		{header:'${text("职位")}', name:'zhiwei', index:'a.zhiwei', width:150, align:"left"},
		{header:'${text("是否部门经理")}', name:'shifoubumenlingdao', index:'a.shifoubumenlingdao', width:150, align:"left"},
		{header:'${text("登录名")}', name:'loginname', index:'a.loginname', width:150, align:"left"},
		{header:'${text("密码")}', name:'loginpw', index:'a.loginpw', width:150, align:"left"},
		{header:'${text("操作")}', name:'actions', width:120, sortable:false, title:false, formatter: function(val, obj, row, act){
			var actions = [];
			<% if(hasPermi('employee:tyuangong:edit')){ %>
				actions.push('<a href="${ctx}/employee/tyuangong/form?id='+row.id+'&eid='+row.eid+'" class="btnList" title="${text("编辑employee")}"><i class="fa fa-pencil"></i></a>&nbsp;');
				actions.push('<a href="${ctx}/employee/tyuangong/delete?id='+row.id+'&eid='+row.eid+'" class="btnList" title="${text("删除employee")}" data-confirm="${text("确认要删除该employee吗？")}"><i class="fa fa-trash-o"></i></a>&nbsp;');
			<% } %>
			return actions.join('');
		}}
	],
	// 加载成功后执行事件
	ajaxSuccess: function(data){
		
	}
});
</script>
2021-01-08 21:54:29.163 DEBUG 12672 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongList.html
2021-01-08 21:54:29.164 DEBUG 12672 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongForm.html
2021-01-08 21:54:29.192 DEBUG 12672 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: 'employee管理', libs: ['validate']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header with-border">
			<div class="box-title">
				<i class="fa icon-note"></i> ${text(tyuangong.isNewRecord ? '新增employee' : '编辑employee')}
			</div>
			<div class="box-tools pull-right">
				<button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
			</div>
		</div>
		<#form:form id="inputForm" model="${tyuangong}" action="${ctx}/employee/tyuangong/save" method="post" class="form-horizontal">
			<div class="box-body">
				<div class="form-unit">${text('基本信息')}</div>
				<#form:hidden path="id"/>
				<div class="row">
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('部门号')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="orgId" class="form-control digits"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required ">*</span> ${text('员工号')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="eid" maxlength="55" readonly="${!tyuangong.isNewRecord}" class="form-control required abc"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('姓名')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="name" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('性别')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="sex" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('年龄')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="age" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('职位')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="zhiwei" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('是否部门经理')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="shifoubumenlingdao" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('登录名')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="loginname" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('密码')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="loginpw" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="box-footer">
				<div class="row">
					<div class="col-sm-offset-2 col-sm-10">
						<% if (hasPermi('employee:tyuangong:edit')){ %>
							<button type="submit" class="btn btn-sm btn-primary" id="btnSubmit"><i class="fa fa-check"></i> ${text('保 存')}</button>&nbsp;
						<% } %>
						<button type="button" class="btn btn-sm btn-default" id="btnCancel" onclick="js.closeCurrentTabPage()"><i class="fa fa-reply-all"></i> ${text('关 闭')}</button>
					</div>
				</div>
			</div>
		</#form:form>
	</div>
</div>
<% } %>
<script>
$("#inputForm").validate({
	submitHandler: function(form){
		js.ajaxSubmitForm($(form), function(data){
			js.showMessage(data.message);
			if(data.result == Global.TRUE){
				js.closeCurrentTabPage(function(contentWindow){
					contentWindow.page();
				});
			}
		}, "json");
    }
});
</script>
2021-01-08 21:54:29.193 DEBUG 12672 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> C:\Users\Lx\work2\web\src\main\resources\views\modules\employee\tyuangongForm.html
2021-01-08 21:54:29.228 DEBUG 12672 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:54:29.197  用时: 645毫秒  URI: /js/a/gen/genTable/save  总内存: 603MB  已用内存: 402.473MB
2021-01-08 21:54:29.240 DEBUG 12672 [   log-save-9-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:54:29.244 DEBUG 12672 [   log-save-9-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:29.244 DEBUG 12672 [   log-save-9-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:54:29.245 DEBUG 12672 [   log-save-9-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347542191474962432(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:54:29.228(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=t_yuangong&comments=t_yuangong&className=Tyuangong&functionAuthor=LX&parentTableName=&parentTableFkName=&remarks=&columnList[0].id=1347540922890899456&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=id&columnList[0].columnType=int&columnList[0].attrType=String&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=6/4/8&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1347540922916065280&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=org_id&columnList[1].comments=部门号&columnList[1].columnType=int&columnList[1].attrType=Long&columnList[1].fullAttrName=orgId&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=6/4/8&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[1].optionMap['fieldValid']=digits&columnList[2].id=1347540922941231104&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=eid&columnList[2].comments=员工号&columnList[2].columnType=varchar(55)&columnList[2].attrType=String&columnList[2].fullAttrName=eid&!columnList[2].isPk=&columnList[2].isPk=1&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&!columnList[2].isList=&!columnList[2].isQuery=&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].isRequired=1&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=6/4/8&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[2].optionMap['fieldValid']=abc&columnList[3].id=1347540922991562752&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=name&columnList[3].comments=姓名&columnList[3].columnType=varchar(50)&columnList[3].attrType=String&columnList[3].fullAttrName=name&!columnList[3].isPk=&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&columnList[3].isUpdate=1&!columnList[3].isList=&columnList[3].isList=1&!columnList[3].isQuery=&columnList[3].isQuery=1&columnList[3].queryType=LIKE&!columnList[3].isEdit=&columnList[3].isEdit=1&!columnList[3].isRequired=&columnList[3].showType=input&columnList[3].optionMap['gridRowCol']=6/4/8&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[4].id=1347540923025117184&columnList[4].status=&columnList[4].columnSort=50&columnList[4].columnName=sex&columnList[4].comments=性别&columnList[4].columnType=varchar(50)&columnList[4].attrType=String&columnList[4].fullAttrName=sex&!columnList[4].isPk=&!columnList[4].isInsert=&columnList[4].isInsert=1&!columnList[4].isUpdate=&columnList[4].isUpdate=1&!columnList[4].isList=&columnList[4].isList=1&!columnList[4].isQuery=&columnList[4].isQuery=1&columnList[4].queryType=EQ&!columnList[4].isEdit=&columnList[4].isEdit=1&!columnList[4].isRequired=&columnList[4].showType=input&columnList[4].optionMap['gridRowCol']=6/4/8&!columnList[4].optionMap['isNewLine']=&columnList[4].optionMap['dictName']=&columnList[4].optionMap['dictType']=&!columnList[4].optionMap['fieldValid']=&columnList[5].id=1347540923058671616&columnList[5].status=&columnList[5].columnSort=60&columnList[5].columnName=age&columnList[5].comments=年龄&columnList[5].columnType=varchar(50)&columnList[5].attrType=String&columnList[5].fullAttrName=age&!columnList[5].isPk=&!columnList[5].isInsert=&columnList[5].isInsert=1&!columnList[5].isUpdate=&columnList[5].isUpdate=1&!columnList[5].isList=&columnList[5].isList=1&!columnList[5].isQuery=&columnList[5].isQuery=1&columnList[5].queryType=EQ&!columnList[5].isEdit=&columnList[5].isEdit=1&!columnList[5].isRequired=&columnList[5].showType=input&columnList[5].optionMap['gridRowCol']=6/4/8&!columnList[5].optionMap['isNewLine']=&columnList[5].optionMap['dictName']=&columnList[5].optionMap['dictType']=&!columnList[5].optionMap['fieldValid']=&columnList[6].id=1347540923079643136&columnList[6].status=&columnList[6].columnSort=70&columnList[6].columnName=zhiwei&columnList[6].comments=职位&columnList[6].columnType=varchar(50)&columnList[6].attrType=String&columnList[6].fullAttrName=zhiwei&!columnList[6].isPk=&!columnList[6].isInsert=&columnList[6].isInsert=1&!columnList[6].isUpdate=&columnList[6].isUpdate=1&!columnList[6].isList=&columnList[6].isList=1&!columnList[6].isQuery=&columnList[6].isQuery=1&columnList[6].queryType=EQ&!columnList[6].isEdit=&columnList[6].isEdit=1&!columnList[6].isRequired=&columnList[6].showType=input&columnList[6].optionMap['gridRowCol']=6/4/8&!columnList[6].optionMap['isNewLine']=&columnList[6].optionMap['dictName']=&columnList[6].optionMap['dictType']=&!columnList[6].optionMap['fieldValid']=&columnList[7].id=1347540923100614656&columnList[7].status=&columnList[7].columnSort=80&columnList[7].columnName=shifoubumenlingdao&columnList[7].comments=是否部门经理&columnList[7].columnType=varchar(50)&columnList[7].attrType=String&columnList[7].fullAttrName=shifoubumenlingdao&!columnList[7].isPk=&!columnList[7].isInsert=&columnList[7].isInsert=1&!columnList[7].isUpdate=&columnList[7].isUpdate=1&!columnList[7].isList=&columnList[7].isList=1&!columnList[7].isQuery=&columnList[7].isQuery=1&columnList[7].queryType=EQ&!columnList[7].isEdit=&columnList[7].isEdit=1&!columnList[7].isRequired=&columnList[7].showType=input&columnList[7].optionMap['gridRowCol']=6/4/8&!columnList[7].optionMap['isNewLine']=&columnList[7].optionMap['dictName']=&columnList[7].optionMap['dictType']=&!columnList[7].optionMap['fieldValid']=&columnList[8].id=1347540923138363392&columnList[8].status=&columnList[8].columnSort=90&columnList[8].columnName=loginname&columnList[8].comments=登录名&columnList[8].columnType=varchar(50)&columnList[8].attrType=String&columnList[8].fullAttrName=loginname&!columnList[8].isPk=&!columnList[8].isInsert=&columnList[8].isInsert=1&!columnList[8].isUpdate=&columnList[8].isUpdate=1&!columnList[8].isList=&columnList[8].isList=1&!columnList[8].isQuery=&columnList[8].isQuery=1&columnList[8].queryType=EQ&!columnList[8].isEdit=&columnList[8].isEdit=1&!columnList[8].isRequired=&columnList[8].showType=input&columnList[8].optionMap['gridRowCol']=6/4/8&!columnList[8].optionMap['isNewLine']=&columnList[8].optionMap['dictName']=&columnList[8].optionMap['dictType']=&!columnList[8].optionMap['fieldValid']=&columnList[9].id=1347540923167723520&columnList[9].status=&columnList[9].columnSort=100&columnList[9].columnName=loginpw&columnList[9].comments=密码&columnList[9].columnType=varchar(50)&columnList[9].attrType=String&columnList[9].fullAttrName=loginpw&!columnList[9].isPk=&!columnList[9].isInsert=&columnList[9].isInsert=1&!columnList[9].isUpdate=&columnList[9].isUpdate=1&!columnList[9].isList=&columnList[9].isList=1&!columnList[9].isQuery=&columnList[9].isQuery=1&columnList[9].queryType=EQ&!columnList[9].isEdit=&columnList[9].isEdit=1&!columnList[9].isRequired=&columnList[9].showType=input&columnList[9].optionMap['gridRowCol']=6/4/8&!columnList[9].optionMap['isNewLine']=&columnList[9].optionMap['dictName']=&columnList[9].optionMap['dictType']=&!columnList[9].optionMap['fieldValid']=&columnList[10].id=1347540923243220992&columnList[10].status=&columnList[10].columnSort=110&columnList[10].columnName=del&columnList[10].comments=del&columnList[10].columnType=varchar(50)&columnList[10].attrType=String&columnList[10].fullAttrName=del&!columnList[10].isPk=&!columnList[10].isInsert=&!columnList[10].isUpdate=&!columnList[10].isList=&!columnList[10].isQuery=&columnList[10].queryType=EQ&!columnList[10].isEdit=&!columnList[10].isRequired=&columnList[10].showType=hidden&columnList[10].optionMap['gridRowCol']=6/4/8&!columnList[10].optionMap['isNewLine']=&columnList[10].optionMap['dictName']=&columnList[10].optionMap['dictType']=&!columnList[10].optionMap['fieldValid']=&tplCategory=crud&packageName=com.jeesite.modules&moduleName=employee&subModuleName=&functionName=employee&functionNameSimple=employee&genBaseDir=C:\Users\Lx\work2\web&!optionMap['isHaveDisableEnable']=&optionMap['isHaveDisableEnable']=0&!optionMap['isHaveDelete']=&optionMap['isHaveDelete']=1&optionMap['treeViewCode']=&optionMap['treeViewName']=&!optionMap['isImageUpload']=&optionMap['isImageUpload']=0&!optionMap['isFileUpload']=&optionMap['isFileUpload']=0&!optionMap['isBpmForm']=&optionMap['isBpmForm']=0&optionMap['bpmFormKey']=&genFlag=2&replaceFile=1&!replaceFile=0(String), t_yuangong(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 645(Long)
2021-01-08 21:54:29.251 DEBUG 12672 [   log-save-9-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:54:29.276 DEBUG 12672 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:54:29.276  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:54:29.281 DEBUG 12672 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:54:29.281 DEBUG 12672 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:29.292 DEBUG 12672 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:54:29.292 DEBUG 12672 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:54:29.295 DEBUG 12672 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:54:29.295 DEBUG 12672 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:54:29.299 DEBUG 12672 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:54:29.305 DEBUG 12672 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:54:29.304  用时: 28毫秒  URI: /js/a/gen/genTable/listData  总内存: 603MB  已用内存: 405.287MB
2021-01-08 21:54:29.310 DEBUG 12672 [   log-save-9-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:54:29.310 DEBUG 12672 [   log-save-9-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:54:29.311 DEBUG 12672 [   log-save-9-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:54:29.328 DEBUG 12672 [   log-save-9-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347542191802118144(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:54:29.305(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 28(Long)
2021-01-08 21:54:29.330 DEBUG 12672 [   log-save-9-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:55:05.938 DEBUG 12672 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:55:05.937  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2021-01-08 21:55:05.940 INFO  12672 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2021-01-08 21:55:05.953 DEBUG 12672 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:55:05.949  用时: 12毫秒  URI: /js/a/gen/genTable/list  总内存: 603MB  已用内存: 415.075MB
2021-01-08 21:55:05.959 DEBUG 12672 [   log-save-9-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:55:05.960 DEBUG 12672 [   log-save-9-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:55:05.961 DEBUG 12672 [   log-save-9-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:55:05.962 DEBUG 12672 [   log-save-9-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347542345506582528(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:55:05.951(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 12(Long)
2021-01-08 21:55:05.965 DEBUG 12672 [   log-save-9-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:55:06.106 DEBUG 12672 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:55:06.106  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:55:06.112 DEBUG 12672 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:55:06.112 DEBUG 12672 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:55:06.138 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:55:06.140 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:55:06.142 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:55:06.143 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:55:06.145 DEBUG 12672 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:55:06.159 DEBUG 12672 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:55:06.158  用时: 52毫秒  URI: /js/a/gen/genTable/listData  总内存: 603MB  已用内存: 416.013MB
2021-01-08 21:55:06.163 DEBUG 12672 [   log-save-9-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:55:06.163 DEBUG 12672 [   log-save-9-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f4fa465] will be managed by Spring
2021-01-08 21:55:06.165 DEBUG 12672 [   log-save-9-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:55:06.169 DEBUG 12672 [   log-save-9-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347542346378997760(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:55:06.159(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 52(Long)
2021-01-08 21:55:06.170 DEBUG 12672 [   log-save-9-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:55:32.752 INFO  9904 [           main] [com.jeesite.modules.Application        ] - Starting Application on DESKTOP-0IUV8EB with PID 9904 (C:\Users\Lx\work2\web\src\main\webapp\WEB-INF\classes started by Lx in C:\Users\Lx\work2\web)
2021-01-08 21:55:32.759 DEBUG 9904 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.3.4.RELEASE, Spring v5.2.9.RELEASE
2021-01-08 21:55:32.760 INFO  9904 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2021-01-08 21:55:36.522 INFO  9904 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2021-01-08 21:55:36.524 INFO  9904 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2021-01-08 21:55:38.744 INFO  9904 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/Lx
2021-01-08 21:55:38.745 INFO  9904 [           main] [com.jeesite.common.config.Global       ] - user.dir: C:/Users/Lx/work2/web
2021-01-08 21:55:38.745 INFO  9904 [           main] [com.jeesite.common.config.Global       ] - logPath: C:/Users/Lx/work2/web/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.2 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：adfb80499b32e1492729a84d62f8cd98
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2021-01-08 21:55:40.464 DEBUG 9904 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2021-01-08 21:55:41.549 INFO  9904 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2021-01-08 21:55:44.009 INFO  9904 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2021-01-08 21:55:49.733 DEBUG 9904 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@738ae785] will be managed by Spring
2021-01-08 21:55:50.345 DEBUG 9904 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2021-01-08 21:55:50.371 DEBUG 9904 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2021-01-08 21:55:50.415 DEBUG 9904 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 53
2021-01-08 21:55:50.426 DEBUG 9904 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2021-01-08 21:55:50.429 DEBUG 9904 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2021-01-08 21:55:50.431 DEBUG 9904 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2021-01-08 21:55:50.437 DEBUG 9904 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2021-01-08 21:55:50.494 INFO  9904 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2021-01-08 21:55:52.662 INFO  9904 [           main] [com.jeesite.modules.Application        ] - Started Application in 21.324 seconds (JVM running for 22.561)
2021-01-08 21:56:27.881 DEBUG 9904 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = #{userCode}
2021-01-08 21:56:27.890 DEBUG 9904 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@738ae785] will be managed by Spring
2021-01-08 21:56:27.897 DEBUG 9904 [nio-8980-exec-2] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = ?
2021-01-08 21:56:27.899 DEBUG 9904 [nio-8980-exec-2] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2021-01-08 21:56:27.916 DEBUG 9904 [nio-8980-exec-2] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2021-01-08 21:56:28.175 DEBUG 9904 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2021-01-08 21:56:28.175 DEBUG 9904 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@738ae785] will be managed by Spring
2021-01-08 21:56:28.183 DEBUG 9904 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2021-01-08 21:56:28.184 DEBUG 9904 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2021-01-08 21:56:28.198 DEBUG 9904 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2021-01-08 21:56:28.242 DEBUG 9904 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 7毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:56:28.247 DEBUG 9904 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@738ae785] will be managed by Spring
2021-01-08 21:56:28.259 DEBUG 9904 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:56:28.262 DEBUG 9904 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2021-01-08 21:56:28.378 DEBUG 9904 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 21:56:29.808 DEBUG 9904 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 8毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:56:29.815 DEBUG 9904 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@738ae785] will be managed by Spring
2021-01-08 21:56:29.830 DEBUG 9904 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2021-01-08 21:56:29.833 DEBUG 9904 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_sys_code(String), 1(String), 0(String)
2021-01-08 21:56:29.847 DEBUG 9904 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2021-01-08 21:56:30.805 DEBUG 9904 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:56:30.800  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2021-01-08 21:56:30.916 INFO  9904 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2021-01-08 21:56:31.191 DEBUG 9904 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:56:31.140  用时: 340毫秒  URI: /js/a/gen/genTable/list  总内存: 607MB  已用内存: 200.200MB
2021-01-08 21:56:31.229 DEBUG 9904 [  log-save-10-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:56:31.230 DEBUG 9904 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@738ae785] will be managed by Spring
2021-01-08 21:56:31.241 DEBUG 9904 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2021-01-08 21:56:31.242 DEBUG 9904 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2021-01-08 21:56:31.373 DEBUG 9904 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 74
2021-01-08 21:56:31.392 DEBUG 9904 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:56:31.395 DEBUG 9904 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@738ae785] will be managed by Spring
2021-01-08 21:56:31.395 DEBUG 9904 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:56:31.404 DEBUG 9904 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347542703002329088(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:56:31.185(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 340(Long)
2021-01-08 21:56:31.407 DEBUG 9904 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:56:31.965 DEBUG 9904 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:56:31.965  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2021-01-08 21:56:32.176 DEBUG 9904 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 28毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2021-01-08 21:56:32.177 DEBUG 9904 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@738ae785] will be managed by Spring
2021-01-08 21:56:32.319 DEBUG 9904 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2021-01-08 21:56:32.319 DEBUG 9904 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:56:32.326 DEBUG 9904 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2021-01-08 21:56:32.326 DEBUG 9904 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2021-01-08 21:56:32.329 DEBUG 9904 [nio-8980-exec-8] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 3
2021-01-08 21:56:32.398 DEBUG 9904 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:56:32.396  用时: 431毫秒  URI: /js/a/gen/genTable/listData  总内存: 607MB  已用内存: 238.707MB
2021-01-08 21:56:32.409 DEBUG 9904 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:56:32.411 DEBUG 9904 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@738ae785] will be managed by Spring
2021-01-08 21:56:32.412 DEBUG 9904 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:56:32.414 DEBUG 9904 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347542708090019840(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2021-01-08 21:56:32.398(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 431(Long)
2021-01-08 21:56:32.415 DEBUG 9904 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:56:34.101 DEBUG 9904 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:56:34.101  URI: /js/a/employee/tyuangong/list  IP: 127.0.0.1
2021-01-08 21:56:34.200 INFO  9904 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/employee/tyuangongList <<<<<<<<< /js/a/employee/tyuangong/list >>>>>>>>> com.jeesite.modules.employee.web.TyuangongController#list(Tyuangong, Model)
2021-01-08 21:56:34.249 DEBUG 9904 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:56:34.245  用时: 144毫秒  URI: /js/a/employee/tyuangong/list  总内存: 607MB  已用内存: 255.926MB
2021-01-08 21:56:34.257 DEBUG 9904 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:56:34.258 DEBUG 9904 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@738ae785] will be managed by Spring
2021-01-08 21:56:34.259 DEBUG 9904 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:56:34.260 DEBUG 9904 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347542715849482240(String), access(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:56:34.248(Timestamp), /js/a/employee/tyuangong/list(String), GET(String), (String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 144(Long)
2021-01-08 21:56:34.266 DEBUG 9904 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:56:34.418 DEBUG 9904 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:56:34.417  URI: /js/a/employee/tyuangong/listData  IP: 127.0.0.1
2021-01-08 21:56:34.522 DEBUG 9904 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.id DESC, a.eid DESC
2021-01-08 21:56:34.528 DEBUG 9904 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@738ae785] will be managed by Spring
2021-01-08 21:56:34.574 DEBUG 9904 [nio-8980-exec-4] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT count(0) FROM `t_yuangong` a
2021-01-08 21:56:34.577 DEBUG 9904 [nio-8980-exec-4] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:56:34.668 DEBUG 9904 [nio-8980-exec-4] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.id DESC, a.eid DESC LIMIT 20
2021-01-08 21:56:34.669 DEBUG 9904 [nio-8980-exec-4] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:56:34.677 DEBUG 9904 [nio-8980-exec-4] [c.j.m.e.dao.TyuangongDao.findList      ] - <==      Total: 8
2021-01-08 21:56:34.697 DEBUG 9904 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:56:34.693  用时: 276毫秒  URI: /js/a/employee/tyuangong/listData  总内存: 607MB  已用内存: 262.175MB
2021-01-08 21:56:34.747 DEBUG 9904 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:56:34.747 DEBUG 9904 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@738ae785] will be managed by Spring
2021-01-08 21:56:34.748 DEBUG 9904 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:56:34.750 DEBUG 9904 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347542717732724736(String), select(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:56:34.697(Timestamp), /js/a/employee/tyuangong/listData(String), POST(String), orgId=&name=&sex=&age=&zhiwei=&shifoubumenlingdao=&loginname=&loginpw=&pageNo=&pageSize=&orderBy=(String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 276(Long)
2021-01-08 21:56:34.751 DEBUG 9904 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:57:28.759 DEBUG 9904 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:57:28.759  URI: /js/a/employee/tyuangong/list  IP: 127.0.0.1
2021-01-08 21:57:28.808 INFO  9904 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/employee/tyuangongList <<<<<<<<< /js/a/employee/tyuangong/list >>>>>>>>> com.jeesite.modules.employee.web.TyuangongController#list(Tyuangong, Model)
2021-01-08 21:57:28.825 DEBUG 9904 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:57:28.821  用时: 62毫秒  URI: /js/a/employee/tyuangong/list  总内存: 607MB  已用内存: 272.431MB
2021-01-08 21:57:28.833 DEBUG 9904 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:57:28.833 DEBUG 9904 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@738ae785] will be managed by Spring
2021-01-08 21:57:28.834 DEBUG 9904 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:57:28.836 DEBUG 9904 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347542944762011648(String), access(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:57:28.825(Timestamp), /js/a/employee/tyuangong/list(String), GET(String), (String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 62(Long)
2021-01-08 21:57:28.837 DEBUG 9904 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2021-01-08 21:57:29.144 DEBUG 9904 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:57:29.144  URI: /js/a/employee/tyuangong/listData  IP: 127.0.0.1
2021-01-08 21:57:29.191 DEBUG 9904 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.id DESC, a.eid DESC
2021-01-08 21:57:29.191 DEBUG 9904 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@738ae785] will be managed by Spring
2021-01-08 21:57:29.207 DEBUG 9904 [io-8980-exec-10] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT count(0) FROM `t_yuangong` a
2021-01-08 21:57:29.207 DEBUG 9904 [io-8980-exec-10] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:57:29.211 DEBUG 9904 [io-8980-exec-10] [c.j.m.e.dao.TyuangongDao.findList      ] - ==>  Preparing: SELECT a.`id` AS "id", a.`org_id` AS "orgId", a.`eid` AS "eid", a.`name` AS "name", a.`sex` AS "sex", a.`age` AS "age", a.`zhiwei` AS "zhiwei", a.`shifoubumenlingdao` AS "shifoubumenlingdao", a.`loginname` AS "loginname", a.`loginpw` AS "loginpw", a.`del` AS "del" FROM `t_yuangong` a ORDER BY a.id DESC, a.eid DESC LIMIT 20
2021-01-08 21:57:29.212 DEBUG 9904 [io-8980-exec-10] [c.j.m.e.dao.TyuangongDao.findList      ] - ==> Parameters: 
2021-01-08 21:57:29.235 DEBUG 9904 [io-8980-exec-10] [c.j.m.e.dao.TyuangongDao.findList      ] - <==      Total: 8
2021-01-08 21:57:29.257 DEBUG 9904 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:57:29.253  用时: 109毫秒  URI: /js/a/employee/tyuangong/listData  总内存: 607MB  已用内存: 275.896MB
2021-01-08 21:57:29.286 DEBUG 9904 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2021-01-08 21:57:29.287 DEBUG 9904 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@738ae785] will be managed by Spring
2021-01-08 21:57:29.288 DEBUG 9904 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-01-08 21:57:29.290 DEBUG 9904 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1347542946573950976(String), select(String), 员工信息(String), system(String), 超级管理员(String), 2021-01-08 21:57:29.257(Timestamp), /js/a/employee/tyuangong/listData(String), POST(String), orgId=&name=&sex=&age=&zhiwei=&shifoubumenlingdao=&loginname=&loginpw=&pageNo=&pageSize=&orderBy=(String), (String), Tyuangong(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36(String), Windows 10(String), Chrome 8(String), 109(Long)
2021-01-08 21:57:29.430 DEBUG 9904 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
